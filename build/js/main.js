!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){function i(e){var t=!!e&&"length"in e&&e.length,i=pe.type(e);return"function"!==i&&!pe.isWindow(e)&&("array"===i||0===t||"number"==typeof t&&t>0&&t-1 in e)}function n(e,t,i){if(pe.isFunction(t))return pe.grep(e,function(e,n){return!!t.call(e,n,e)!==i});if(t.nodeType)return pe.grep(e,function(e){return e===t!==i});if("string"==typeof t){if(Ce.test(t))return pe.filter(t,e,i);t=pe.filter(t,e)}return pe.grep(e,function(e){return pe.inArray(e,t)>-1!==i})}function s(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}function a(e){var t={};return pe.each(e.match(Me)||[],function(e,i){t[i]=!0}),t}function o(){ne.addEventListener?(ne.removeEventListener("DOMContentLoaded",r),e.removeEventListener("load",r)):(ne.detachEvent("onreadystatechange",r),e.detachEvent("onload",r))}function r(){(ne.addEventListener||"load"===e.event.type||"complete"===ne.readyState)&&(o(),pe.ready())}function l(e,t,i){if(void 0===i&&1===e.nodeType){var n="data-"+t.replace(Ae,"-$1").toLowerCase();if(i=e.getAttribute(n),"string"==typeof i){try{i="true"===i||"false"!==i&&("null"===i?null:+i+""===i?+i:Ne.test(i)?pe.parseJSON(i):i)}catch(s){}pe.data(e,t,i)}else i=void 0}return i}function h(e){var t;for(t in e)if(("data"!==t||!pe.isEmptyObject(e[t]))&&"toJSON"!==t)return!1;return!0}function u(e,t,i,n){if(ze(e)){var s,a,o=pe.expando,r=e.nodeType,l=r?pe.cache:e,h=r?e[o]:e[o]&&o;if(h&&l[h]&&(n||l[h].data)||void 0!==i||"string"!=typeof t)return h||(h=r?e[o]=ie.pop()||pe.guid++:o),l[h]||(l[h]=r?{}:{toJSON:pe.noop}),"object"!=typeof t&&"function"!=typeof t||(n?l[h]=pe.extend(l[h],t):l[h].data=pe.extend(l[h].data,t)),a=l[h],n||(a.data||(a.data={}),a=a.data),void 0!==i&&(a[pe.camelCase(t)]=i),"string"==typeof t?(s=a[t],null==s&&(s=a[pe.camelCase(t)])):s=a,s}}function c(e,t,i){if(ze(e)){var n,s,a=e.nodeType,o=a?pe.cache:e,r=a?e[pe.expando]:pe.expando;if(o[r]){if(t&&(n=i?o[r]:o[r].data)){pe.isArray(t)?t=t.concat(pe.map(t,pe.camelCase)):t in n?t=[t]:(t=pe.camelCase(t),t=t in n?[t]:t.split(" ")),s=t.length;for(;s--;)delete n[t[s]];if(i?!h(n):!pe.isEmptyObject(n))return}(i||(delete o[r].data,h(o[r])))&&(a?pe.cleanData([e],!0):ce.deleteExpando||o!=o.window?delete o[r]:o[r]=void 0)}}}function d(e,t,i,n){var s,a=1,o=20,r=n?function(){return n.cur()}:function(){return pe.css(e,t,"")},l=r(),h=i&&i[3]||(pe.cssNumber[t]?"":"px"),u=(pe.cssNumber[t]||"px"!==h&&+l)&&Oe.exec(pe.css(e,t));if(u&&u[3]!==h){h=h||u[3],i=i||[],u=+l||1;do a=a||".5",u/=a,pe.style(e,t,u+h);while(a!==(a=r()/l)&&1!==a&&--o)}return i&&(u=+u||+l||0,s=i[1]?u+(i[1]+1)*i[2]:+i[2],n&&(n.unit=h,n.start=u,n.end=s)),s}function p(e){var t=Ye.split("|"),i=e.createDocumentFragment();if(i.createElement)for(;t.length;)i.createElement(t.pop());return i}function f(e,t){var i,n,s=0,a="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):void 0;if(!a)for(a=[],i=e.childNodes||e;null!=(n=i[s]);s++)!t||pe.nodeName(n,t)?a.push(n):pe.merge(a,f(n,t));return void 0===t||t&&pe.nodeName(e,t)?pe.merge([e],a):a}function m(e,t){for(var i,n=0;null!=(i=e[n]);n++)pe._data(i,"globalEval",!t||pe._data(t[n],"globalEval"))}function g(e){Be.test(e.type)&&(e.defaultChecked=e.checked)}function v(e,t,i,n,s){for(var a,o,r,l,h,u,c,d=e.length,v=p(t),b=[],y=0;y<d;y++)if(o=e[y],o||0===o)if("object"===pe.type(o))pe.merge(b,o.nodeType?[o]:o);else if(Ve.test(o)){for(l=l||v.appendChild(t.createElement("div")),h=(Re.exec(o)||["",""])[1].toLowerCase(),c=Ge[h]||Ge._default,l.innerHTML=c[1]+pe.htmlPrefilter(o)+c[2],a=c[0];a--;)l=l.lastChild;if(!ce.leadingWhitespace&&qe.test(o)&&b.push(t.createTextNode(qe.exec(o)[0])),!ce.tbody)for(o="table"!==h||Xe.test(o)?"<table>"!==c[1]||Xe.test(o)?0:l:l.firstChild,a=o&&o.childNodes.length;a--;)pe.nodeName(u=o.childNodes[a],"tbody")&&!u.childNodes.length&&o.removeChild(u);for(pe.merge(b,l.childNodes),l.textContent="";l.firstChild;)l.removeChild(l.firstChild);l=v.lastChild}else b.push(t.createTextNode(o));for(l&&v.removeChild(l),ce.appendChecked||pe.grep(f(b,"input"),g),y=0;o=b[y++];)if(n&&pe.inArray(o,n)>-1)s&&s.push(o);else if(r=pe.contains(o.ownerDocument,o),l=f(v.appendChild(o),"script"),r&&m(l),i)for(a=0;o=l[a++];)je.test(o.type||"")&&i.push(o);return l=null,v}function b(){return!0}function y(){return!1}function _(){try{return ne.activeElement}catch(e){}}function w(e,t,i,n,s,a){var o,r;if("object"==typeof t){"string"!=typeof i&&(n=n||i,i=void 0);for(r in t)w(e,r,i,n,t[r],a);return e}if(null==n&&null==s?(s=i,n=i=void 0):null==s&&("string"==typeof i?(s=n,n=void 0):(s=n,n=i,i=void 0)),s===!1)s=y;else if(!s)return e;return 1===a&&(o=s,s=function(e){return pe().off(e),o.apply(this,arguments)},s.guid=o.guid||(o.guid=pe.guid++)),e.each(function(){pe.event.add(this,t,s,n,i)})}function x(e,t){return pe.nodeName(e,"table")&&pe.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function C(e){return e.type=(null!==pe.find.attr(e,"type"))+"/"+e.type,e}function k(e){var t=st.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function T(e,t){if(1===t.nodeType&&pe.hasData(e)){var i,n,s,a=pe._data(e),o=pe._data(t,a),r=a.events;if(r){delete o.handle,o.events={};for(i in r)for(n=0,s=r[i].length;n<s;n++)pe.event.add(t,i,r[i][n])}o.data&&(o.data=pe.extend({},o.data))}}function D(e,t){var i,n,s;if(1===t.nodeType){if(i=t.nodeName.toLowerCase(),!ce.noCloneEvent&&t[pe.expando]){s=pe._data(t);for(n in s.events)pe.removeEvent(t,n,s.handle);t.removeAttribute(pe.expando)}"script"===i&&t.text!==e.text?(C(t).text=e.text,k(t)):"object"===i?(t.parentNode&&(t.outerHTML=e.outerHTML),ce.html5Clone&&e.innerHTML&&!pe.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):"input"===i&&Be.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):"option"===i?t.defaultSelected=t.selected=e.defaultSelected:"input"!==i&&"textarea"!==i||(t.defaultValue=e.defaultValue)}}function S(e,t,i,n){t=ae.apply([],t);var s,a,o,r,l,h,u=0,c=e.length,d=c-1,p=t[0],m=pe.isFunction(p);if(m||c>1&&"string"==typeof p&&!ce.checkClone&&nt.test(p))return e.each(function(s){var a=e.eq(s);m&&(t[0]=p.call(this,s,a.html())),S(a,t,i,n)});if(c&&(h=v(t,e[0].ownerDocument,!1,e,n),s=h.firstChild,1===h.childNodes.length&&(h=s),s||n)){for(r=pe.map(f(h,"script"),C),o=r.length;u<c;u++)a=h,u!==d&&(a=pe.clone(a,!0,!0),o&&pe.merge(r,f(a,"script"))),i.call(e[u],a,u);if(o)for(l=r[r.length-1].ownerDocument,pe.map(r,k),u=0;u<o;u++)a=r[u],je.test(a.type||"")&&!pe._data(a,"globalEval")&&pe.contains(l,a)&&(a.src?pe._evalUrl&&pe._evalUrl(a.src):pe.globalEval((a.text||a.textContent||a.innerHTML||"").replace(at,"")));h=s=null}return e}function P(e,t,i){for(var n,s=t?pe.filter(t,e):e,a=0;null!=(n=s[a]);a++)i||1!==n.nodeType||pe.cleanData(f(n)),n.parentNode&&(i&&pe.contains(n.ownerDocument,n)&&m(f(n,"script")),n.parentNode.removeChild(n));return e}function M(e,t){var i=pe(t.createElement(e)).appendTo(t.body),n=pe.css(i[0],"display");return i.detach(),n}function I(e){var t=ne,i=ht[e];return i||(i=M(e,t),"none"!==i&&i||(lt=(lt||pe("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement),t=(lt[0].contentWindow||lt[0].contentDocument).document,t.write(),t.close(),i=M(e,t),lt.detach()),ht[e]=i),i}function E(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function z(e){if(e in kt)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),i=Ct.length;i--;)if(e=Ct[i]+t,e in kt)return e}function N(e,t){for(var i,n,s,a=[],o=0,r=e.length;o<r;o++)n=e[o],n.style&&(a[o]=pe._data(n,"olddisplay"),i=n.style.display,t?(a[o]||"none"!==i||(n.style.display=""),""===n.style.display&&We(n)&&(a[o]=pe._data(n,"olddisplay",I(n.nodeName)))):(s=We(n),(i&&"none"!==i||!s)&&pe._data(n,"olddisplay",s?i:pe.css(n,"display"))));for(o=0;o<r;o++)n=e[o],n.style&&(t&&"none"!==n.style.display&&""!==n.style.display||(n.style.display=t?a[o]||"":"none"));return e}function A(e,t,i){var n=_t.exec(t);return n?Math.max(0,n[1]-(i||0))+(n[2]||"px"):t}function H(e,t,i,n,s){for(var a=i===(n?"border":"content")?4:"width"===t?1:0,o=0;a<4;a+=2)"margin"===i&&(o+=pe.css(e,i+Le[a],!0,s)),n?("content"===i&&(o-=pe.css(e,"padding"+Le[a],!0,s)),"margin"!==i&&(o-=pe.css(e,"border"+Le[a]+"Width",!0,s))):(o+=pe.css(e,"padding"+Le[a],!0,s),"padding"!==i&&(o+=pe.css(e,"border"+Le[a]+"Width",!0,s)));return o}function O(e,t,i){var n=!0,s="width"===t?e.offsetWidth:e.offsetHeight,a=ft(e),o=ce.boxSizing&&"border-box"===pe.css(e,"boxSizing",!1,a);if(s<=0||null==s){if(s=mt(e,t,a),(s<0||null==s)&&(s=e.style[t]),ct.test(s))return s;n=o&&(ce.boxSizingReliable()||s===e.style[t]),s=parseFloat(s)||0}return s+H(e,t,i||(o?"border":"content"),n,a)+"px"}function L(e,t,i,n,s){return new L.prototype.init(e,t,i,n,s)}function W(){return e.setTimeout(function(){Tt=void 0}),Tt=pe.now()}function F(e,t){var i,n={height:e},s=0;for(t=t?1:0;s<4;s+=2-t)i=Le[s],n["margin"+i]=n["padding"+i]=e;return t&&(n.opacity=n.width=e),n}function B(e,t,i){for(var n,s=(q.tweeners[t]||[]).concat(q.tweeners["*"]),a=0,o=s.length;a<o;a++)if(n=s[a].call(i,t,e))return n}function R(e,t,i){var n,s,a,o,r,l,h,u,c=this,d={},p=e.style,f=e.nodeType&&We(e),m=pe._data(e,"fxshow");i.queue||(r=pe._queueHooks(e,"fx"),null==r.unqueued&&(r.unqueued=0,l=r.empty.fire,r.empty.fire=function(){r.unqueued||l()}),r.unqueued++,c.always(function(){c.always(function(){r.unqueued--,pe.queue(e,"fx").length||r.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(i.overflow=[p.overflow,p.overflowX,p.overflowY],h=pe.css(e,"display"),u="none"===h?pe._data(e,"olddisplay")||I(e.nodeName):h,"inline"===u&&"none"===pe.css(e,"float")&&(ce.inlineBlockNeedsLayout&&"inline"!==I(e.nodeName)?p.zoom=1:p.display="inline-block")),i.overflow&&(p.overflow="hidden",ce.shrinkWrapBlocks()||c.always(function(){p.overflow=i.overflow[0],p.overflowX=i.overflow[1],p.overflowY=i.overflow[2]}));for(n in t)if(s=t[n],St.exec(s)){if(delete t[n],a=a||"toggle"===s,s===(f?"hide":"show")){if("show"!==s||!m||void 0===m[n])continue;f=!0}d[n]=m&&m[n]||pe.style(e,n)}else h=void 0;if(pe.isEmptyObject(d))"inline"===("none"===h?I(e.nodeName):h)&&(p.display=h);else{m?"hidden"in m&&(f=m.hidden):m=pe._data(e,"fxshow",{}),a&&(m.hidden=!f),f?pe(e).show():c.done(function(){pe(e).hide()}),c.done(function(){var t;pe._removeData(e,"fxshow");for(t in d)pe.style(e,t,d[t])});for(n in d)o=B(f?m[n]:0,n,c),n in m||(m[n]=o.start,f&&(o.end=o.start,o.start="width"===n||"height"===n?1:0))}}function j(e,t){var i,n,s,a,o;for(i in e)if(n=pe.camelCase(i),s=t[n],a=e[i],pe.isArray(a)&&(s=a[1],a=e[i]=a[0]),i!==n&&(e[n]=a,delete e[i]),o=pe.cssHooks[n],o&&"expand"in o){a=o.expand(a),delete e[n];for(i in a)i in e||(e[i]=a[i],t[i]=s)}else t[n]=s}function q(e,t,i){var n,s,a=0,o=q.prefilters.length,r=pe.Deferred().always(function(){delete l.elem}),l=function(){if(s)return!1;for(var t=Tt||W(),i=Math.max(0,h.startTime+h.duration-t),n=i/h.duration||0,a=1-n,o=0,l=h.tweens.length;o<l;o++)h.tweens[o].run(a);return r.notifyWith(e,[h,a,i]),a<1&&l?i:(r.resolveWith(e,[h]),!1)},h=r.promise({elem:e,props:pe.extend({},t),opts:pe.extend(!0,{specialEasing:{},easing:pe.easing._default},i),originalProperties:t,originalOptions:i,startTime:Tt||W(),duration:i.duration,tweens:[],createTween:function(t,i){var n=pe.Tween(e,h.opts,t,i,h.opts.specialEasing[t]||h.opts.easing);return h.tweens.push(n),n},stop:function(t){var i=0,n=t?h.tweens.length:0;if(s)return this;for(s=!0;i<n;i++)h.tweens[i].run(1);return t?(r.notifyWith(e,[h,1,0]),r.resolveWith(e,[h,t])):r.rejectWith(e,[h,t]),this}}),u=h.props;for(j(u,h.opts.specialEasing);a<o;a++)if(n=q.prefilters[a].call(h,e,u,h.opts))return pe.isFunction(n.stop)&&(pe._queueHooks(h.elem,h.opts.queue).stop=pe.proxy(n.stop,n)),n;return pe.map(u,B,h),pe.isFunction(h.opts.start)&&h.opts.start.call(e,h),pe.fx.timer(pe.extend(l,{elem:e,anim:h,queue:h.opts.queue})),h.progress(h.opts.progress).done(h.opts.done,h.opts.complete).fail(h.opts.fail).always(h.opts.always)}function Y(e){return pe.attr(e,"class")||""}function G(e){return function(t,i){"string"!=typeof t&&(i=t,t="*");var n,s=0,a=t.toLowerCase().match(Me)||[];if(pe.isFunction(i))for(;n=a[s++];)"+"===n.charAt(0)?(n=n.slice(1)||"*",(e[n]=e[n]||[]).unshift(i)):(e[n]=e[n]||[]).push(i)}}function V(e,t,i,n){function s(r){var l;return a[r]=!0,pe.each(e[r]||[],function(e,r){var h=r(t,i,n);return"string"!=typeof h||o||a[h]?o?!(l=h):void 0:(t.dataTypes.unshift(h),s(h),!1)}),l}var a={},o=e===Jt;return s(t.dataTypes[0])||!a["*"]&&s("*")}function X(e,t){var i,n,s=pe.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((s[n]?e:i||(i={}))[n]=t[n]);return i&&pe.extend(!0,e,i),e}function K(e,t,i){for(var n,s,a,o,r=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===s&&(s=e.mimeType||t.getResponseHeader("Content-Type"));if(s)for(o in r)if(r[o]&&r[o].test(s)){l.unshift(o);break}if(l[0]in i)a=l[0];else{for(o in i){if(!l[0]||e.converters[o+" "+l[0]]){a=o;break}n||(n=o)}a=a||n}if(a)return a!==l[0]&&l.unshift(a),i[a]}function $(e,t,i,n){var s,a,o,r,l,h={},u=e.dataTypes.slice();if(u[1])for(o in e.converters)h[o.toLowerCase()]=e.converters[o];for(a=u.shift();a;)if(e.responseFields[a]&&(i[e.responseFields[a]]=t),!l&&n&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=a,a=u.shift())if("*"===a)a=l;else if("*"!==l&&l!==a){if(o=h[l+" "+a]||h["* "+a],!o)for(s in h)if(r=s.split(" "),r[1]===a&&(o=h[l+" "+r[0]]||h["* "+r[0]])){o===!0?o=h[s]:h[s]!==!0&&(a=r[0],u.unshift(r[1]));break}if(o!==!0)if(o&&e["throws"])t=o(t);else try{t=o(t)}catch(c){return{state:"parsererror",error:o?c:"No conversion from "+l+" to "+a}}}return{state:"success",data:t}}function U(e){return e.style&&e.style.display||pe.css(e,"display")}function Q(e){if(!pe.contains(e.ownerDocument||ne,e))return!0;for(;e&&1===e.nodeType;){if("none"===U(e)||"hidden"===e.type)return!0;e=e.parentNode}return!1}function J(e,t,i,n){var s;if(pe.isArray(t))pe.each(t,function(t,s){i||ni.test(e)?n(e,s):J(e+"["+("object"==typeof s&&null!=s?t:"")+"]",s,i,n)});else if(i||"object"!==pe.type(t))n(e,t);else for(s in t)J(e+"["+s+"]",t[s],i,n)}function Z(){try{return new e.XMLHttpRequest}catch(t){}}function ee(){try{return new e.ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}function te(e){return pe.isWindow(e)?e:9===e.nodeType&&(e.defaultView||e.parentWindow)}var ie=[],ne=e.document,se=ie.slice,ae=ie.concat,oe=ie.push,re=ie.indexOf,le={},he=le.toString,ue=le.hasOwnProperty,ce={},de="1.12.4",pe=function(e,t){return new pe.fn.init(e,t)},fe=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,me=/^-ms-/,ge=/-([\da-z])/gi,ve=function(e,t){return t.toUpperCase()};pe.fn=pe.prototype={jquery:de,constructor:pe,selector:"",length:0,toArray:function(){return se.call(this)},get:function(e){return null!=e?e<0?this[e+this.length]:this[e]:se.call(this)},pushStack:function(e){var t=pe.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e){return pe.each(this,e)},map:function(e){return this.pushStack(pe.map(this,function(t,i){return e.call(t,i,t)}))},slice:function(){return this.pushStack(se.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(i>=0&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:oe,sort:ie.sort,splice:ie.splice},pe.extend=pe.fn.extend=function(){var e,t,i,n,s,a,o=arguments[0]||{},r=1,l=arguments.length,h=!1;for("boolean"==typeof o&&(h=o,o=arguments[r]||{},r++),"object"==typeof o||pe.isFunction(o)||(o={}),r===l&&(o=this,r--);r<l;r++)if(null!=(s=arguments[r]))for(n in s)e=o[n],i=s[n],o!==i&&(h&&i&&(pe.isPlainObject(i)||(t=pe.isArray(i)))?(t?(t=!1,a=e&&pe.isArray(e)?e:[]):a=e&&pe.isPlainObject(e)?e:{},o[n]=pe.extend(h,a,i)):void 0!==i&&(o[n]=i));return o},pe.extend({expando:"jQuery"+(de+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===pe.type(e)},isArray:Array.isArray||function(e){return"array"===pe.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){var t=e&&e.toString();return!pe.isArray(e)&&t-parseFloat(t)+1>=0},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},isPlainObject:function(e){var t;if(!e||"object"!==pe.type(e)||e.nodeType||pe.isWindow(e))return!1;try{if(e.constructor&&!ue.call(e,"constructor")&&!ue.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(i){return!1}if(!ce.ownFirst)for(t in e)return ue.call(e,t);for(t in e);return void 0===t||ue.call(e,t)},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?le[he.call(e)]||"object":typeof e},globalEval:function(t){t&&pe.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(me,"ms-").replace(ge,ve)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t){var n,s=0;if(i(e))for(n=e.length;s<n&&t.call(e[s],s,e[s])!==!1;s++);else for(s in e)if(t.call(e[s],s,e[s])===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(fe,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(i(Object(e))?pe.merge(n,"string"==typeof e?[e]:e):oe.call(n,e)),n},inArray:function(e,t,i){var n;if(t){if(re)return re.call(t,e,i);for(n=t.length,i=i?i<0?Math.max(0,n+i):i:0;i<n;i++)if(i in t&&t[i]===e)return i}return-1},merge:function(e,t){for(var i=+t.length,n=0,s=e.length;n<i;)e[s++]=t[n++];if(i!==i)for(;void 0!==t[n];)e[s++]=t[n++];return e.length=s,e},grep:function(e,t,i){for(var n,s=[],a=0,o=e.length,r=!i;a<o;a++)n=!t(e[a],a),n!==r&&s.push(e[a]);return s},map:function(e,t,n){var s,a,o=0,r=[];if(i(e))for(s=e.length;o<s;o++)a=t(e[o],o,n),null!=a&&r.push(a);else for(o in e)a=t(e[o],o,n),null!=a&&r.push(a);return ae.apply([],r)},guid:1,proxy:function(e,t){var i,n,s;if("string"==typeof t&&(s=e[t],t=e,e=s),pe.isFunction(e))return i=se.call(arguments,2),n=function(){return e.apply(t||this,i.concat(se.call(arguments)))},n.guid=e.guid=e.guid||pe.guid++,n},now:function(){return+new Date},support:ce}),"function"==typeof Symbol&&(pe.fn[Symbol.iterator]=ie[Symbol.iterator]),pe.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){le["[object "+t+"]"]=t.toLowerCase()});var be=function(e){function t(e,t,i,n){var s,a,o,r,l,h,c,p,f=t&&t.ownerDocument,m=t?t.nodeType:9;if(i=i||[],"string"!=typeof e||!e||1!==m&&9!==m&&11!==m)return i;if(!n&&((t?t.ownerDocument||t:B)!==z&&E(t),t=t||z,A)){if(11!==m&&(h=ve.exec(e)))if(s=h[1]){if(9===m){if(!(o=t.getElementById(s)))return i;if(o.id===s)return i.push(o),i}else if(f&&(o=f.getElementById(s))&&W(t,o)&&o.id===s)return i.push(o),i}else{if(h[2])return J.apply(i,t.getElementsByTagName(e)),i;if((s=h[3])&&w.getElementsByClassName&&t.getElementsByClassName)return J.apply(i,t.getElementsByClassName(s)),i}if(w.qsa&&!G[e+" "]&&(!H||!H.test(e))){if(1!==m)f=t,p=e;else if("object"!==t.nodeName.toLowerCase()){for((r=t.getAttribute("id"))?r=r.replace(ye,"\\$&"):t.setAttribute("id",r=F),c=T(e),a=c.length,l=de.test(r)?"#"+r:"[id='"+r+"']";a--;)c[a]=l+" "+d(c[a]);p=c.join(","),f=be.test(e)&&u(t.parentNode)||t}if(p)try{return J.apply(i,f.querySelectorAll(p)),i}catch(g){}finally{r===F&&t.removeAttribute("id")}}}return S(e.replace(re,"$1"),t,i,n)}function i(){function e(i,n){return t.push(i+" ")>x.cacheLength&&delete e[t.shift()],e[i+" "]=n}var t=[];return e}function n(e){return e[F]=!0,e}function s(e){var t=z.createElement("div");try{return!!e(t)}catch(i){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function a(e,t){for(var i=e.split("|"),n=i.length;n--;)x.attrHandle[i[n]]=t}function o(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||X)-(~e.sourceIndex||X);if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function r(e){return function(t){var i=t.nodeName.toLowerCase();return"input"===i&&t.type===e}}function l(e){return function(t){var i=t.nodeName.toLowerCase();return("input"===i||"button"===i)&&t.type===e}}function h(e){return n(function(t){return t=+t,n(function(i,n){for(var s,a=e([],i.length,t),o=a.length;o--;)i[s=a[o]]&&(i[s]=!(n[s]=i[s]))})})}function u(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function c(){}function d(e){for(var t=0,i=e.length,n="";t<i;t++)n+=e[t].value;return n}function p(e,t,i){var n=t.dir,s=i&&"parentNode"===n,a=j++;return t.first?function(t,i,a){for(;t=t[n];)if(1===t.nodeType||s)return e(t,i,a)}:function(t,i,o){var r,l,h,u=[R,a];if(o){for(;t=t[n];)if((1===t.nodeType||s)&&e(t,i,o))return!0}else for(;t=t[n];)if(1===t.nodeType||s){if(h=t[F]||(t[F]={}),l=h[t.uniqueID]||(h[t.uniqueID]={}),(r=l[n])&&r[0]===R&&r[1]===a)return u[2]=r[2];if(l[n]=u,u[2]=e(t,i,o))return!0}}}function f(e){return e.length>1?function(t,i,n){for(var s=e.length;s--;)if(!e[s](t,i,n))return!1;return!0}:e[0]}function m(e,i,n){for(var s=0,a=i.length;s<a;s++)t(e,i[s],n);return n}function g(e,t,i,n,s){for(var a,o=[],r=0,l=e.length,h=null!=t;r<l;r++)(a=e[r])&&(i&&!i(a,n,s)||(o.push(a),h&&t.push(r)));return o}function v(e,t,i,s,a,o){return s&&!s[F]&&(s=v(s)),a&&!a[F]&&(a=v(a,o)),n(function(n,o,r,l){var h,u,c,d=[],p=[],f=o.length,v=n||m(t||"*",r.nodeType?[r]:r,[]),b=!e||!n&&t?v:g(v,d,e,r,l),y=i?a||(n?e:f||s)?[]:o:b;if(i&&i(b,y,r,l),s)for(h=g(y,p),s(h,[],r,l),u=h.length;u--;)(c=h[u])&&(y[p[u]]=!(b[p[u]]=c));if(n){if(a||e){if(a){for(h=[],u=y.length;u--;)(c=y[u])&&h.push(b[u]=c);a(null,y=[],h,l)}for(u=y.length;u--;)(c=y[u])&&(h=a?ee(n,c):d[u])>-1&&(n[h]=!(o[h]=c))}}else y=g(y===o?y.splice(f,y.length):y),a?a(null,o,y,l):J.apply(o,y)})}function b(e){for(var t,i,n,s=e.length,a=x.relative[e[0].type],o=a||x.relative[" "],r=a?1:0,l=p(function(e){return e===t},o,!0),h=p(function(e){return ee(t,e)>-1},o,!0),u=[function(e,i,n){var s=!a&&(n||i!==P)||((t=i).nodeType?l(e,i,n):h(e,i,n));return t=null,s}];r<s;r++)if(i=x.relative[e[r].type])u=[p(f(u),i)];else{if(i=x.filter[e[r].type].apply(null,e[r].matches),i[F]){for(n=++r;n<s&&!x.relative[e[n].type];n++);return v(r>1&&f(u),r>1&&d(e.slice(0,r-1).concat({value:" "===e[r-2].type?"*":""})).replace(re,"$1"),i,r<n&&b(e.slice(r,n)),n<s&&b(e=e.slice(n)),n<s&&d(e))}u.push(i)}return f(u)}function y(e,i){var s=i.length>0,a=e.length>0,o=function(n,o,r,l,h){var u,c,d,p=0,f="0",m=n&&[],v=[],b=P,y=n||a&&x.find.TAG("*",h),_=R+=null==b?1:Math.random()||.1,w=y.length;for(h&&(P=o===z||o||h);f!==w&&null!=(u=y[f]);f++){if(a&&u){for(c=0,o||u.ownerDocument===z||(E(u),r=!A);d=e[c++];)if(d(u,o||z,r)){l.push(u);break}h&&(R=_)}s&&((u=!d&&u)&&p--,n&&m.push(u))}if(p+=f,s&&f!==p){for(c=0;d=i[c++];)d(m,v,o,r);if(n){if(p>0)for(;f--;)m[f]||v[f]||(v[f]=U.call(l));v=g(v)}J.apply(l,v),h&&!n&&v.length>0&&p+i.length>1&&t.uniqueSort(l)}return h&&(R=_,P=b),m};return s?n(o):o}var _,w,x,C,k,T,D,S,P,M,I,E,z,N,A,H,O,L,W,F="sizzle"+1*new Date,B=e.document,R=0,j=0,q=i(),Y=i(),G=i(),V=function(e,t){return e===t&&(I=!0),0},X=1<<31,K={}.hasOwnProperty,$=[],U=$.pop,Q=$.push,J=$.push,Z=$.slice,ee=function(e,t){for(var i=0,n=e.length;i<n;i++)if(e[i]===t)return i;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ie="[\\x20\\t\\r\\n\\f]",ne="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",se="\\["+ie+"*("+ne+")(?:"+ie+"*([*^$|!~]?=)"+ie+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+ne+"))|)"+ie+"*\\]",ae=":("+ne+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+se+")*)|.*)\\)|)",oe=new RegExp(ie+"+","g"),re=new RegExp("^"+ie+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ie+"+$","g"),le=new RegExp("^"+ie+"*,"+ie+"*"),he=new RegExp("^"+ie+"*([>+~]|"+ie+")"+ie+"*"),ue=new RegExp("="+ie+"*([^\\]'\"]*?)"+ie+"*\\]","g"),ce=new RegExp(ae),de=new RegExp("^"+ne+"$"),pe={ID:new RegExp("^#("+ne+")"),CLASS:new RegExp("^\\.("+ne+")"),TAG:new RegExp("^("+ne+"|[*])"),ATTR:new RegExp("^"+se),PSEUDO:new RegExp("^"+ae),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ie+"*(even|odd|(([+-]|)(\\d*)n|)"+ie+"*(?:([+-]|)"+ie+"*(\\d+)|))"+ie+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+ie+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ie+"*((?:-\\d)?\\d*)"+ie+"*\\)|)(?=[^-]|$)","i")},fe=/^(?:input|select|textarea|button)$/i,me=/^h\d$/i,ge=/^[^{]+\{\s*\[native \w/,ve=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,be=/[+~]/,ye=/'|\\/g,_e=new RegExp("\\\\([\\da-f]{1,6}"+ie+"?|("+ie+")|.)","ig"),we=function(e,t,i){var n="0x"+t-65536;return n!==n||i?t:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},xe=function(){E()};try{J.apply($=Z.call(B.childNodes),B.childNodes),$[B.childNodes.length].nodeType}catch(Ce){J={apply:$.length?function(e,t){Q.apply(e,Z.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}w=t.support={},k=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&"HTML"!==t.nodeName},E=t.setDocument=function(e){var t,i,n=e?e.ownerDocument||e:B;return n!==z&&9===n.nodeType&&n.documentElement?(z=n,N=z.documentElement,A=!k(z),(i=z.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",xe,!1):i.attachEvent&&i.attachEvent("onunload",xe)),w.attributes=s(function(e){return e.className="i",!e.getAttribute("className")}),w.getElementsByTagName=s(function(e){return e.appendChild(z.createComment("")),!e.getElementsByTagName("*").length}),w.getElementsByClassName=ge.test(z.getElementsByClassName),w.getById=s(function(e){return N.appendChild(e).id=F,!z.getElementsByName||!z.getElementsByName(F).length}),w.getById?(x.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&A){var i=t.getElementById(e);return i?[i]:[]}},x.filter.ID=function(e){var t=e.replace(_e,we);return function(e){return e.getAttribute("id")===t}}):(delete x.find.ID,x.filter.ID=function(e){var t=e.replace(_e,we);return function(e){var i="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return i&&i.value===t}}),x.find.TAG=w.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):w.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,n=[],s=0,a=t.getElementsByTagName(e);if("*"===e){for(;i=a[s++];)1===i.nodeType&&n.push(i);return n}return a},x.find.CLASS=w.getElementsByClassName&&function(e,t){if("undefined"!=typeof t.getElementsByClassName&&A)return t.getElementsByClassName(e)},O=[],H=[],(w.qsa=ge.test(z.querySelectorAll))&&(s(function(e){N.appendChild(e).innerHTML="<a id='"+F+"'></a><select id='"+F+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&H.push("[*^$]="+ie+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||H.push("\\["+ie+"*(?:value|"+te+")"),e.querySelectorAll("[id~="+F+"-]").length||H.push("~="),e.querySelectorAll(":checked").length||H.push(":checked"),e.querySelectorAll("a#"+F+"+*").length||H.push(".#.+[+~]")}),s(function(e){var t=z.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&H.push("name"+ie+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||H.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),H.push(",.*:")})),(w.matchesSelector=ge.test(L=N.matches||N.webkitMatchesSelector||N.mozMatchesSelector||N.oMatchesSelector||N.msMatchesSelector))&&s(function(e){w.disconnectedMatch=L.call(e,"div"),L.call(e,"[s!='']:x"),O.push("!=",ae)}),H=H.length&&new RegExp(H.join("|")),O=O.length&&new RegExp(O.join("|")),t=ge.test(N.compareDocumentPosition),W=t||ge.test(N.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},V=t?function(e,t){if(e===t)return I=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i?i:(i=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&i||!w.sortDetached&&t.compareDocumentPosition(e)===i?e===z||e.ownerDocument===B&&W(B,e)?-1:t===z||t.ownerDocument===B&&W(B,t)?1:M?ee(M,e)-ee(M,t):0:4&i?-1:1)}:function(e,t){if(e===t)return I=!0,0;var i,n=0,s=e.parentNode,a=t.parentNode,r=[e],l=[t];if(!s||!a)return e===z?-1:t===z?1:s?-1:a?1:M?ee(M,e)-ee(M,t):0;if(s===a)return o(e,t);for(i=e;i=i.parentNode;)r.unshift(i);for(i=t;i=i.parentNode;)l.unshift(i);for(;r[n]===l[n];)n++;return n?o(r[n],l[n]):r[n]===B?-1:l[n]===B?1:0},z):z},t.matches=function(e,i){return t(e,null,null,i)},t.matchesSelector=function(e,i){if((e.ownerDocument||e)!==z&&E(e),i=i.replace(ue,"='$1']"),w.matchesSelector&&A&&!G[i+" "]&&(!O||!O.test(i))&&(!H||!H.test(i)))try{var n=L.call(e,i);if(n||w.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(s){}return t(i,z,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==z&&E(e),W(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==z&&E(e);var i=x.attrHandle[t.toLowerCase()],n=i&&K.call(x.attrHandle,t.toLowerCase())?i(e,t,!A):void 0;return void 0!==n?n:w.attributes||!A?e.getAttribute(t):(n=e.getAttributeNode(t))&&n.specified?n.value:null},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,i=[],n=0,s=0;if(I=!w.detectDuplicates,M=!w.sortStable&&e.slice(0),e.sort(V),I){for(;t=e[s++];)t===e[s]&&(n=i.push(s));for(;n--;)e.splice(i[n],1)}return M=null,e},C=t.getText=function(e){var t,i="",n=0,s=e.nodeType;if(s){if(1===s||9===s||11===s){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=C(e)}else if(3===s||4===s)return e.nodeValue}else for(;t=e[n++];)i+=C(t);return i},x=t.selectors={cacheLength:50,createPseudo:n,match:pe,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(_e,we),e[3]=(e[3]||e[4]||e[5]||"").replace(_e,we),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return pe.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&ce.test(i)&&(t=T(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(_e,we).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=q[e+" "];return t||(t=new RegExp("(^|"+ie+")"+e+"("+ie+"|$)"))&&q(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,i,n){return function(s){var a=t.attr(s,e);return null==a?"!="===i:!i||(a+="","="===i?a===n:"!="===i?a!==n:"^="===i?n&&0===a.indexOf(n):"*="===i?n&&a.indexOf(n)>-1:"$="===i?n&&a.slice(-n.length)===n:"~="===i?(" "+a.replace(oe," ")+" ").indexOf(n)>-1:"|="===i&&(a===n||a.slice(0,n.length+1)===n+"-"))}},CHILD:function(e,t,i,n,s){var a="nth"!==e.slice(0,3),o="last"!==e.slice(-4),r="of-type"===t;return 1===n&&0===s?function(e){return!!e.parentNode}:function(t,i,l){var h,u,c,d,p,f,m=a!==o?"nextSibling":"previousSibling",g=t.parentNode,v=r&&t.nodeName.toLowerCase(),b=!l&&!r,y=!1;if(g){if(a){for(;m;){for(d=t;d=d[m];)if(r?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;f=m="only"===e&&!f&&"nextSibling"}return!0}if(f=[o?g.firstChild:g.lastChild],o&&b){for(d=g,c=d[F]||(d[F]={}),u=c[d.uniqueID]||(c[d.uniqueID]={}),h=u[e]||[],p=h[0]===R&&h[1],y=p&&h[2],
d=p&&g.childNodes[p];d=++p&&d&&d[m]||(y=p=0)||f.pop();)if(1===d.nodeType&&++y&&d===t){u[e]=[R,p,y];break}}else if(b&&(d=t,c=d[F]||(d[F]={}),u=c[d.uniqueID]||(c[d.uniqueID]={}),h=u[e]||[],p=h[0]===R&&h[1],y=p),y===!1)for(;(d=++p&&d&&d[m]||(y=p=0)||f.pop())&&((r?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++y||(b&&(c=d[F]||(d[F]={}),u=c[d.uniqueID]||(c[d.uniqueID]={}),u[e]=[R,y]),d!==t)););return y-=s,y===n||y%n===0&&y/n>=0}}},PSEUDO:function(e,i){var s,a=x.pseudos[e]||x.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return a[F]?a(i):a.length>1?(s=[e,e,"",i],x.setFilters.hasOwnProperty(e.toLowerCase())?n(function(e,t){for(var n,s=a(e,i),o=s.length;o--;)n=ee(e,s[o]),e[n]=!(t[n]=s[o])}):function(e){return a(e,0,s)}):a}},pseudos:{not:n(function(e){var t=[],i=[],s=D(e.replace(re,"$1"));return s[F]?n(function(e,t,i,n){for(var a,o=s(e,null,n,[]),r=e.length;r--;)(a=o[r])&&(e[r]=!(t[r]=a))}):function(e,n,a){return t[0]=e,s(t,null,a,i),t[0]=null,!i.pop()}}),has:n(function(e){return function(i){return t(e,i).length>0}}),contains:n(function(e){return e=e.replace(_e,we),function(t){return(t.textContent||t.innerText||C(t)).indexOf(e)>-1}}),lang:n(function(e){return de.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(_e,we).toLowerCase(),function(t){var i;do if(i=A?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return i=i.toLowerCase(),i===e||0===i.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var i=e.location&&e.location.hash;return i&&i.slice(1)===t.id},root:function(e){return e===N},focus:function(e){return e===z.activeElement&&(!z.hasFocus||z.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!x.pseudos.empty(e)},header:function(e){return me.test(e.nodeName)},input:function(e){return fe.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:h(function(){return[0]}),last:h(function(e,t){return[t-1]}),eq:h(function(e,t,i){return[i<0?i+t:i]}),even:h(function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e}),odd:h(function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e}),lt:h(function(e,t,i){for(var n=i<0?i+t:i;--n>=0;)e.push(n);return e}),gt:h(function(e,t,i){for(var n=i<0?i+t:i;++n<t;)e.push(n);return e})}},x.pseudos.nth=x.pseudos.eq;for(_ in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})x.pseudos[_]=r(_);for(_ in{submit:!0,reset:!0})x.pseudos[_]=l(_);return c.prototype=x.filters=x.pseudos,x.setFilters=new c,T=t.tokenize=function(e,i){var n,s,a,o,r,l,h,u=Y[e+" "];if(u)return i?0:u.slice(0);for(r=e,l=[],h=x.preFilter;r;){n&&!(s=le.exec(r))||(s&&(r=r.slice(s[0].length)||r),l.push(a=[])),n=!1,(s=he.exec(r))&&(n=s.shift(),a.push({value:n,type:s[0].replace(re," ")}),r=r.slice(n.length));for(o in x.filter)!(s=pe[o].exec(r))||h[o]&&!(s=h[o](s))||(n=s.shift(),a.push({value:n,type:o,matches:s}),r=r.slice(n.length));if(!n)break}return i?r.length:r?t.error(e):Y(e,l).slice(0)},D=t.compile=function(e,t){var i,n=[],s=[],a=G[e+" "];if(!a){for(t||(t=T(e)),i=t.length;i--;)a=b(t[i]),a[F]?n.push(a):s.push(a);a=G(e,y(s,n)),a.selector=e}return a},S=t.select=function(e,t,i,n){var s,a,o,r,l,h="function"==typeof e&&e,c=!n&&T(e=h.selector||e);if(i=i||[],1===c.length){if(a=c[0]=c[0].slice(0),a.length>2&&"ID"===(o=a[0]).type&&w.getById&&9===t.nodeType&&A&&x.relative[a[1].type]){if(t=(x.find.ID(o.matches[0].replace(_e,we),t)||[])[0],!t)return i;h&&(t=t.parentNode),e=e.slice(a.shift().value.length)}for(s=pe.needsContext.test(e)?0:a.length;s--&&(o=a[s],!x.relative[r=o.type]);)if((l=x.find[r])&&(n=l(o.matches[0].replace(_e,we),be.test(a[0].type)&&u(t.parentNode)||t))){if(a.splice(s,1),e=n.length&&d(a),!e)return J.apply(i,n),i;break}}return(h||D(e,c))(n,t,!A,i,!t||be.test(e)&&u(t.parentNode)||t),i},w.sortStable=F.split("").sort(V).join("")===F,w.detectDuplicates=!!I,E(),w.sortDetached=s(function(e){return 1&e.compareDocumentPosition(z.createElement("div"))}),s(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||a("type|href|height|width",function(e,t,i){if(!i)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),w.attributes&&s(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||a("value",function(e,t,i){if(!i&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),s(function(e){return null==e.getAttribute("disabled")})||a(te,function(e,t,i){var n;if(!i)return e[t]===!0?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null}),t}(e);pe.find=be,pe.expr=be.selectors,pe.expr[":"]=pe.expr.pseudos,pe.uniqueSort=pe.unique=be.uniqueSort,pe.text=be.getText,pe.isXMLDoc=be.isXML,pe.contains=be.contains;var ye=function(e,t,i){for(var n=[],s=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(s&&pe(e).is(i))break;n.push(e)}return n},_e=function(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i},we=pe.expr.match.needsContext,xe=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,Ce=/^.[^:#\[\.,]*$/;pe.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?pe.find.matchesSelector(n,e)?[n]:[]:pe.find.matches(e,pe.grep(t,function(e){return 1===e.nodeType}))},pe.fn.extend({find:function(e){var t,i=[],n=this,s=n.length;if("string"!=typeof e)return this.pushStack(pe(e).filter(function(){for(t=0;t<s;t++)if(pe.contains(n[t],this))return!0}));for(t=0;t<s;t++)pe.find(e,n[t],i);return i=this.pushStack(s>1?pe.unique(i):i),i.selector=this.selector?this.selector+" "+e:e,i},filter:function(e){return this.pushStack(n(this,e||[],!1))},not:function(e){return this.pushStack(n(this,e||[],!0))},is:function(e){return!!n(this,"string"==typeof e&&we.test(e)?pe(e):e||[],!1).length}});var ke,Te=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,De=pe.fn.init=function(e,t,i){var n,s;if(!e)return this;if(i=i||ke,"string"==typeof e){if(n="<"===e.charAt(0)&&">"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:Te.exec(e),!n||!n[1]&&t)return!t||t.jquery?(t||i).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof pe?t[0]:t,pe.merge(this,pe.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:ne,!0)),xe.test(n[1])&&pe.isPlainObject(t))for(n in t)pe.isFunction(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}if(s=ne.getElementById(n[2]),s&&s.parentNode){if(s.id!==n[2])return ke.find(e);this.length=1,this[0]=s}return this.context=ne,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):pe.isFunction(e)?"undefined"!=typeof i.ready?i.ready(e):e(pe):(void 0!==e.selector&&(this.selector=e.selector,this.context=e.context),pe.makeArray(e,this))};De.prototype=pe.fn,ke=pe(ne);var Se=/^(?:parents|prev(?:Until|All))/,Pe={children:!0,contents:!0,next:!0,prev:!0};pe.fn.extend({has:function(e){var t,i=pe(e,this),n=i.length;return this.filter(function(){for(t=0;t<n;t++)if(pe.contains(this,i[t]))return!0})},closest:function(e,t){for(var i,n=0,s=this.length,a=[],o=we.test(e)||"string"!=typeof e?pe(e,t||this.context):0;n<s;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(o?o.index(i)>-1:1===i.nodeType&&pe.find.matchesSelector(i,e))){a.push(i);break}return this.pushStack(a.length>1?pe.uniqueSort(a):a)},index:function(e){return e?"string"==typeof e?pe.inArray(this[0],pe(e)):pe.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(pe.uniqueSort(pe.merge(this.get(),pe(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),pe.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return ye(e,"parentNode")},parentsUntil:function(e,t,i){return ye(e,"parentNode",i)},next:function(e){return s(e,"nextSibling")},prev:function(e){return s(e,"previousSibling")},nextAll:function(e){return ye(e,"nextSibling")},prevAll:function(e){return ye(e,"previousSibling")},nextUntil:function(e,t,i){return ye(e,"nextSibling",i)},prevUntil:function(e,t,i){return ye(e,"previousSibling",i)},siblings:function(e){return _e((e.parentNode||{}).firstChild,e)},children:function(e){return _e(e.firstChild)},contents:function(e){return pe.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:pe.merge([],e.childNodes)}},function(e,t){pe.fn[e]=function(i,n){var s=pe.map(this,t,i);return"Until"!==e.slice(-5)&&(n=i),n&&"string"==typeof n&&(s=pe.filter(n,s)),this.length>1&&(Pe[e]||(s=pe.uniqueSort(s)),Se.test(e)&&(s=s.reverse())),this.pushStack(s)}});var Me=/\S+/g;pe.Callbacks=function(e){e="string"==typeof e?a(e):pe.extend({},e);var t,i,n,s,o=[],r=[],l=-1,h=function(){for(s=e.once,n=t=!0;r.length;l=-1)for(i=r.shift();++l<o.length;)o[l].apply(i[0],i[1])===!1&&e.stopOnFalse&&(l=o.length,i=!1);e.memory||(i=!1),t=!1,s&&(o=i?[]:"")},u={add:function(){return o&&(i&&!t&&(l=o.length-1,r.push(i)),function n(t){pe.each(t,function(t,i){pe.isFunction(i)?e.unique&&u.has(i)||o.push(i):i&&i.length&&"string"!==pe.type(i)&&n(i)})}(arguments),i&&!t&&h()),this},remove:function(){return pe.each(arguments,function(e,t){for(var i;(i=pe.inArray(t,o,i))>-1;)o.splice(i,1),i<=l&&l--}),this},has:function(e){return e?pe.inArray(e,o)>-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return s=r=[],o=i="",this},disabled:function(){return!o},lock:function(){return s=!0,i||u.disable(),this},locked:function(){return!!s},fireWith:function(e,i){return s||(i=i||[],i=[e,i.slice?i.slice():i],r.push(i),t||h()),this},fire:function(){return u.fireWith(this,arguments),this},fired:function(){return!!n}};return u},pe.extend({Deferred:function(e){var t=[["resolve","done",pe.Callbacks("once memory"),"resolved"],["reject","fail",pe.Callbacks("once memory"),"rejected"],["notify","progress",pe.Callbacks("memory")]],i="pending",n={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},then:function(){var e=arguments;return pe.Deferred(function(i){pe.each(t,function(t,a){var o=pe.isFunction(e[t])&&e[t];s[a[1]](function(){var e=o&&o.apply(this,arguments);e&&pe.isFunction(e.promise)?e.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[a[0]+"With"](this===n?i.promise():this,o?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?pe.extend(e,n):n}},s={};return n.pipe=n.then,pe.each(t,function(e,a){var o=a[2],r=a[3];n[a[1]]=o.add,r&&o.add(function(){i=r},t[1^e][2].disable,t[2][2].lock),s[a[0]]=function(){return s[a[0]+"With"](this===s?n:this,arguments),this},s[a[0]+"With"]=o.fireWith}),n.promise(s),e&&e.call(s,s),s},when:function(e){var t,i,n,s=0,a=se.call(arguments),o=a.length,r=1!==o||e&&pe.isFunction(e.promise)?o:0,l=1===r?e:pe.Deferred(),h=function(e,i,n){return function(s){i[e]=this,n[e]=arguments.length>1?se.call(arguments):s,n===t?l.notifyWith(i,n):--r||l.resolveWith(i,n)}};if(o>1)for(t=new Array(o),i=new Array(o),n=new Array(o);s<o;s++)a[s]&&pe.isFunction(a[s].promise)?a[s].promise().progress(h(s,i,t)).done(h(s,n,a)).fail(l.reject):--r;return r||l.resolveWith(n,a),l.promise()}});var Ie;pe.fn.ready=function(e){return pe.ready.promise().done(e),this},pe.extend({isReady:!1,readyWait:1,holdReady:function(e){e?pe.readyWait++:pe.ready(!0)},ready:function(e){(e===!0?--pe.readyWait:pe.isReady)||(pe.isReady=!0,e!==!0&&--pe.readyWait>0||(Ie.resolveWith(ne,[pe]),pe.fn.triggerHandler&&(pe(ne).triggerHandler("ready"),pe(ne).off("ready"))))}}),pe.ready.promise=function(t){if(!Ie)if(Ie=pe.Deferred(),"complete"===ne.readyState||"loading"!==ne.readyState&&!ne.documentElement.doScroll)e.setTimeout(pe.ready);else if(ne.addEventListener)ne.addEventListener("DOMContentLoaded",r),e.addEventListener("load",r);else{ne.attachEvent("onreadystatechange",r),e.attachEvent("onload",r);var i=!1;try{i=null==e.frameElement&&ne.documentElement}catch(n){}i&&i.doScroll&&!function s(){if(!pe.isReady){try{i.doScroll("left")}catch(t){return e.setTimeout(s,50)}o(),pe.ready()}}()}return Ie.promise(t)},pe.ready.promise();var Ee;for(Ee in pe(ce))break;ce.ownFirst="0"===Ee,ce.inlineBlockNeedsLayout=!1,pe(function(){var e,t,i,n;i=ne.getElementsByTagName("body")[0],i&&i.style&&(t=ne.createElement("div"),n=ne.createElement("div"),n.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",i.appendChild(n).appendChild(t),"undefined"!=typeof t.style.zoom&&(t.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",ce.inlineBlockNeedsLayout=e=3===t.offsetWidth,e&&(i.style.zoom=1)),i.removeChild(n))}),function(){var e=ne.createElement("div");ce.deleteExpando=!0;try{delete e.test}catch(t){ce.deleteExpando=!1}e=null}();var ze=function(e){var t=pe.noData[(e.nodeName+" ").toLowerCase()],i=+e.nodeType||1;return(1===i||9===i)&&(!t||t!==!0&&e.getAttribute("classid")===t)},Ne=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Ae=/([A-Z])/g;pe.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(e){return e=e.nodeType?pe.cache[e[pe.expando]]:e[pe.expando],!!e&&!h(e)},data:function(e,t,i){return u(e,t,i)},removeData:function(e,t){return c(e,t)},_data:function(e,t,i){return u(e,t,i,!0)},_removeData:function(e,t){return c(e,t,!0)}}),pe.fn.extend({data:function(e,t){var i,n,s,a=this[0],o=a&&a.attributes;if(void 0===e){if(this.length&&(s=pe.data(a),1===a.nodeType&&!pe._data(a,"parsedAttrs"))){for(i=o.length;i--;)o[i]&&(n=o[i].name,0===n.indexOf("data-")&&(n=pe.camelCase(n.slice(5)),l(a,n,s[n])));pe._data(a,"parsedAttrs",!0)}return s}return"object"==typeof e?this.each(function(){pe.data(this,e)}):arguments.length>1?this.each(function(){pe.data(this,e,t)}):a?l(a,e,pe.data(a,e)):void 0},removeData:function(e){return this.each(function(){pe.removeData(this,e)})}}),pe.extend({queue:function(e,t,i){var n;if(e)return t=(t||"fx")+"queue",n=pe._data(e,t),i&&(!n||pe.isArray(i)?n=pe._data(e,t,pe.makeArray(i)):n.push(i)),n||[]},dequeue:function(e,t){t=t||"fx";var i=pe.queue(e,t),n=i.length,s=i.shift(),a=pe._queueHooks(e,t),o=function(){pe.dequeue(e,t)};"inprogress"===s&&(s=i.shift(),n--),s&&("fx"===t&&i.unshift("inprogress"),delete a.stop,s.call(e,o,a)),!n&&a&&a.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return pe._data(e,i)||pe._data(e,i,{empty:pe.Callbacks("once memory").add(function(){pe._removeData(e,t+"queue"),pe._removeData(e,i)})})}}),pe.fn.extend({queue:function(e,t){var i=2;return"string"!=typeof e&&(t=e,e="fx",i--),arguments.length<i?pe.queue(this[0],e):void 0===t?this:this.each(function(){var i=pe.queue(this,e,t);pe._queueHooks(this,e),"fx"===e&&"inprogress"!==i[0]&&pe.dequeue(this,e)})},dequeue:function(e){return this.each(function(){pe.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var i,n=1,s=pe.Deferred(),a=this,o=this.length,r=function(){--n||s.resolveWith(a,[a])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";o--;)i=pe._data(a[o],e+"queueHooks"),i&&i.empty&&(n++,i.empty.add(r));return r(),s.promise(t)}}),function(){var e;ce.shrinkWrapBlocks=function(){if(null!=e)return e;e=!1;var t,i,n;return i=ne.getElementsByTagName("body")[0],i&&i.style?(t=ne.createElement("div"),n=ne.createElement("div"),n.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",i.appendChild(n).appendChild(t),"undefined"!=typeof t.style.zoom&&(t.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",t.appendChild(ne.createElement("div")).style.width="5px",e=3!==t.offsetWidth),i.removeChild(n),e):void 0}}();var He=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Oe=new RegExp("^(?:([+-])=|)("+He+")([a-z%]*)$","i"),Le=["Top","Right","Bottom","Left"],We=function(e,t){return e=t||e,"none"===pe.css(e,"display")||!pe.contains(e.ownerDocument,e)},Fe=function(e,t,i,n,s,a,o){var r=0,l=e.length,h=null==i;if("object"===pe.type(i)){s=!0;for(r in i)Fe(e,t,r,i[r],!0,a,o)}else if(void 0!==n&&(s=!0,pe.isFunction(n)||(o=!0),h&&(o?(t.call(e,n),t=null):(h=t,t=function(e,t,i){return h.call(pe(e),i)})),t))for(;r<l;r++)t(e[r],i,o?n:n.call(e[r],r,t(e[r],i)));return s?e:h?t.call(e):l?t(e[0],i):a},Be=/^(?:checkbox|radio)$/i,Re=/<([\w:-]+)/,je=/^$|\/(?:java|ecma)script/i,qe=/^\s+/,Ye="abbr|article|aside|audio|bdi|canvas|data|datalist|details|dialog|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|picture|progress|section|summary|template|time|video";!function(){var e=ne.createElement("div"),t=ne.createDocumentFragment(),i=ne.createElement("input");e.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",ce.leadingWhitespace=3===e.firstChild.nodeType,ce.tbody=!e.getElementsByTagName("tbody").length,ce.htmlSerialize=!!e.getElementsByTagName("link").length,ce.html5Clone="<:nav></:nav>"!==ne.createElement("nav").cloneNode(!0).outerHTML,i.type="checkbox",i.checked=!0,t.appendChild(i),ce.appendChecked=i.checked,e.innerHTML="<textarea>x</textarea>",ce.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue,t.appendChild(e),i=ne.createElement("input"),i.setAttribute("type","radio"),i.setAttribute("checked","checked"),i.setAttribute("name","t"),e.appendChild(i),ce.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,ce.noCloneEvent=!!e.addEventListener,e[pe.expando]=1,ce.attributes=!e.getAttribute(pe.expando)}();var Ge={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:ce.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]};Ge.optgroup=Ge.option,Ge.tbody=Ge.tfoot=Ge.colgroup=Ge.caption=Ge.thead,Ge.th=Ge.td;var Ve=/<|&#?\w+;/,Xe=/<tbody/i;!function(){var t,i,n=ne.createElement("div");for(t in{submit:!0,change:!0,focusin:!0})i="on"+t,(ce[t]=i in e)||(n.setAttribute(i,"t"),ce[t]=n.attributes[i].expando===!1);n=null}();var Ke=/^(?:input|select|textarea)$/i,$e=/^key/,Ue=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Qe=/^(?:focusinfocus|focusoutblur)$/,Je=/^([^.]*)(?:\.(.+)|)/;pe.event={global:{},add:function(e,t,i,n,s){var a,o,r,l,h,u,c,d,p,f,m,g=pe._data(e);if(g){for(i.handler&&(l=i,i=l.handler,s=l.selector),i.guid||(i.guid=pe.guid++),(o=g.events)||(o=g.events={}),(u=g.handle)||(u=g.handle=function(e){return"undefined"==typeof pe||e&&pe.event.triggered===e.type?void 0:pe.event.dispatch.apply(u.elem,arguments)},u.elem=e),t=(t||"").match(Me)||[""],r=t.length;r--;)a=Je.exec(t[r])||[],p=m=a[1],f=(a[2]||"").split(".").sort(),p&&(h=pe.event.special[p]||{},p=(s?h.delegateType:h.bindType)||p,h=pe.event.special[p]||{},c=pe.extend({type:p,origType:m,data:n,handler:i,guid:i.guid,selector:s,needsContext:s&&pe.expr.match.needsContext.test(s),namespace:f.join(".")},l),(d=o[p])||(d=o[p]=[],d.delegateCount=0,h.setup&&h.setup.call(e,n,f,u)!==!1||(e.addEventListener?e.addEventListener(p,u,!1):e.attachEvent&&e.attachEvent("on"+p,u))),h.add&&(h.add.call(e,c),c.handler.guid||(c.handler.guid=i.guid)),s?d.splice(d.delegateCount++,0,c):d.push(c),pe.event.global[p]=!0);e=null}},remove:function(e,t,i,n,s){var a,o,r,l,h,u,c,d,p,f,m,g=pe.hasData(e)&&pe._data(e);if(g&&(u=g.events)){for(t=(t||"").match(Me)||[""],h=t.length;h--;)if(r=Je.exec(t[h])||[],p=m=r[1],f=(r[2]||"").split(".").sort(),p){for(c=pe.event.special[p]||{},p=(n?c.delegateType:c.bindType)||p,d=u[p]||[],r=r[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),l=a=d.length;a--;)o=d[a],!s&&m!==o.origType||i&&i.guid!==o.guid||r&&!r.test(o.namespace)||n&&n!==o.selector&&("**"!==n||!o.selector)||(d.splice(a,1),o.selector&&d.delegateCount--,c.remove&&c.remove.call(e,o));l&&!d.length&&(c.teardown&&c.teardown.call(e,f,g.handle)!==!1||pe.removeEvent(e,p,g.handle),delete u[p])}else for(p in u)pe.event.remove(e,p+t[h],i,n,!0);pe.isEmptyObject(u)&&(delete g.handle,pe._removeData(e,"events"))}},trigger:function(t,i,n,s){var a,o,r,l,h,u,c,d=[n||ne],p=ue.call(t,"type")?t.type:t,f=ue.call(t,"namespace")?t.namespace.split("."):[];if(r=u=n=n||ne,3!==n.nodeType&&8!==n.nodeType&&!Qe.test(p+pe.event.triggered)&&(p.indexOf(".")>-1&&(f=p.split("."),p=f.shift(),f.sort()),o=p.indexOf(":")<0&&"on"+p,t=t[pe.expando]?t:new pe.Event(p,"object"==typeof t&&t),t.isTrigger=s?2:3,t.namespace=f.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=n),i=null==i?[t]:pe.makeArray(i,[t]),h=pe.event.special[p]||{},s||!h.trigger||h.trigger.apply(n,i)!==!1)){if(!s&&!h.noBubble&&!pe.isWindow(n)){for(l=h.delegateType||p,Qe.test(l+p)||(r=r.parentNode);r;r=r.parentNode)d.push(r),u=r;u===(n.ownerDocument||ne)&&d.push(u.defaultView||u.parentWindow||e)}for(c=0;(r=d[c++])&&!t.isPropagationStopped();)t.type=c>1?l:h.bindType||p,a=(pe._data(r,"events")||{})[t.type]&&pe._data(r,"handle"),a&&a.apply(r,i),a=o&&r[o],a&&a.apply&&ze(r)&&(t.result=a.apply(r,i),t.result===!1&&t.preventDefault());if(t.type=p,!s&&!t.isDefaultPrevented()&&(!h._default||h._default.apply(d.pop(),i)===!1)&&ze(n)&&o&&n[p]&&!pe.isWindow(n)){u=n[o],u&&(n[o]=null),pe.event.triggered=p;try{n[p]()}catch(m){}pe.event.triggered=void 0,u&&(n[o]=u)}return t.result}},dispatch:function(e){e=pe.event.fix(e);var t,i,n,s,a,o=[],r=se.call(arguments),l=(pe._data(this,"events")||{})[e.type]||[],h=pe.event.special[e.type]||{};if(r[0]=e,e.delegateTarget=this,!h.preDispatch||h.preDispatch.call(this,e)!==!1){for(o=pe.event.handlers.call(this,e,l),t=0;(s=o[t++])&&!e.isPropagationStopped();)for(e.currentTarget=s.elem,i=0;(a=s.handlers[i++])&&!e.isImmediatePropagationStopped();)e.rnamespace&&!e.rnamespace.test(a.namespace)||(e.handleObj=a,e.data=a.data,n=((pe.event.special[a.origType]||{}).handle||a.handler).apply(s.elem,r),void 0!==n&&(e.result=n)===!1&&(e.preventDefault(),e.stopPropagation()));return h.postDispatch&&h.postDispatch.call(this,e),e.result}},handlers:function(e,t){var i,n,s,a,o=[],r=t.delegateCount,l=e.target;if(r&&l.nodeType&&("click"!==e.type||isNaN(e.button)||e.button<1))for(;l!=this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==e.type)){for(n=[],i=0;i<r;i++)a=t[i],s=a.selector+" ",void 0===n[s]&&(n[s]=a.needsContext?pe(s,this).index(l)>-1:pe.find(s,this,null,[l]).length),n[s]&&n.push(a);n.length&&o.push({elem:l,handlers:n})}return r<t.length&&o.push({elem:this,handlers:t.slice(r)}),o},fix:function(e){if(e[pe.expando])return e;var t,i,n,s=e.type,a=e,o=this.fixHooks[s];for(o||(this.fixHooks[s]=o=Ue.test(s)?this.mouseHooks:$e.test(s)?this.keyHooks:{}),n=o.props?this.props.concat(o.props):this.props,e=new pe.Event(a),t=n.length;t--;)i=n[t],e[i]=a[i];return e.target||(e.target=a.srcElement||ne),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,o.filter?o.filter(e,a):e},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var i,n,s,a=t.button,o=t.fromElement;return null==e.pageX&&null!=t.clientX&&(n=e.target.ownerDocument||ne,s=n.documentElement,i=n.body,e.pageX=t.clientX+(s&&s.scrollLeft||i&&i.scrollLeft||0)-(s&&s.clientLeft||i&&i.clientLeft||0),e.pageY=t.clientY+(s&&s.scrollTop||i&&i.scrollTop||0)-(s&&s.clientTop||i&&i.clientTop||0)),!e.relatedTarget&&o&&(e.relatedTarget=o===e.target?t.toElement:o),e.which||void 0===a||(e.which=1&a?1:2&a?3:4&a?2:0),e}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==_()&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:"focusin"},blur:{trigger:function(){if(this===_()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if(pe.nodeName(this,"input")&&"checkbox"===this.type&&this.click)return this.click(),!1},_default:function(e){return pe.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,i){var n=pe.extend(new pe.Event,i,{type:e,isSimulated:!0});pe.event.trigger(n,null,t),n.isDefaultPrevented()&&i.preventDefault()}},pe.removeEvent=ne.removeEventListener?function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)}:function(e,t,i){var n="on"+t;e.detachEvent&&("undefined"==typeof e[n]&&(e[n]=null),e.detachEvent(n,i))},pe.Event=function(e,t){return this instanceof pe.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?b:y):this.type=e,t&&pe.extend(this,t),this.timeStamp=e&&e.timeStamp||pe.now(),void(this[pe.expando]=!0)):new pe.Event(e,t)},pe.Event.prototype={constructor:pe.Event,isDefaultPrevented:y,isPropagationStopped:y,isImmediatePropagationStopped:y,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=b,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=b,e&&!this.isSimulated&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=b,e&&e.stopImmediatePropagation&&e.stopImmediatePropagation(),this.stopPropagation()}},pe.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){pe.event.special[e]={delegateType:t,bindType:t,handle:function(e){var i,n=this,s=e.relatedTarget,a=e.handleObj;return s&&(s===n||pe.contains(n,s))||(e.type=a.origType,i=a.handler.apply(this,arguments),e.type=t),i}}}),ce.submit||(pe.event.special.submit={setup:function(){return!pe.nodeName(this,"form")&&void pe.event.add(this,"click._submit keypress._submit",function(e){var t=e.target,i=pe.nodeName(t,"input")||pe.nodeName(t,"button")?pe.prop(t,"form"):void 0;i&&!pe._data(i,"submit")&&(pe.event.add(i,"submit._submit",function(e){e._submitBubble=!0}),pe._data(i,"submit",!0))})},postDispatch:function(e){e._submitBubble&&(delete e._submitBubble,this.parentNode&&!e.isTrigger&&pe.event.simulate("submit",this.parentNode,e))},teardown:function(){return!pe.nodeName(this,"form")&&void pe.event.remove(this,"._submit")}}),ce.change||(pe.event.special.change={setup:function(){return Ke.test(this.nodeName)?("checkbox"!==this.type&&"radio"!==this.type||(pe.event.add(this,"propertychange._change",function(e){"checked"===e.originalEvent.propertyName&&(this._justChanged=!0)}),pe.event.add(this,"click._change",function(e){this._justChanged&&!e.isTrigger&&(this._justChanged=!1),pe.event.simulate("change",this,e)})),!1):void pe.event.add(this,"beforeactivate._change",function(e){var t=e.target;Ke.test(t.nodeName)&&!pe._data(t,"change")&&(pe.event.add(t,"change._change",function(e){!this.parentNode||e.isSimulated||e.isTrigger||pe.event.simulate("change",this.parentNode,e)}),pe._data(t,"change",!0))})},handle:function(e){var t=e.target;if(this!==t||e.isSimulated||e.isTrigger||"radio"!==t.type&&"checkbox"!==t.type)return e.handleObj.handler.apply(this,arguments)},teardown:function(){return pe.event.remove(this,"._change"),!Ke.test(this.nodeName)}}),ce.focusin||pe.each({focus:"focusin",blur:"focusout"},function(e,t){var i=function(e){pe.event.simulate(t,e.target,pe.event.fix(e))};pe.event.special[t]={setup:function(){var n=this.ownerDocument||this,s=pe._data(n,t);s||n.addEventListener(e,i,!0),pe._data(n,t,(s||0)+1)},teardown:function(){var n=this.ownerDocument||this,s=pe._data(n,t)-1;s?pe._data(n,t,s):(n.removeEventListener(e,i,!0),pe._removeData(n,t))}}}),pe.fn.extend({on:function(e,t,i,n){return w(this,e,t,i,n)},one:function(e,t,i,n){return w(this,e,t,i,n,1)},off:function(e,t,i){var n,s;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,pe(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof e){for(s in e)this.off(s,t,e[s]);return this}return t!==!1&&"function"!=typeof t||(i=t,t=void 0),i===!1&&(i=y),this.each(function(){pe.event.remove(this,e,i,t)})},trigger:function(e,t){return this.each(function(){pe.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];if(i)return pe.event.trigger(e,t,i,!0)}});var Ze=/ jQuery\d+="(?:null|\d+)"/g,et=new RegExp("<(?:"+Ye+")[\\s/>]","i"),tt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,it=/<script|<style|<link/i,nt=/checked\s*(?:[^=]|=\s*.checked.)/i,st=/^true\/(.*)/,at=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,ot=p(ne),rt=ot.appendChild(ne.createElement("div"));pe.extend({htmlPrefilter:function(e){return e.replace(tt,"<$1></$2>")},clone:function(e,t,i){var n,s,a,o,r,l=pe.contains(e.ownerDocument,e);if(ce.html5Clone||pe.isXMLDoc(e)||!et.test("<"+e.nodeName+">")?a=e.cloneNode(!0):(rt.innerHTML=e.outerHTML,rt.removeChild(a=rt.firstChild)),!(ce.noCloneEvent&&ce.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||pe.isXMLDoc(e)))for(n=f(a),r=f(e),o=0;null!=(s=r[o]);++o)n[o]&&D(s,n[o]);if(t)if(i)for(r=r||f(e),n=n||f(a),o=0;null!=(s=r[o]);o++)T(s,n[o]);else T(e,a);return n=f(a,"script"),n.length>0&&m(n,!l&&f(e,"script")),n=r=s=null,a},cleanData:function(e,t){for(var i,n,s,a,o=0,r=pe.expando,l=pe.cache,h=ce.attributes,u=pe.event.special;null!=(i=e[o]);o++)if((t||ze(i))&&(s=i[r],a=s&&l[s])){if(a.events)for(n in a.events)u[n]?pe.event.remove(i,n):pe.removeEvent(i,n,a.handle);l[s]&&(delete l[s],h||"undefined"==typeof i.removeAttribute?i[r]=void 0:i.removeAttribute(r),ie.push(s))}}}),pe.fn.extend({domManip:S,detach:function(e){return P(this,e,!0)},remove:function(e){return P(this,e)},text:function(e){return Fe(this,function(e){return void 0===e?pe.text(this):this.empty().append((this[0]&&this[0].ownerDocument||ne).createTextNode(e))},null,e,arguments.length)},append:function(){return S(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=x(this,e);t.appendChild(e)}})},prepend:function(){return S(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=x(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return S(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return S(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++){for(1===e.nodeType&&pe.cleanData(f(e,!1));e.firstChild;)e.removeChild(e.firstChild);e.options&&pe.nodeName(e,"select")&&(e.options.length=0)}return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return pe.clone(this,e,t)})},html:function(e){return Fe(this,function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e)return 1===t.nodeType?t.innerHTML.replace(Ze,""):void 0;if("string"==typeof e&&!it.test(e)&&(ce.htmlSerialize||!et.test(e))&&(ce.leadingWhitespace||!qe.test(e))&&!Ge[(Re.exec(e)||["",""])[1].toLowerCase()]){e=pe.htmlPrefilter(e);try{for(;i<n;i++)t=this[i]||{},1===t.nodeType&&(pe.cleanData(f(t,!1)),t.innerHTML=e);t=0}catch(s){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=[];return S(this,arguments,function(t){var i=this.parentNode;pe.inArray(this,e)<0&&(pe.cleanData(f(this)),i&&i.replaceChild(t,this));
},e)}}),pe.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){pe.fn[e]=function(e){for(var i,n=0,s=[],a=pe(e),o=a.length-1;n<=o;n++)i=n===o?this:this.clone(!0),pe(a[n])[t](i),oe.apply(s,i.get());return this.pushStack(s)}});var lt,ht={HTML:"block",BODY:"block"},ut=/^margin/,ct=new RegExp("^("+He+")(?!px)[a-z%]+$","i"),dt=function(e,t,i,n){var s,a,o={};for(a in t)o[a]=e.style[a],e.style[a]=t[a];s=i.apply(e,n||[]);for(a in t)e.style[a]=o[a];return s},pt=ne.documentElement;!function(){function t(){var t,u,c=ne.documentElement;c.appendChild(l),h.style.cssText="-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",i=s=r=!1,n=o=!0,e.getComputedStyle&&(u=e.getComputedStyle(h),i="1%"!==(u||{}).top,r="2px"===(u||{}).marginLeft,s="4px"===(u||{width:"4px"}).width,h.style.marginRight="50%",n="4px"===(u||{marginRight:"4px"}).marginRight,t=h.appendChild(ne.createElement("div")),t.style.cssText=h.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",t.style.marginRight=t.style.width="0",h.style.width="1px",o=!parseFloat((e.getComputedStyle(t)||{}).marginRight),h.removeChild(t)),h.style.display="none",a=0===h.getClientRects().length,a&&(h.style.display="",h.innerHTML="<table><tr><td></td><td>t</td></tr></table>",h.childNodes[0].style.borderCollapse="separate",t=h.getElementsByTagName("td"),t[0].style.cssText="margin:0;border:0;padding:0;display:none",a=0===t[0].offsetHeight,a&&(t[0].style.display="",t[1].style.display="none",a=0===t[0].offsetHeight)),c.removeChild(l)}var i,n,s,a,o,r,l=ne.createElement("div"),h=ne.createElement("div");h.style&&(h.style.cssText="float:left;opacity:.5",ce.opacity="0.5"===h.style.opacity,ce.cssFloat=!!h.style.cssFloat,h.style.backgroundClip="content-box",h.cloneNode(!0).style.backgroundClip="",ce.clearCloneStyle="content-box"===h.style.backgroundClip,l=ne.createElement("div"),l.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",h.innerHTML="",l.appendChild(h),ce.boxSizing=""===h.style.boxSizing||""===h.style.MozBoxSizing||""===h.style.WebkitBoxSizing,pe.extend(ce,{reliableHiddenOffsets:function(){return null==i&&t(),a},boxSizingReliable:function(){return null==i&&t(),s},pixelMarginRight:function(){return null==i&&t(),n},pixelPosition:function(){return null==i&&t(),i},reliableMarginRight:function(){return null==i&&t(),o},reliableMarginLeft:function(){return null==i&&t(),r}}))}();var ft,mt,gt=/^(top|right|bottom|left)$/;e.getComputedStyle?(ft=function(t){var i=t.ownerDocument.defaultView;return i&&i.opener||(i=e),i.getComputedStyle(t)},mt=function(e,t,i){var n,s,a,o,r=e.style;return i=i||ft(e),o=i?i.getPropertyValue(t)||i[t]:void 0,""!==o&&void 0!==o||pe.contains(e.ownerDocument,e)||(o=pe.style(e,t)),i&&!ce.pixelMarginRight()&&ct.test(o)&&ut.test(t)&&(n=r.width,s=r.minWidth,a=r.maxWidth,r.minWidth=r.maxWidth=r.width=o,o=i.width,r.width=n,r.minWidth=s,r.maxWidth=a),void 0===o?o:o+""}):pt.currentStyle&&(ft=function(e){return e.currentStyle},mt=function(e,t,i){var n,s,a,o,r=e.style;return i=i||ft(e),o=i?i[t]:void 0,null==o&&r&&r[t]&&(o=r[t]),ct.test(o)&&!gt.test(t)&&(n=r.left,s=e.runtimeStyle,a=s&&s.left,a&&(s.left=e.currentStyle.left),r.left="fontSize"===t?"1em":o,o=r.pixelLeft+"px",r.left=n,a&&(s.left=a)),void 0===o?o:o+""||"auto"});var vt=/alpha\([^)]*\)/i,bt=/opacity\s*=\s*([^)]*)/i,yt=/^(none|table(?!-c[ea]).+)/,_t=new RegExp("^("+He+")(.*)$","i"),wt={position:"absolute",visibility:"hidden",display:"block"},xt={letterSpacing:"0",fontWeight:"400"},Ct=["Webkit","O","Moz","ms"],kt=ne.createElement("div").style;pe.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=mt(e,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":ce.cssFloat?"cssFloat":"styleFloat"},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var s,a,o,r=pe.camelCase(t),l=e.style;if(t=pe.cssProps[r]||(pe.cssProps[r]=z(r)||r),o=pe.cssHooks[t]||pe.cssHooks[r],void 0===i)return o&&"get"in o&&void 0!==(s=o.get(e,!1,n))?s:l[t];if(a=typeof i,"string"===a&&(s=Oe.exec(i))&&s[1]&&(i=d(e,t,s),a="number"),null!=i&&i===i&&("number"===a&&(i+=s&&s[3]||(pe.cssNumber[r]?"":"px")),ce.clearCloneStyle||""!==i||0!==t.indexOf("background")||(l[t]="inherit"),!(o&&"set"in o&&void 0===(i=o.set(e,i,n)))))try{l[t]=i}catch(h){}}},css:function(e,t,i,n){var s,a,o,r=pe.camelCase(t);return t=pe.cssProps[r]||(pe.cssProps[r]=z(r)||r),o=pe.cssHooks[t]||pe.cssHooks[r],o&&"get"in o&&(a=o.get(e,!0,i)),void 0===a&&(a=mt(e,t,n)),"normal"===a&&t in xt&&(a=xt[t]),""===i||i?(s=parseFloat(a),i===!0||isFinite(s)?s||0:a):a}}),pe.each(["height","width"],function(e,t){pe.cssHooks[t]={get:function(e,i,n){if(i)return yt.test(pe.css(e,"display"))&&0===e.offsetWidth?dt(e,wt,function(){return O(e,t,n)}):O(e,t,n)},set:function(e,i,n){var s=n&&ft(e);return A(e,i,n?H(e,t,n,ce.boxSizing&&"border-box"===pe.css(e,"boxSizing",!1,s),s):0)}}}),ce.opacity||(pe.cssHooks.opacity={get:function(e,t){return bt.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var i=e.style,n=e.currentStyle,s=pe.isNumeric(t)?"alpha(opacity="+100*t+")":"",a=n&&n.filter||i.filter||"";i.zoom=1,(t>=1||""===t)&&""===pe.trim(a.replace(vt,""))&&i.removeAttribute&&(i.removeAttribute("filter"),""===t||n&&!n.filter)||(i.filter=vt.test(a)?a.replace(vt,s):a+" "+s)}}),pe.cssHooks.marginRight=E(ce.reliableMarginRight,function(e,t){if(t)return dt(e,{display:"inline-block"},mt,[e,"marginRight"])}),pe.cssHooks.marginLeft=E(ce.reliableMarginLeft,function(e,t){if(t)return(parseFloat(mt(e,"marginLeft"))||(pe.contains(e.ownerDocument,e)?e.getBoundingClientRect().left-dt(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}):0))+"px"}),pe.each({margin:"",padding:"",border:"Width"},function(e,t){pe.cssHooks[e+t]={expand:function(i){for(var n=0,s={},a="string"==typeof i?i.split(" "):[i];n<4;n++)s[e+Le[n]+t]=a[n]||a[n-2]||a[0];return s}},ut.test(e)||(pe.cssHooks[e+t].set=A)}),pe.fn.extend({css:function(e,t){return Fe(this,function(e,t,i){var n,s,a={},o=0;if(pe.isArray(t)){for(n=ft(e),s=t.length;o<s;o++)a[t[o]]=pe.css(e,t[o],!1,n);return a}return void 0!==i?pe.style(e,t,i):pe.css(e,t)},e,t,arguments.length>1)},show:function(){return N(this,!0)},hide:function(){return N(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){We(this)?pe(this).show():pe(this).hide()})}}),pe.Tween=L,L.prototype={constructor:L,init:function(e,t,i,n,s,a){this.elem=e,this.prop=i,this.easing=s||pe.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=n,this.unit=a||(pe.cssNumber[i]?"":"px")},cur:function(){var e=L.propHooks[this.prop];return e&&e.get?e.get(this):L.propHooks._default.get(this)},run:function(e){var t,i=L.propHooks[this.prop];return this.options.duration?this.pos=t=pe.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):L.propHooks._default.set(this),this}},L.prototype.init.prototype=L.prototype,L.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=pe.css(e.elem,e.prop,""),t&&"auto"!==t?t:0)},set:function(e){pe.fx.step[e.prop]?pe.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[pe.cssProps[e.prop]]&&!pe.cssHooks[e.prop]?e.elem[e.prop]=e.now:pe.style(e.elem,e.prop,e.now+e.unit)}}},L.propHooks.scrollTop=L.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},pe.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},pe.fx=L.prototype.init,pe.fx.step={};var Tt,Dt,St=/^(?:toggle|show|hide)$/,Pt=/queueHooks$/;pe.Animation=pe.extend(q,{tweeners:{"*":[function(e,t){var i=this.createTween(e,t);return d(i.elem,e,Oe.exec(t),i),i}]},tweener:function(e,t){pe.isFunction(e)?(t=e,e=["*"]):e=e.match(Me);for(var i,n=0,s=e.length;n<s;n++)i=e[n],q.tweeners[i]=q.tweeners[i]||[],q.tweeners[i].unshift(t)},prefilters:[R],prefilter:function(e,t){t?q.prefilters.unshift(e):q.prefilters.push(e)}}),pe.speed=function(e,t,i){var n=e&&"object"==typeof e?pe.extend({},e):{complete:i||!i&&t||pe.isFunction(e)&&e,duration:e,easing:i&&t||t&&!pe.isFunction(t)&&t};return n.duration=pe.fx.off?0:"number"==typeof n.duration?n.duration:n.duration in pe.fx.speeds?pe.fx.speeds[n.duration]:pe.fx.speeds._default,null!=n.queue&&n.queue!==!0||(n.queue="fx"),n.old=n.complete,n.complete=function(){pe.isFunction(n.old)&&n.old.call(this),n.queue&&pe.dequeue(this,n.queue)},n},pe.fn.extend({fadeTo:function(e,t,i,n){return this.filter(We).css("opacity",0).show().end().animate({opacity:t},e,i,n)},animate:function(e,t,i,n){var s=pe.isEmptyObject(e),a=pe.speed(t,i,n),o=function(){var t=q(this,pe.extend({},e),a);(s||pe._data(this,"finish"))&&t.stop(!0)};return o.finish=o,s||a.queue===!1?this.each(o):this.queue(a.queue,o)},stop:function(e,t,i){var n=function(e){var t=e.stop;delete e.stop,t(i)};return"string"!=typeof e&&(i=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,s=null!=e&&e+"queueHooks",a=pe.timers,o=pe._data(this);if(s)o[s]&&o[s].stop&&n(o[s]);else for(s in o)o[s]&&o[s].stop&&Pt.test(s)&&n(o[s]);for(s=a.length;s--;)a[s].elem!==this||null!=e&&a[s].queue!==e||(a[s].anim.stop(i),t=!1,a.splice(s,1));!t&&i||pe.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,i=pe._data(this),n=i[e+"queue"],s=i[e+"queueHooks"],a=pe.timers,o=n?n.length:0;for(i.finish=!0,pe.queue(this,e,[]),s&&s.stop&&s.stop.call(this,!0),t=a.length;t--;)a[t].elem===this&&a[t].queue===e&&(a[t].anim.stop(!0),a.splice(t,1));for(t=0;t<o;t++)n[t]&&n[t].finish&&n[t].finish.call(this);delete i.finish})}}),pe.each(["toggle","show","hide"],function(e,t){var i=pe.fn[t];pe.fn[t]=function(e,n,s){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(F(t,!0),e,n,s)}}),pe.each({slideDown:F("show"),slideUp:F("hide"),slideToggle:F("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){pe.fn[e]=function(e,i,n){return this.animate(t,e,i,n)}}),pe.timers=[],pe.fx.tick=function(){var e,t=pe.timers,i=0;for(Tt=pe.now();i<t.length;i++)e=t[i],e()||t[i]!==e||t.splice(i--,1);t.length||pe.fx.stop(),Tt=void 0},pe.fx.timer=function(e){pe.timers.push(e),e()?pe.fx.start():pe.timers.pop()},pe.fx.interval=13,pe.fx.start=function(){Dt||(Dt=e.setInterval(pe.fx.tick,pe.fx.interval))},pe.fx.stop=function(){e.clearInterval(Dt),Dt=null},pe.fx.speeds={slow:600,fast:200,_default:400},pe.fn.delay=function(t,i){return t=pe.fx?pe.fx.speeds[t]||t:t,i=i||"fx",this.queue(i,function(i,n){var s=e.setTimeout(i,t);n.stop=function(){e.clearTimeout(s)}})},function(){var e,t=ne.createElement("input"),i=ne.createElement("div"),n=ne.createElement("select"),s=n.appendChild(ne.createElement("option"));i=ne.createElement("div"),i.setAttribute("className","t"),i.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",e=i.getElementsByTagName("a")[0],t.setAttribute("type","checkbox"),i.appendChild(t),e=i.getElementsByTagName("a")[0],e.style.cssText="top:1px",ce.getSetAttribute="t"!==i.className,ce.style=/top/.test(e.getAttribute("style")),ce.hrefNormalized="/a"===e.getAttribute("href"),ce.checkOn=!!t.value,ce.optSelected=s.selected,ce.enctype=!!ne.createElement("form").enctype,n.disabled=!0,ce.optDisabled=!s.disabled,t=ne.createElement("input"),t.setAttribute("value",""),ce.input=""===t.getAttribute("value"),t.value="t",t.setAttribute("type","radio"),ce.radioValue="t"===t.value}();var Mt=/\r/g,It=/[\x20\t\r\n\f]+/g;pe.fn.extend({val:function(e){var t,i,n,s=this[0];{if(arguments.length)return n=pe.isFunction(e),this.each(function(i){var s;1===this.nodeType&&(s=n?e.call(this,i,pe(this).val()):e,null==s?s="":"number"==typeof s?s+="":pe.isArray(s)&&(s=pe.map(s,function(e){return null==e?"":e+""})),t=pe.valHooks[this.type]||pe.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,s,"value")||(this.value=s))});if(s)return t=pe.valHooks[s.type]||pe.valHooks[s.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(i=t.get(s,"value"))?i:(i=s.value,"string"==typeof i?i.replace(Mt,""):null==i?"":i)}}}),pe.extend({valHooks:{option:{get:function(e){var t=pe.find.attr(e,"value");return null!=t?t:pe.trim(pe.text(e)).replace(It," ")}},select:{get:function(e){for(var t,i,n=e.options,s=e.selectedIndex,a="select-one"===e.type||s<0,o=a?null:[],r=a?s+1:n.length,l=s<0?r:a?s:0;l<r;l++)if(i=n[l],(i.selected||l===s)&&(ce.optDisabled?!i.disabled:null===i.getAttribute("disabled"))&&(!i.parentNode.disabled||!pe.nodeName(i.parentNode,"optgroup"))){if(t=pe(i).val(),a)return t;o.push(t)}return o},set:function(e,t){for(var i,n,s=e.options,a=pe.makeArray(t),o=s.length;o--;)if(n=s[o],pe.inArray(pe.valHooks.option.get(n),a)>-1)try{n.selected=i=!0}catch(r){n.scrollHeight}else n.selected=!1;return i||(e.selectedIndex=-1),s}}}}),pe.each(["radio","checkbox"],function(){pe.valHooks[this]={set:function(e,t){if(pe.isArray(t))return e.checked=pe.inArray(pe(e).val(),t)>-1}},ce.checkOn||(pe.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var Et,zt,Nt=pe.expr.attrHandle,At=/^(?:checked|selected)$/i,Ht=ce.getSetAttribute,Ot=ce.input;pe.fn.extend({attr:function(e,t){return Fe(this,pe.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){pe.removeAttr(this,e)})}}),pe.extend({attr:function(e,t,i){var n,s,a=e.nodeType;if(3!==a&&8!==a&&2!==a)return"undefined"==typeof e.getAttribute?pe.prop(e,t,i):(1===a&&pe.isXMLDoc(e)||(t=t.toLowerCase(),s=pe.attrHooks[t]||(pe.expr.match.bool.test(t)?zt:Et)),void 0!==i?null===i?void pe.removeAttr(e,t):s&&"set"in s&&void 0!==(n=s.set(e,i,t))?n:(e.setAttribute(t,i+""),i):s&&"get"in s&&null!==(n=s.get(e,t))?n:(n=pe.find.attr(e,t),null==n?void 0:n))},attrHooks:{type:{set:function(e,t){if(!ce.radioValue&&"radio"===t&&pe.nodeName(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,n,s=0,a=t&&t.match(Me);if(a&&1===e.nodeType)for(;i=a[s++];)n=pe.propFix[i]||i,pe.expr.match.bool.test(i)?Ot&&Ht||!At.test(i)?e[n]=!1:e[pe.camelCase("default-"+i)]=e[n]=!1:pe.attr(e,i,""),e.removeAttribute(Ht?i:n)}}),zt={set:function(e,t,i){return t===!1?pe.removeAttr(e,i):Ot&&Ht||!At.test(i)?e.setAttribute(!Ht&&pe.propFix[i]||i,i):e[pe.camelCase("default-"+i)]=e[i]=!0,i}},pe.each(pe.expr.match.bool.source.match(/\w+/g),function(e,t){var i=Nt[t]||pe.find.attr;Ot&&Ht||!At.test(t)?Nt[t]=function(e,t,n){var s,a;return n||(a=Nt[t],Nt[t]=s,s=null!=i(e,t,n)?t.toLowerCase():null,Nt[t]=a),s}:Nt[t]=function(e,t,i){if(!i)return e[pe.camelCase("default-"+t)]?t.toLowerCase():null}}),Ot&&Ht||(pe.attrHooks.value={set:function(e,t,i){return pe.nodeName(e,"input")?void(e.defaultValue=t):Et&&Et.set(e,t,i)}}),Ht||(Et={set:function(e,t,i){var n=e.getAttributeNode(i);if(n||e.setAttributeNode(n=e.ownerDocument.createAttribute(i)),n.value=t+="","value"===i||t===e.getAttribute(i))return t}},Nt.id=Nt.name=Nt.coords=function(e,t,i){var n;if(!i)return(n=e.getAttributeNode(t))&&""!==n.value?n.value:null},pe.valHooks.button={get:function(e,t){var i=e.getAttributeNode(t);if(i&&i.specified)return i.value},set:Et.set},pe.attrHooks.contenteditable={set:function(e,t,i){Et.set(e,""!==t&&t,i)}},pe.each(["width","height"],function(e,t){pe.attrHooks[t]={set:function(e,i){if(""===i)return e.setAttribute(t,"auto"),i}}})),ce.style||(pe.attrHooks.style={get:function(e){return e.style.cssText||void 0},set:function(e,t){return e.style.cssText=t+""}});var Lt=/^(?:input|select|textarea|button|object)$/i,Wt=/^(?:a|area)$/i;pe.fn.extend({prop:function(e,t){return Fe(this,pe.prop,e,t,arguments.length>1)},removeProp:function(e){return e=pe.propFix[e]||e,this.each(function(){try{this[e]=void 0,delete this[e]}catch(t){}})}}),pe.extend({prop:function(e,t,i){var n,s,a=e.nodeType;if(3!==a&&8!==a&&2!==a)return 1===a&&pe.isXMLDoc(e)||(t=pe.propFix[t]||t,s=pe.propHooks[t]),void 0!==i?s&&"set"in s&&void 0!==(n=s.set(e,i,t))?n:e[t]=i:s&&"get"in s&&null!==(n=s.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=pe.find.attr(e,"tabindex");return t?parseInt(t,10):Lt.test(e.nodeName)||Wt.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),ce.hrefNormalized||pe.each(["href","src"],function(e,t){pe.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}}),ce.optSelected||(pe.propHooks.selected={get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),pe.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){pe.propFix[this.toLowerCase()]=this}),ce.enctype||(pe.propFix.enctype="encoding");var Ft=/[\t\r\n\f]/g;pe.fn.extend({addClass:function(e){var t,i,n,s,a,o,r,l=0;if(pe.isFunction(e))return this.each(function(t){pe(this).addClass(e.call(this,t,Y(this)))});if("string"==typeof e&&e)for(t=e.match(Me)||[];i=this[l++];)if(s=Y(i),n=1===i.nodeType&&(" "+s+" ").replace(Ft," ")){for(o=0;a=t[o++];)n.indexOf(" "+a+" ")<0&&(n+=a+" ");r=pe.trim(n),s!==r&&pe.attr(i,"class",r)}return this},removeClass:function(e){var t,i,n,s,a,o,r,l=0;if(pe.isFunction(e))return this.each(function(t){pe(this).removeClass(e.call(this,t,Y(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof e&&e)for(t=e.match(Me)||[];i=this[l++];)if(s=Y(i),n=1===i.nodeType&&(" "+s+" ").replace(Ft," ")){for(o=0;a=t[o++];)for(;n.indexOf(" "+a+" ")>-1;)n=n.replace(" "+a+" "," ");r=pe.trim(n),s!==r&&pe.attr(i,"class",r)}return this},toggleClass:function(e,t){var i=typeof e;return"boolean"==typeof t&&"string"===i?t?this.addClass(e):this.removeClass(e):pe.isFunction(e)?this.each(function(i){pe(this).toggleClass(e.call(this,i,Y(this),t),t)}):this.each(function(){var t,n,s,a;if("string"===i)for(n=0,s=pe(this),a=e.match(Me)||[];t=a[n++];)s.hasClass(t)?s.removeClass(t):s.addClass(t);else void 0!==e&&"boolean"!==i||(t=Y(this),t&&pe._data(this,"__className__",t),pe.attr(this,"class",t||e===!1?"":pe._data(this,"__className__")||""))})},hasClass:function(e){var t,i,n=0;for(t=" "+e+" ";i=this[n++];)if(1===i.nodeType&&(" "+Y(i)+" ").replace(Ft," ").indexOf(t)>-1)return!0;return!1}}),pe.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){pe.fn[t]=function(e,i){return arguments.length>0?this.on(t,null,e,i):this.trigger(t)}}),pe.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}});var Bt=e.location,Rt=pe.now(),jt=/\?/,qt=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;pe.parseJSON=function(t){if(e.JSON&&e.JSON.parse)return e.JSON.parse(t+"");var i,n=null,s=pe.trim(t+"");return s&&!pe.trim(s.replace(qt,function(e,t,s,a){return i&&t&&(n=0),0===n?e:(i=s||t,n+=!a-!s,"")}))?Function("return "+s)():pe.error("Invalid JSON: "+t)},pe.parseXML=function(t){var i,n;if(!t||"string"!=typeof t)return null;try{e.DOMParser?(n=new e.DOMParser,i=n.parseFromString(t,"text/xml")):(i=new e.ActiveXObject("Microsoft.XMLDOM"),i.async="false",i.loadXML(t))}catch(s){i=void 0}return i&&i.documentElement&&!i.getElementsByTagName("parsererror").length||pe.error("Invalid XML: "+t),i};var Yt=/#.*$/,Gt=/([?&])_=[^&]*/,Vt=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Xt=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Kt=/^(?:GET|HEAD)$/,$t=/^\/\//,Ut=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Qt={},Jt={},Zt="*/".concat("*"),ei=Bt.href,ti=Ut.exec(ei.toLowerCase())||[];pe.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ei,type:"GET",isLocal:Xt.test(ti[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Zt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":pe.parseJSON,"text xml":pe.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?X(X(e,pe.ajaxSettings),t):X(pe.ajaxSettings,e)},ajaxPrefilter:G(Qt),ajaxTransport:G(Jt),ajax:function(t,i){function n(t,i,n,s){var a,c,b,y,w,C=i;2!==_&&(_=2,l&&e.clearTimeout(l),u=void 0,r=s||"",x.readyState=t>0?4:0,a=t>=200&&t<300||304===t,n&&(y=K(d,x,n)),y=$(d,y,x,a),a?(d.ifModified&&(w=x.getResponseHeader("Last-Modified"),w&&(pe.lastModified[o]=w),w=x.getResponseHeader("etag"),w&&(pe.etag[o]=w)),204===t||"HEAD"===d.type?C="nocontent":304===t?C="notmodified":(C=y.state,c=y.data,b=y.error,a=!b)):(b=C,!t&&C||(C="error",t<0&&(t=0))),x.status=t,x.statusText=(i||C)+"",a?m.resolveWith(p,[c,C,x]):m.rejectWith(p,[x,C,b]),x.statusCode(v),v=void 0,h&&f.trigger(a?"ajaxSuccess":"ajaxError",[x,d,a?c:b]),g.fireWith(p,[x,C]),h&&(f.trigger("ajaxComplete",[x,d]),--pe.active||pe.event.trigger("ajaxStop")))}"object"==typeof t&&(i=t,t=void 0),i=i||{};var s,a,o,r,l,h,u,c,d=pe.ajaxSetup({},i),p=d.context||d,f=d.context&&(p.nodeType||p.jquery)?pe(p):pe.event,m=pe.Deferred(),g=pe.Callbacks("once memory"),v=d.statusCode||{},b={},y={},_=0,w="canceled",x={readyState:0,getResponseHeader:function(e){var t;if(2===_){if(!c)for(c={};t=Vt.exec(r);)c[t[1].toLowerCase()]=t[2];t=c[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===_?r:null},setRequestHeader:function(e,t){var i=e.toLowerCase();return _||(e=y[i]=y[i]||e,b[e]=t),this},overrideMimeType:function(e){return _||(d.mimeType=e),this},statusCode:function(e){var t;if(e)if(_<2)for(t in e)v[t]=[v[t],e[t]];else x.always(e[x.status]);return this},abort:function(e){var t=e||w;return u&&u.abort(t),n(0,t),this}};if(m.promise(x).complete=g.add,x.success=x.done,x.error=x.fail,d.url=((t||d.url||ei)+"").replace(Yt,"").replace($t,ti[1]+"//"),d.type=i.method||i.type||d.method||d.type,d.dataTypes=pe.trim(d.dataType||"*").toLowerCase().match(Me)||[""],null==d.crossDomain&&(s=Ut.exec(d.url.toLowerCase()),d.crossDomain=!(!s||s[1]===ti[1]&&s[2]===ti[2]&&(s[3]||("http:"===s[1]?"80":"443"))===(ti[3]||("http:"===ti[1]?"80":"443")))),d.data&&d.processData&&"string"!=typeof d.data&&(d.data=pe.param(d.data,d.traditional)),V(Qt,d,i,x),2===_)return x;h=pe.event&&d.global,h&&0===pe.active++&&pe.event.trigger("ajaxStart"),d.type=d.type.toUpperCase(),d.hasContent=!Kt.test(d.type),o=d.url,d.hasContent||(d.data&&(o=d.url+=(jt.test(o)?"&":"?")+d.data,delete d.data),d.cache===!1&&(d.url=Gt.test(o)?o.replace(Gt,"$1_="+Rt++):o+(jt.test(o)?"&":"?")+"_="+Rt++)),d.ifModified&&(pe.lastModified[o]&&x.setRequestHeader("If-Modified-Since",pe.lastModified[o]),pe.etag[o]&&x.setRequestHeader("If-None-Match",pe.etag[o])),(d.data&&d.hasContent&&d.contentType!==!1||i.contentType)&&x.setRequestHeader("Content-Type",d.contentType),x.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+("*"!==d.dataTypes[0]?", "+Zt+"; q=0.01":""):d.accepts["*"]);for(a in d.headers)x.setRequestHeader(a,d.headers[a]);if(d.beforeSend&&(d.beforeSend.call(p,x,d)===!1||2===_))return x.abort();w="abort";for(a in{success:1,error:1,complete:1})x[a](d[a]);if(u=V(Jt,d,i,x)){if(x.readyState=1,h&&f.trigger("ajaxSend",[x,d]),2===_)return x;d.async&&d.timeout>0&&(l=e.setTimeout(function(){x.abort("timeout")},d.timeout));try{_=1,u.send(b,n)}catch(C){if(!(_<2))throw C;n(-1,C)}}else n(-1,"No Transport");return x},getJSON:function(e,t,i){return pe.get(e,t,i,"json")},getScript:function(e,t){return pe.get(e,void 0,t,"script")}}),pe.each(["get","post"],function(e,t){pe[t]=function(e,i,n,s){return pe.isFunction(i)&&(s=s||n,n=i,i=void 0),pe.ajax(pe.extend({url:e,type:t,dataType:s,data:i,success:n},pe.isPlainObject(e)&&e))}}),pe._evalUrl=function(e){return pe.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},pe.fn.extend({wrapAll:function(e){if(pe.isFunction(e))return this.each(function(t){pe(this).wrapAll(e.call(this,t))});if(this[0]){var t=pe(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstChild&&1===e.firstChild.nodeType;)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return pe.isFunction(e)?this.each(function(t){pe(this).wrapInner(e.call(this,t))}):this.each(function(){var t=pe(this),i=t.contents();i.length?i.wrapAll(e):t.append(e)})},wrap:function(e){var t=pe.isFunction(e);return this.each(function(i){pe(this).wrapAll(t?e.call(this,i):e)})},unwrap:function(){return this.parent().each(function(){pe.nodeName(this,"body")||pe(this).replaceWith(this.childNodes)}).end()}}),pe.expr.filters.hidden=function(e){return ce.reliableHiddenOffsets()?e.offsetWidth<=0&&e.offsetHeight<=0&&!e.getClientRects().length:Q(e)},pe.expr.filters.visible=function(e){return!pe.expr.filters.hidden(e)};var ii=/%20/g,ni=/\[\]$/,si=/\r?\n/g,ai=/^(?:submit|button|image|reset|file)$/i,oi=/^(?:input|select|textarea|keygen)/i;pe.param=function(e,t){var i,n=[],s=function(e,t){t=pe.isFunction(t)?t():null==t?"":t,n[n.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(void 0===t&&(t=pe.ajaxSettings&&pe.ajaxSettings.traditional),pe.isArray(e)||e.jquery&&!pe.isPlainObject(e))pe.each(e,function(){s(this.name,this.value)});else for(i in e)J(i,e[i],t,s);return n.join("&").replace(ii,"+")},pe.fn.extend({serialize:function(){return pe.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=pe.prop(this,"elements");return e?pe.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!pe(this).is(":disabled")&&oi.test(this.nodeName)&&!ai.test(e)&&(this.checked||!Be.test(e))}).map(function(e,t){var i=pe(this).val();return null==i?null:pe.isArray(i)?pe.map(i,function(e){return{name:t.name,value:e.replace(si,"\r\n")}}):{name:t.name,value:i.replace(si,"\r\n")}}).get()}}),pe.ajaxSettings.xhr=void 0!==e.ActiveXObject?function(){return this.isLocal?ee():ne.documentMode>8?Z():/^(get|post|head|put|delete|options)$/i.test(this.type)&&Z()||ee()}:Z;var ri=0,li={},hi=pe.ajaxSettings.xhr();e.attachEvent&&e.attachEvent("onunload",function(){for(var e in li)li[e](void 0,!0)}),ce.cors=!!hi&&"withCredentials"in hi,hi=ce.ajax=!!hi,hi&&pe.ajaxTransport(function(t){if(!t.crossDomain||ce.cors){var i;return{send:function(n,s){var a,o=t.xhr(),r=++ri;if(o.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(a in t.xhrFields)o[a]=t.xhrFields[a];t.mimeType&&o.overrideMimeType&&o.overrideMimeType(t.mimeType),t.crossDomain||n["X-Requested-With"]||(n["X-Requested-With"]="XMLHttpRequest");for(a in n)void 0!==n[a]&&o.setRequestHeader(a,n[a]+"");o.send(t.hasContent&&t.data||null),i=function(e,n){var a,l,h;if(i&&(n||4===o.readyState))if(delete li[r],i=void 0,o.onreadystatechange=pe.noop,n)4!==o.readyState&&o.abort();else{h={},a=o.status,"string"==typeof o.responseText&&(h.text=o.responseText);try{l=o.statusText}catch(u){l=""}a||!t.isLocal||t.crossDomain?1223===a&&(a=204):a=h.text?200:404}h&&s(a,l,h,o.getAllResponseHeaders())},t.async?4===o.readyState?e.setTimeout(i):o.onreadystatechange=li[r]=i:i()},abort:function(){i&&i(void 0,!0)}}}}),pe.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return pe.globalEval(e),e}}}),pe.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),pe.ajaxTransport("script",function(e){if(e.crossDomain){var t,i=ne.head||pe("head")[0]||ne.documentElement;return{send:function(n,s){t=ne.createElement("script"),t.async=!0,e.scriptCharset&&(t.charset=e.scriptCharset),t.src=e.url,t.onload=t.onreadystatechange=function(e,i){(i||!t.readyState||/loaded|complete/.test(t.readyState))&&(t.onload=t.onreadystatechange=null,t.parentNode&&t.parentNode.removeChild(t),t=null,i||s(200,"success"))},i.insertBefore(t,i.firstChild)},abort:function(){t&&t.onload(void 0,!0)}}}});var ui=[],ci=/(=)\?(?=&|$)|\?\?/;pe.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=ui.pop()||pe.expando+"_"+Rt++;return this[e]=!0,e}}),pe.ajaxPrefilter("json jsonp",function(t,i,n){var s,a,o,r=t.jsonp!==!1&&(ci.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&ci.test(t.data)&&"data");if(r||"jsonp"===t.dataTypes[0])return s=t.jsonpCallback=pe.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,r?t[r]=t[r].replace(ci,"$1"+s):t.jsonp!==!1&&(t.url+=(jt.test(t.url)?"&":"?")+t.jsonp+"="+s),t.converters["script json"]=function(){return o||pe.error(s+" was not called"),o[0]},t.dataTypes[0]="json",a=e[s],e[s]=function(){o=arguments},n.always(function(){void 0===a?pe(e).removeProp(s):e[s]=a,t[s]&&(t.jsonpCallback=i.jsonpCallback,ui.push(s)),o&&pe.isFunction(a)&&a(o[0]),o=a=void 0}),"script"}),pe.parseHTML=function(e,t,i){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(i=t,t=!1),t=t||ne;var n=xe.exec(e),s=!i&&[];return n?[t.createElement(n[1])]:(n=v([e],t,s),s&&s.length&&pe(s).remove(),pe.merge([],n.childNodes))};var di=pe.fn.load;pe.fn.load=function(e,t,i){if("string"!=typeof e&&di)return di.apply(this,arguments);var n,s,a,o=this,r=e.indexOf(" ");return r>-1&&(n=pe.trim(e.slice(r,e.length)),e=e.slice(0,r)),pe.isFunction(t)?(i=t,t=void 0):t&&"object"==typeof t&&(s="POST"),o.length>0&&pe.ajax({url:e,type:s||"GET",dataType:"html",data:t}).done(function(e){a=arguments,o.html(n?pe("<div>").append(pe.parseHTML(e)).find(n):e)}).always(i&&function(e,t){o.each(function(){i.apply(this,a||[e.responseText,t,e])})}),this},pe.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){pe.fn[t]=function(e){return this.on(t,e)}}),pe.expr.filters.animated=function(e){return pe.grep(pe.timers,function(t){return e===t.elem}).length},pe.offset={setOffset:function(e,t,i){var n,s,a,o,r,l,h,u=pe.css(e,"position"),c=pe(e),d={};"static"===u&&(e.style.position="relative"),r=c.offset(),a=pe.css(e,"top"),l=pe.css(e,"left"),h=("absolute"===u||"fixed"===u)&&pe.inArray("auto",[a,l])>-1,h?(n=c.position(),o=n.top,s=n.left):(o=parseFloat(a)||0,s=parseFloat(l)||0),pe.isFunction(t)&&(t=t.call(e,i,pe.extend({},r))),null!=t.top&&(d.top=t.top-r.top+o),null!=t.left&&(d.left=t.left-r.left+s),"using"in t?t.using.call(e,d):c.css(d)}},pe.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){pe.offset.setOffset(this,e,t)});var t,i,n={top:0,left:0},s=this[0],a=s&&s.ownerDocument;if(a)return t=a.documentElement,pe.contains(t,s)?("undefined"!=typeof s.getBoundingClientRect&&(n=s.getBoundingClientRect()),i=te(a),{top:n.top+(i.pageYOffset||t.scrollTop)-(t.clientTop||0),left:n.left+(i.pageXOffset||t.scrollLeft)-(t.clientLeft||0)}):n},position:function(){if(this[0]){var e,t,i={top:0,left:0},n=this[0];return"fixed"===pe.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),pe.nodeName(e[0],"html")||(i=e.offset()),i.top+=pe.css(e[0],"borderTopWidth",!0),i.left+=pe.css(e[0],"borderLeftWidth",!0)),{top:t.top-i.top-pe.css(n,"marginTop",!0),left:t.left-i.left-pe.css(n,"marginLeft",!0)}}},offsetParent:function(){
return this.map(function(){for(var e=this.offsetParent;e&&!pe.nodeName(e,"html")&&"static"===pe.css(e,"position");)e=e.offsetParent;return e||pt})}}),pe.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,t){var i=/Y/.test(t);pe.fn[e]=function(n){return Fe(this,function(e,n,s){var a=te(e);return void 0===s?a?t in a?a[t]:a.document.documentElement[n]:e[n]:void(a?a.scrollTo(i?pe(a).scrollLeft():s,i?s:pe(a).scrollTop()):e[n]=s)},e,n,arguments.length,null)}}),pe.each(["top","left"],function(e,t){pe.cssHooks[t]=E(ce.pixelPosition,function(e,i){if(i)return i=mt(e,t),ct.test(i)?pe(e).position()[t]+"px":i})}),pe.each({Height:"height",Width:"width"},function(e,t){pe.each({padding:"inner"+e,content:t,"":"outer"+e},function(i,n){pe.fn[n]=function(n,s){var a=arguments.length&&(i||"boolean"!=typeof n),o=i||(n===!0||s===!0?"margin":"border");return Fe(this,function(t,i,n){var s;return pe.isWindow(t)?t.document.documentElement["client"+e]:9===t.nodeType?(s=t.documentElement,Math.max(t.body["scroll"+e],s["scroll"+e],t.body["offset"+e],s["offset"+e],s["client"+e])):void 0===n?pe.css(t,i,o):pe.style(t,i,n,o)},t,a?n:void 0,a,null)}})}),pe.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)}}),pe.fn.size=function(){return this.length},pe.fn.andSelf=pe.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return pe});var pi=e.jQuery,fi=e.$;return pe.noConflict=function(t){return e.$===pe&&(e.$=fi),t&&e.jQuery===pe&&(e.jQuery=pi),pe},t||(e.jQuery=e.$=pe),pe}),function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e(jQuery)}(function(e){function t(e){for(var t=e.css("visibility");"inherit"===t;)e=e.parent(),t=e.css("visibility");return"hidden"!==t}function i(e){for(var t,i;e.length&&e[0]!==document;){if(t=e.css("position"),("absolute"===t||"relative"===t||"fixed"===t)&&(i=parseInt(e.css("zIndex"),10),!isNaN(i)&&0!==i))return i;e=e.parent()}return 0}function n(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},e.extend(this._defaults,this.regional[""]),this.regional.en=e.extend(!0,{},this.regional[""]),this.regional["en-US"]=e.extend(!0,{},this.regional.en),this.dpDiv=s(e("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}function s(t){var i="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return t.on("mouseout",i,function(){e(this).removeClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&e(this).removeClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&e(this).removeClass("ui-datepicker-next-hover")}).on("mouseover",i,a)}function a(){e.datepicker._isDisabledDatepicker(g.inline?g.dpDiv.parent()[0]:g.input[0])||(e(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),e(this).addClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&e(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&e(this).addClass("ui-datepicker-next-hover"))}function o(t,i){e.extend(t,i);for(var n in i)null==i[n]&&(t[n]=i[n]);return t}function r(e){return function(){var t=this.element.val();e.apply(this,arguments),this._refresh(),t!==this.element.val()&&this._trigger("change")}}e.ui=e.ui||{},e.ui.version="1.12.0";var l=0,h=Array.prototype.slice;e.cleanData=function(t){return function(i){var n,s,a;for(a=0;null!=(s=i[a]);a++)try{n=e._data(s,"events"),n&&n.remove&&e(s).triggerHandler("remove")}catch(o){}t(i)}}(e.cleanData),e.widget=function(t,i,n){var s,a,o,r={},l=t.split(".")[0];t=t.split(".")[1];var h=l+"-"+t;return n||(n=i,i=e.Widget),e.isArray(n)&&(n=e.extend.apply(null,[{}].concat(n))),e.expr[":"][h.toLowerCase()]=function(t){return!!e.data(t,h)},e[l]=e[l]||{},s=e[l][t],a=e[l][t]=function(e,t){return this._createWidget?void(arguments.length&&this._createWidget(e,t)):new a(e,t)},e.extend(a,s,{version:n.version,_proto:e.extend({},n),_childConstructors:[]}),o=new i,o.options=e.widget.extend({},o.options),e.each(n,function(t,n){return e.isFunction(n)?void(r[t]=function(){function e(){return i.prototype[t].apply(this,arguments)}function s(e){return i.prototype[t].apply(this,e)}return function(){var t,i=this._super,a=this._superApply;return this._super=e,this._superApply=s,t=n.apply(this,arguments),this._super=i,this._superApply=a,t}}()):void(r[t]=n)}),a.prototype=e.widget.extend(o,{widgetEventPrefix:s?o.widgetEventPrefix||t:t},r,{constructor:a,namespace:l,widgetName:t,widgetFullName:h}),s?(e.each(s._childConstructors,function(t,i){var n=i.prototype;e.widget(n.namespace+"."+n.widgetName,a,i._proto)}),delete s._childConstructors):i._childConstructors.push(a),e.widget.bridge(t,a),a},e.widget.extend=function(t){for(var i,n,s=h.call(arguments,1),a=0,o=s.length;o>a;a++)for(i in s[a])n=s[a][i],s[a].hasOwnProperty(i)&&void 0!==n&&(t[i]=e.isPlainObject(n)?e.isPlainObject(t[i])?e.widget.extend({},t[i],n):e.widget.extend({},n):n);return t},e.widget.bridge=function(t,i){var n=i.prototype.widgetFullName||t;e.fn[t]=function(s){var a="string"==typeof s,o=h.call(arguments,1),r=this;return a?this.each(function(){var i,a=e.data(this,n);return"instance"===s?(r=a,!1):a?e.isFunction(a[s])&&"_"!==s.charAt(0)?(i=a[s].apply(a,o),i!==a&&void 0!==i?(r=i&&i.jquery?r.pushStack(i.get()):i,!1):void 0):e.error("no such method '"+s+"' for "+t+" widget instance"):e.error("cannot call methods on "+t+" prior to initialization; attempted to call method '"+s+"'")}):(o.length&&(s=e.widget.extend.apply(null,[s].concat(o))),this.each(function(){var t=e.data(this,n);t?(t.option(s||{}),t._init&&t._init()):e.data(this,n,new i(s,this))})),r}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{classes:{},disabled:!1,create:null},_createWidget:function(t,i){i=e(i||this.defaultElement||this)[0],this.element=e(i),this.uuid=l++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=e(),this.hoverable=e(),this.focusable=e(),this.classesElementLookup={},i!==this&&(e.data(i,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===i&&this.destroy()}}),this.document=e(i.style?i.ownerDocument:i.document||i),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:function(){return{}},_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){var t=this;this._destroy(),e.each(this.classesElementLookup,function(e,i){t._removeClass(i,e)}),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),this.bindings.off(this.eventNamespace)},_destroy:e.noop,widget:function(){return this.element},option:function(t,i){var n,s,a,o=t;if(0===arguments.length)return e.widget.extend({},this.options);if("string"==typeof t)if(o={},n=t.split("."),t=n.shift(),n.length){for(s=o[t]=e.widget.extend({},this.options[t]),a=0;n.length-1>a;a++)s[n[a]]=s[n[a]]||{},s=s[n[a]];if(t=n.pop(),1===arguments.length)return void 0===s[t]?null:s[t];s[t]=i}else{if(1===arguments.length)return void 0===this.options[t]?null:this.options[t];o[t]=i}return this._setOptions(o),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return"classes"===e&&this._setOptionClasses(t),this.options[e]=t,"disabled"===e&&this._setOptionDisabled(t),this},_setOptionClasses:function(t){var i,n,s;for(i in t)s=this.classesElementLookup[i],t[i]!==this.options.classes[i]&&s&&s.length&&(n=e(s.get()),this._removeClass(s,i),n.addClass(this._classes({element:n,keys:i,classes:t,add:!0})))},_setOptionDisabled:function(e){this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!!e),e&&(this._removeClass(this.hoverable,null,"ui-state-hover"),this._removeClass(this.focusable,null,"ui-state-focus"))},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_classes:function(t){function i(i,a){var o,r;for(r=0;i.length>r;r++)o=s.classesElementLookup[i[r]]||e(),o=e(t.add?e.unique(o.get().concat(t.element.get())):o.not(t.element).get()),s.classesElementLookup[i[r]]=o,n.push(i[r]),a&&t.classes[i[r]]&&n.push(t.classes[i[r]])}var n=[],s=this;return t=e.extend({element:this.element,classes:this.options.classes||{}},t),t.keys&&i(t.keys.match(/\S+/g)||[],!0),t.extra&&i(t.extra.match(/\S+/g)||[]),n.join(" ")},_removeClass:function(e,t,i){return this._toggleClass(e,t,i,!1)},_addClass:function(e,t,i){return this._toggleClass(e,t,i,!0)},_toggleClass:function(e,t,i,n){n="boolean"==typeof n?n:i;var s="string"==typeof e||null===e,a={extra:s?t:i,keys:s?e:t,element:s?this.element:e,add:n};return a.element.toggleClass(this._classes(a),n),this},_on:function(t,i,n){var s,a=this;"boolean"!=typeof t&&(n=i,i=t,t=!1),n?(i=s=e(i),this.bindings=this.bindings.add(i)):(n=i,i=this.element,s=this.widget()),e.each(n,function(n,o){function r(){return t||a.options.disabled!==!0&&!e(this).hasClass("ui-state-disabled")?("string"==typeof o?a[o]:o).apply(a,arguments):void 0}"string"!=typeof o&&(r.guid=o.guid=o.guid||r.guid||e.guid++);var l=n.match(/^([\w:-]*)\s*(.*)$/),h=l[1]+a.eventNamespace,u=l[2];u?s.on(h,u,r):i.on(h,r)})},_off:function(t,i){i=(i||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,t.off(i).off(i),this.bindings=e(this.bindings.not(t).get()),this.focusable=e(this.focusable.not(t).get()),this.hoverable=e(this.hoverable.not(t).get())},_delay:function(e,t){function i(){return("string"==typeof e?n[e]:e).apply(n,arguments)}var n=this;return setTimeout(i,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){this._addClass(e(t.currentTarget),null,"ui-state-hover")},mouseleave:function(t){this._removeClass(e(t.currentTarget),null,"ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){this._addClass(e(t.currentTarget),null,"ui-state-focus")},focusout:function(t){this._removeClass(e(t.currentTarget),null,"ui-state-focus")}})},_trigger:function(t,i,n){var s,a,o=this.options[t];if(n=n||{},i=e.Event(i),i.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),i.target=this.element[0],a=i.originalEvent)for(s in a)s in i||(i[s]=a[s]);return this.element.trigger(i,n),!(e.isFunction(o)&&o.apply(this.element[0],[i].concat(n))===!1||i.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,i){e.Widget.prototype["_"+t]=function(n,s,a){"string"==typeof s&&(s={effect:s});var o,r=s?s===!0||"number"==typeof s?i:s.effect||i:t;s=s||{},"number"==typeof s&&(s={duration:s}),o=!e.isEmptyObject(s),s.complete=a,s.delay&&n.delay(s.delay),o&&e.effects&&e.effects.effect[r]?n[t](s):r!==t&&n[r]?n[r](s.duration,s.easing,a):n.queue(function(i){e(this)[t](),a&&a.call(n[0]),i()})}}),e.widget,function(){function t(e,t,i){return[parseFloat(e[0])*(p.test(e[0])?t/100:1),parseFloat(e[1])*(p.test(e[1])?i/100:1)]}function i(t,i){return parseInt(e.css(t,i),10)||0}function n(t){var i=t[0];return 9===i.nodeType?{width:t.width(),height:t.height(),offset:{top:0,left:0}}:e.isWindow(i)?{width:t.width(),height:t.height(),offset:{top:t.scrollTop(),left:t.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:t.outerWidth(),height:t.outerHeight(),offset:t.offset()}}var s,a,o=Math.max,r=Math.abs,l=Math.round,h=/left|center|right/,u=/top|center|bottom/,c=/[\+\-]\d+(\.[\d]+)?%?/,d=/^\w+/,p=/%$/,f=e.fn.position;a=function(){var t=e("<div>").css("position","absolute").appendTo("body").offset({top:1.5,left:1.5}),i=1.5===t.offset().top;return t.remove(),a=function(){return i},i},e.position={scrollbarWidth:function(){if(void 0!==s)return s;var t,i,n=e("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),a=n.children()[0];return e("body").append(n),t=a.offsetWidth,n.css("overflow","scroll"),i=a.offsetWidth,t===i&&(i=n[0].clientWidth),n.remove(),s=t-i},getScrollInfo:function(t){var i=t.isWindow||t.isDocument?"":t.element.css("overflow-x"),n=t.isWindow||t.isDocument?"":t.element.css("overflow-y"),s="scroll"===i||"auto"===i&&t.width<t.element[0].scrollWidth,a="scroll"===n||"auto"===n&&t.height<t.element[0].scrollHeight;return{width:a?e.position.scrollbarWidth():0,height:s?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var i=e(t||window),n=e.isWindow(i[0]),s=!!i[0]&&9===i[0].nodeType,a=!n&&!s;return{element:i,isWindow:n,isDocument:s,offset:a?e(t).offset():{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:i.outerWidth(),height:i.outerHeight()}}},e.fn.position=function(s){if(!s||!s.of)return f.apply(this,arguments);s=e.extend({},s);var p,m,g,v,b,y,_=e(s.of),w=e.position.getWithinInfo(s.within),x=e.position.getScrollInfo(w),C=(s.collision||"flip").split(" "),k={};return y=n(_),_[0].preventDefault&&(s.at="left top"),m=y.width,g=y.height,v=y.offset,b=e.extend({},v),e.each(["my","at"],function(){var e,t,i=(s[this]||"").split(" ");1===i.length&&(i=h.test(i[0])?i.concat(["center"]):u.test(i[0])?["center"].concat(i):["center","center"]),i[0]=h.test(i[0])?i[0]:"center",i[1]=u.test(i[1])?i[1]:"center",e=c.exec(i[0]),t=c.exec(i[1]),k[this]=[e?e[0]:0,t?t[0]:0],s[this]=[d.exec(i[0])[0],d.exec(i[1])[0]]}),1===C.length&&(C[1]=C[0]),"right"===s.at[0]?b.left+=m:"center"===s.at[0]&&(b.left+=m/2),"bottom"===s.at[1]?b.top+=g:"center"===s.at[1]&&(b.top+=g/2),p=t(k.at,m,g),b.left+=p[0],b.top+=p[1],this.each(function(){var n,h,u=e(this),c=u.outerWidth(),d=u.outerHeight(),f=i(this,"marginLeft"),y=i(this,"marginTop"),T=c+f+i(this,"marginRight")+x.width,D=d+y+i(this,"marginBottom")+x.height,S=e.extend({},b),P=t(k.my,u.outerWidth(),u.outerHeight());"right"===s.my[0]?S.left-=c:"center"===s.my[0]&&(S.left-=c/2),"bottom"===s.my[1]?S.top-=d:"center"===s.my[1]&&(S.top-=d/2),S.left+=P[0],S.top+=P[1],a()||(S.left=l(S.left),S.top=l(S.top)),n={marginLeft:f,marginTop:y},e.each(["left","top"],function(t,i){e.ui.position[C[t]]&&e.ui.position[C[t]][i](S,{targetWidth:m,targetHeight:g,elemWidth:c,elemHeight:d,collisionPosition:n,collisionWidth:T,collisionHeight:D,offset:[p[0]+P[0],p[1]+P[1]],my:s.my,at:s.at,within:w,elem:u})}),s.using&&(h=function(e){var t=v.left-S.left,i=t+m-c,n=v.top-S.top,a=n+g-d,l={target:{element:_,left:v.left,top:v.top,width:m,height:g},element:{element:u,left:S.left,top:S.top,width:c,height:d},horizontal:0>i?"left":t>0?"right":"center",vertical:0>a?"top":n>0?"bottom":"middle"};c>m&&m>r(t+i)&&(l.horizontal="center"),d>g&&g>r(n+a)&&(l.vertical="middle"),l.important=o(r(t),r(i))>o(r(n),r(a))?"horizontal":"vertical",s.using.call(this,e,l)}),u.offset(e.extend(S,{using:h}))})},e.ui.position={fit:{left:function(e,t){var i,n=t.within,s=n.isWindow?n.scrollLeft:n.offset.left,a=n.width,r=e.left-t.collisionPosition.marginLeft,l=s-r,h=r+t.collisionWidth-a-s;t.collisionWidth>a?l>0&&0>=h?(i=e.left+l+t.collisionWidth-a-s,e.left+=l-i):e.left=h>0&&0>=l?s:l>h?s+a-t.collisionWidth:s:l>0?e.left+=l:h>0?e.left-=h:e.left=o(e.left-r,e.left)},top:function(e,t){var i,n=t.within,s=n.isWindow?n.scrollTop:n.offset.top,a=t.within.height,r=e.top-t.collisionPosition.marginTop,l=s-r,h=r+t.collisionHeight-a-s;t.collisionHeight>a?l>0&&0>=h?(i=e.top+l+t.collisionHeight-a-s,e.top+=l-i):e.top=h>0&&0>=l?s:l>h?s+a-t.collisionHeight:s:l>0?e.top+=l:h>0?e.top-=h:e.top=o(e.top-r,e.top)}},flip:{left:function(e,t){var i,n,s=t.within,a=s.offset.left+s.scrollLeft,o=s.width,l=s.isWindow?s.scrollLeft:s.offset.left,h=e.left-t.collisionPosition.marginLeft,u=h-l,c=h+t.collisionWidth-o-l,d="left"===t.my[0]?-t.elemWidth:"right"===t.my[0]?t.elemWidth:0,p="left"===t.at[0]?t.targetWidth:"right"===t.at[0]?-t.targetWidth:0,f=-2*t.offset[0];0>u?(i=e.left+d+p+f+t.collisionWidth-o-a,(0>i||r(u)>i)&&(e.left+=d+p+f)):c>0&&(n=e.left-t.collisionPosition.marginLeft+d+p+f-l,(n>0||c>r(n))&&(e.left+=d+p+f))},top:function(e,t){var i,n,s=t.within,a=s.offset.top+s.scrollTop,o=s.height,l=s.isWindow?s.scrollTop:s.offset.top,h=e.top-t.collisionPosition.marginTop,u=h-l,c=h+t.collisionHeight-o-l,d="top"===t.my[1],p=d?-t.elemHeight:"bottom"===t.my[1]?t.elemHeight:0,f="top"===t.at[1]?t.targetHeight:"bottom"===t.at[1]?-t.targetHeight:0,m=-2*t.offset[1];0>u?(n=e.top+p+f+m+t.collisionHeight-o-a,(0>n||r(u)>n)&&(e.top+=p+f+m)):c>0&&(i=e.top-t.collisionPosition.marginTop+p+f+m-l,(i>0||c>r(i))&&(e.top+=p+f+m))}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments),e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments),e.ui.position.fit.top.apply(this,arguments)}}}}(),e.ui.position,e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(i){return!!e.data(i,t)}}):function(t,i,n){return!!e.data(t,n[3])}}),e.fn.extend({disableSelection:function(){var e="onselectstart"in document.createElement("div")?"selectstart":"mousedown";return function(){return this.on(e+".ui-disableSelection",function(e){e.preventDefault()})}}(),enableSelection:function(){return this.off(".ui-disableSelection")}});var u="ui-effects-",c="ui-effects-style",d="ui-effects-animated",p=e;e.effects={effect:{}},function(e,t){function i(e,t,i){var n=c[t.type]||{};return null==e?i||!t.def?null:t.def:(e=n.floor?~~e:parseFloat(e),isNaN(e)?t.def:n.mod?(e+n.mod)%n.mod:0>e?0:e>n.max?n.max:e)}function n(i){var n=h(),s=n._rgba=[];return i=i.toLowerCase(),f(l,function(e,a){var o,r=a.re.exec(i),l=r&&a.parse(r),h=a.space||"rgba";return l?(o=n[h](l),n[u[h].cache]=o[u[h].cache],s=n._rgba=o._rgba,!1):t}),s.length?("0,0,0,0"===s.join()&&e.extend(s,a.transparent),n):a[i]}function s(e,t,i){return i=(i+1)%1,1>6*i?e+6*(t-e)*i:1>2*i?t:2>3*i?e+6*(t-e)*(2/3-i):e}var a,o="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",r=/^([\-+])=\s*(\d+\.?\d*)/,l=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(e){return[e[1],e[2],e[3],e[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(e){return[2.55*e[1],2.55*e[2],2.55*e[3],e[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(e){return[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(e){return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(e){return[e[1],e[2]/100,e[3]/100,e[4]]}}],h=e.Color=function(t,i,n,s){return new e.Color.fn.parse(t,i,n,s)},u={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},c={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},d=h.support={},p=e("<p>")[0],f=e.each;p.style.cssText="background-color:rgba(1,1,1,.5)",d.rgba=p.style.backgroundColor.indexOf("rgba")>-1,f(u,function(e,t){t.cache="_"+e,t.props.alpha={idx:3,type:"percent",def:1}}),h.fn=e.extend(h.prototype,{parse:function(s,o,r,l){if(s===t)return this._rgba=[null,null,null,null],this;(s.jquery||s.nodeType)&&(s=e(s).css(o),o=t);var c=this,d=e.type(s),p=this._rgba=[];return o!==t&&(s=[s,o,r,l],d="array"),"string"===d?this.parse(n(s)||a._default):"array"===d?(f(u.rgba.props,function(e,t){p[t.idx]=i(s[t.idx],t)}),this):"object"===d?(s instanceof h?f(u,function(e,t){s[t.cache]&&(c[t.cache]=s[t.cache].slice())}):f(u,function(t,n){var a=n.cache;f(n.props,function(e,t){if(!c[a]&&n.to){if("alpha"===e||null==s[e])return;c[a]=n.to(c._rgba)}c[a][t.idx]=i(s[e],t,!0)}),c[a]&&0>e.inArray(null,c[a].slice(0,3))&&(c[a][3]=1,n.from&&(c._rgba=n.from(c[a])))}),this):t},is:function(e){var i=h(e),n=!0,s=this;return f(u,function(e,a){var o,r=i[a.cache];return r&&(o=s[a.cache]||a.to&&a.to(s._rgba)||[],f(a.props,function(e,i){return null!=r[i.idx]?n=r[i.idx]===o[i.idx]:t})),n}),n},_space:function(){var e=[],t=this;return f(u,function(i,n){t[n.cache]&&e.push(i)}),e.pop()},transition:function(e,t){var n=h(e),s=n._space(),a=u[s],o=0===this.alpha()?h("transparent"):this,r=o[a.cache]||a.to(o._rgba),l=r.slice();return n=n[a.cache],f(a.props,function(e,s){var a=s.idx,o=r[a],h=n[a],u=c[s.type]||{};null!==h&&(null===o?l[a]=h:(u.mod&&(h-o>u.mod/2?o+=u.mod:o-h>u.mod/2&&(o-=u.mod)),l[a]=i((h-o)*t+o,s)))}),this[s](l)},blend:function(t){if(1===this._rgba[3])return this;var i=this._rgba.slice(),n=i.pop(),s=h(t)._rgba;return h(e.map(i,function(e,t){return(1-n)*s[t]+n*e}))},toRgbaString:function(){var t="rgba(",i=e.map(this._rgba,function(e,t){return null==e?t>2?1:0:e});return 1===i[3]&&(i.pop(),t="rgb("),t+i.join()+")"},toHslaString:function(){var t="hsla(",i=e.map(this.hsla(),function(e,t){return null==e&&(e=t>2?1:0),t&&3>t&&(e=Math.round(100*e)+"%"),e});return 1===i[3]&&(i.pop(),t="hsl("),t+i.join()+")"},toHexString:function(t){var i=this._rgba.slice(),n=i.pop();return t&&i.push(~~(255*n)),"#"+e.map(i,function(e){return e=(e||0).toString(16),1===e.length?"0"+e:e}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),h.fn.parse.prototype=h.fn,u.hsla.to=function(e){if(null==e[0]||null==e[1]||null==e[2])return[null,null,null,e[3]];var t,i,n=e[0]/255,s=e[1]/255,a=e[2]/255,o=e[3],r=Math.max(n,s,a),l=Math.min(n,s,a),h=r-l,u=r+l,c=.5*u;return t=l===r?0:n===r?60*(s-a)/h+360:s===r?60*(a-n)/h+120:60*(n-s)/h+240,i=0===h?0:.5>=c?h/u:h/(2-u),[Math.round(t)%360,i,c,null==o?1:o]},u.hsla.from=function(e){if(null==e[0]||null==e[1]||null==e[2])return[null,null,null,e[3]];var t=e[0]/360,i=e[1],n=e[2],a=e[3],o=.5>=n?n*(1+i):n+i-n*i,r=2*n-o;return[Math.round(255*s(r,o,t+1/3)),Math.round(255*s(r,o,t)),Math.round(255*s(r,o,t-1/3)),a]},f(u,function(n,s){var a=s.props,o=s.cache,l=s.to,u=s.from;h.fn[n]=function(n){if(l&&!this[o]&&(this[o]=l(this._rgba)),n===t)return this[o].slice();var s,r=e.type(n),c="array"===r||"object"===r?n:arguments,d=this[o].slice();return f(a,function(e,t){var n=c["object"===r?e:t.idx];null==n&&(n=d[t.idx]),d[t.idx]=i(n,t)}),u?(s=h(u(d)),s[o]=d,s):h(d)},f(a,function(t,i){h.fn[t]||(h.fn[t]=function(s){var a,o=e.type(s),l="alpha"===t?this._hsla?"hsla":"rgba":n,h=this[l](),u=h[i.idx];return"undefined"===o?u:("function"===o&&(s=s.call(this,u),o=e.type(s)),null==s&&i.empty?this:("string"===o&&(a=r.exec(s),a&&(s=u+parseFloat(a[2])*("+"===a[1]?1:-1))),h[i.idx]=s,this[l](h)))})})}),h.hook=function(t){var i=t.split(" ");f(i,function(t,i){e.cssHooks[i]={set:function(t,s){var a,o,r="";if("transparent"!==s&&("string"!==e.type(s)||(a=n(s)))){if(s=h(a||s),!d.rgba&&1!==s._rgba[3]){for(o="backgroundColor"===i?t.parentNode:t;(""===r||"transparent"===r)&&o&&o.style;)try{r=e.css(o,"backgroundColor"),o=o.parentNode}catch(l){}s=s.blend(r&&"transparent"!==r?r:"_default")}s=s.toRgbaString()}try{t.style[i]=s}catch(l){}}},e.fx.step[i]=function(t){t.colorInit||(t.start=h(t.elem,i),t.end=h(t.end),t.colorInit=!0),e.cssHooks[i].set(t.elem,t.start.transition(t.end,t.pos))}})},h.hook(o),e.cssHooks.borderColor={expand:function(e){var t={};return f(["Top","Right","Bottom","Left"],function(i,n){t["border"+n+"Color"]=e}),t}},a=e.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(p),function(){function t(t){var i,n,s=t.ownerDocument.defaultView?t.ownerDocument.defaultView.getComputedStyle(t,null):t.currentStyle,a={};if(s&&s.length&&s[0]&&s[s[0]])for(n=s.length;n--;)i=s[n],"string"==typeof s[i]&&(a[e.camelCase(i)]=s[i]);else for(i in s)"string"==typeof s[i]&&(a[i]=s[i]);return a}function i(t,i){var n,a,o={};for(n in i)a=i[n],t[n]!==a&&(s[n]||(e.fx.step[n]||!isNaN(parseFloat(a)))&&(o[n]=a));return o}var n=["add","remove","toggle"],s={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};e.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(t,i){e.fx.step[i]=function(e){("none"!==e.end&&!e.setAttr||1===e.pos&&!e.setAttr)&&(p.style(e.elem,i,e.end),e.setAttr=!0)}}),e.fn.addBack||(e.fn.addBack=function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}),e.effects.animateClass=function(s,a,o,r){var l=e.speed(a,o,r);return this.queue(function(){var a,o=e(this),r=o.attr("class")||"",h=l.children?o.find("*").addBack():o;h=h.map(function(){var i=e(this);return{el:i,start:t(this)}}),a=function(){e.each(n,function(e,t){s[t]&&o[t+"Class"](s[t])})},a(),h=h.map(function(){return this.end=t(this.el[0]),this.diff=i(this.start,this.end),this}),o.attr("class",r),h=h.map(function(){var t=this,i=e.Deferred(),n=e.extend({},l,{queue:!1,complete:function(){i.resolve(t)}});return this.el.animate(this.diff,n),i.promise()}),e.when.apply(e,h.get()).done(function(){a(),e.each(arguments,function(){var t=this.el;e.each(this.diff,function(e){t.css(e,"")})}),l.complete.call(o[0])})})},e.fn.extend({addClass:function(t){return function(i,n,s,a){return n?e.effects.animateClass.call(this,{add:i},n,s,a):t.apply(this,arguments)}}(e.fn.addClass),removeClass:function(t){return function(i,n,s,a){return arguments.length>1?e.effects.animateClass.call(this,{remove:i},n,s,a):t.apply(this,arguments)}}(e.fn.removeClass),toggleClass:function(t){return function(i,n,s,a,o){return"boolean"==typeof n||void 0===n?s?e.effects.animateClass.call(this,n?{add:i}:{remove:i},s,a,o):t.apply(this,arguments):e.effects.animateClass.call(this,{toggle:i},n,s,a)}}(e.fn.toggleClass),switchClass:function(t,i,n,s,a){return e.effects.animateClass.call(this,{add:i,remove:t},n,s,a)}})}(),function(){function t(t,i,n,s){return e.isPlainObject(t)&&(i=t,t=t.effect),t={effect:t},null==i&&(i={}),e.isFunction(i)&&(s=i,n=null,i={}),("number"==typeof i||e.fx.speeds[i])&&(s=n,n=i,i={}),e.isFunction(n)&&(s=n,n=null),i&&e.extend(t,i),n=n||i.duration,t.duration=e.fx.off?0:"number"==typeof n?n:n in e.fx.speeds?e.fx.speeds[n]:e.fx.speeds._default,t.complete=s||i.complete,t}function i(t){return!(t&&"number"!=typeof t&&!e.fx.speeds[t])||("string"==typeof t&&!e.effects.effect[t]||(!!e.isFunction(t)||"object"==typeof t&&!t.effect))}function n(e,t){var i=t.outerWidth(),n=t.outerHeight(),s=/^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/,a=s.exec(e)||["",0,i,n,0];return{top:parseFloat(a[1])||0,right:"auto"===a[2]?i:parseFloat(a[2]),bottom:"auto"===a[3]?n:parseFloat(a[3]),left:parseFloat(a[4])||0}}e.expr&&e.expr.filters&&e.expr.filters.animated&&(e.expr.filters.animated=function(t){return function(i){return!!e(i).data(d)||t(i)}}(e.expr.filters.animated)),e.uiBackCompat!==!1&&e.extend(e.effects,{save:function(e,t){for(var i=0,n=t.length;n>i;i++)null!==t[i]&&e.data(u+t[i],e[0].style[t[i]])},restore:function(e,t){for(var i,n=0,s=t.length;s>n;n++)null!==t[n]&&(i=e.data(u+t[n]),e.css(t[n],i))},setMode:function(e,t){return"toggle"===t&&(t=e.is(":hidden")?"show":"hide"),t},createWrapper:function(t){if(t.parent().is(".ui-effects-wrapper"))return t.parent();var i={width:t.outerWidth(!0),height:t.outerHeight(!0),"float":t.css("float")},n=e("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),s={width:t.width(),height:t.height()},a=document.activeElement;try{a.id}catch(o){a=document.body}return t.wrap(n),(t[0]===a||e.contains(t[0],a))&&e(a).trigger("focus"),n=t.parent(),"static"===t.css("position")?(n.css({position:"relative"}),t.css({position:"relative"})):(e.extend(i,{position:t.css("position"),zIndex:t.css("z-index")}),e.each(["top","left","bottom","right"],function(e,n){i[n]=t.css(n),isNaN(parseInt(i[n],10))&&(i[n]="auto")}),t.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),t.css(s),n.css(i).show()},removeWrapper:function(t){var i=document.activeElement;return t.parent().is(".ui-effects-wrapper")&&(t.parent().replaceWith(t),(t[0]===i||e.contains(t[0],i))&&e(i).trigger("focus")),t}}),e.extend(e.effects,{version:"1.12.0",define:function(t,i,n){return n||(n=i,i="effect"),e.effects.effect[t]=n,e.effects.effect[t].mode=i,n},scaledDimensions:function(e,t,i){if(0===t)return{height:0,width:0,outerHeight:0,outerWidth:0};var n="horizontal"!==i?(t||100)/100:1,s="vertical"!==i?(t||100)/100:1;return{height:e.height()*s,width:e.width()*n,outerHeight:e.outerHeight()*s,outerWidth:e.outerWidth()*n}},clipToBox:function(e){return{width:e.clip.right-e.clip.left,height:e.clip.bottom-e.clip.top,left:e.clip.left,top:e.clip.top}},unshift:function(e,t,i){var n=e.queue();t>1&&n.splice.apply(n,[1,0].concat(n.splice(t,i))),e.dequeue()},saveStyle:function(e){e.data(c,e[0].style.cssText)},restoreStyle:function(e){e[0].style.cssText=e.data(c)||"",e.removeData(c)},mode:function(e,t){var i=e.is(":hidden");return"toggle"===t&&(t=i?"show":"hide"),(i?"hide"===t:"show"===t)&&(t="none"),t},getBaseline:function(e,t){var i,n;switch(e[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=e[0]/t.height}switch(e[1]){case"left":n=0;break;case"center":n=.5;break;case"right":n=1;break;default:n=e[1]/t.width}return{x:n,y:i}},createPlaceholder:function(t){var i,n=t.css("position"),s=t.position();return t.css({marginTop:t.css("marginTop"),marginBottom:t.css("marginBottom"),marginLeft:t.css("marginLeft"),marginRight:t.css("marginRight")}).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()),/^(static|relative)/.test(n)&&(n="absolute",i=e("<"+t[0].nodeName+">").insertAfter(t).css({display:/^(inline|ruby)/.test(t.css("display"))?"inline-block":"block",
visibility:"hidden",marginTop:t.css("marginTop"),marginBottom:t.css("marginBottom"),marginLeft:t.css("marginLeft"),marginRight:t.css("marginRight"),"float":t.css("float")}).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()).addClass("ui-effects-placeholder"),t.data(u+"placeholder",i)),t.css({position:n,left:s.left,top:s.top}),i},removePlaceholder:function(e){var t=u+"placeholder",i=e.data(t);i&&(i.remove(),e.removeData(t))},cleanUp:function(t){e.effects.restoreStyle(t),e.effects.removePlaceholder(t)},setTransition:function(t,i,n,s){return s=s||{},e.each(i,function(e,i){var a=t.cssUnit(i);a[0]>0&&(s[i]=a[0]*n+a[1])}),s}}),e.fn.extend({effect:function(){function i(t){function i(){r.removeData(d),e.effects.cleanUp(r),"hide"===n.mode&&r.hide(),o()}function o(){e.isFunction(l)&&l.call(r[0]),e.isFunction(t)&&t()}var r=e(this);n.mode=u.shift(),e.uiBackCompat===!1||a?"none"===n.mode?(r[h](),o()):s.call(r[0],n,i):(r.is(":hidden")?"hide"===h:"show"===h)?(r[h](),o()):s.call(r[0],n,o)}var n=t.apply(this,arguments),s=e.effects.effect[n.effect],a=s.mode,o=n.queue,r=o||"fx",l=n.complete,h=n.mode,u=[],c=function(t){var i=e(this),n=e.effects.mode(i,h)||a;i.data(d,!0),u.push(n),a&&("show"===n||n===a&&"hide"===n)&&i.show(),a&&"none"===n||e.effects.saveStyle(i),e.isFunction(t)&&t()};return e.fx.off||!s?h?this[h](n.duration,l):this.each(function(){l&&l.call(this)}):o===!1?this.each(c).each(i):this.queue(r,c).queue(r,i)},show:function(e){return function(n){if(i(n))return e.apply(this,arguments);var s=t.apply(this,arguments);return s.mode="show",this.effect.call(this,s)}}(e.fn.show),hide:function(e){return function(n){if(i(n))return e.apply(this,arguments);var s=t.apply(this,arguments);return s.mode="hide",this.effect.call(this,s)}}(e.fn.hide),toggle:function(e){return function(n){if(i(n)||"boolean"==typeof n)return e.apply(this,arguments);var s=t.apply(this,arguments);return s.mode="toggle",this.effect.call(this,s)}}(e.fn.toggle),cssUnit:function(t){var i=this.css(t),n=[];return e.each(["em","px","%","pt"],function(e,t){i.indexOf(t)>0&&(n=[parseFloat(i),t])}),n},cssClip:function(e){return e?this.css("clip","rect("+e.top+"px "+e.right+"px "+e.bottom+"px "+e.left+"px)"):n(this.css("clip"),this)},transfer:function(t,i){var n=e(this),s=e(t.to),a="fixed"===s.css("position"),o=e("body"),r=a?o.scrollTop():0,l=a?o.scrollLeft():0,h=s.offset(),u={top:h.top-r,left:h.left-l,height:s.innerHeight(),width:s.innerWidth()},c=n.offset(),d=e("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(t.className).css({top:c.top-r,left:c.left-l,height:n.innerHeight(),width:n.innerWidth(),position:a?"fixed":"absolute"}).animate(u,t.duration,t.easing,function(){d.remove(),e.isFunction(i)&&i()})}}),e.fx.step.clip=function(t){t.clipInit||(t.start=e(t.elem).cssClip(),"string"==typeof t.end&&(t.end=n(t.end,t.elem)),t.clipInit=!0),e(t.elem).cssClip({top:t.pos*(t.end.top-t.start.top)+t.start.top,right:t.pos*(t.end.right-t.start.right)+t.start.right,bottom:t.pos*(t.end.bottom-t.start.bottom)+t.start.bottom,left:t.pos*(t.end.left-t.start.left)+t.start.left})}}(),function(){var t={};e.each(["Quad","Cubic","Quart","Quint","Expo"],function(e,i){t[i]=function(t){return Math.pow(t,e+2)}}),e.extend(t,{Sine:function(e){return 1-Math.cos(e*Math.PI/2)},Circ:function(e){return 1-Math.sqrt(1-e*e)},Elastic:function(e){return 0===e||1===e?e:-Math.pow(2,8*(e-1))*Math.sin((80*(e-1)-7.5)*Math.PI/15)},Back:function(e){return e*e*(3*e-2)},Bounce:function(e){for(var t,i=4;((t=Math.pow(2,--i))-1)/11>e;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*t-2)/22-e,2)}}),e.each(t,function(t,i){e.easing["easeIn"+t]=i,e.easing["easeOut"+t]=function(e){return 1-i(1-e)},e.easing["easeInOut"+t]=function(e){return.5>e?i(2*e)/2:1-i(-2*e+2)/2}})}();var f=e.effects;e.effects.define("blind","hide",function(t,i){var n={up:["bottom","top"],vertical:["bottom","top"],down:["top","bottom"],left:["right","left"],horizontal:["right","left"],right:["left","right"]},s=e(this),a=t.direction||"up",o=s.cssClip(),r={clip:e.extend({},o)},l=e.effects.createPlaceholder(s);r.clip[n[a][0]]=r.clip[n[a][1]],"show"===t.mode&&(s.cssClip(r.clip),l&&l.css(e.effects.clipToBox(r)),r.clip=o),l&&l.animate(e.effects.clipToBox(r),t.duration,t.easing),s.animate(r,{queue:!1,duration:t.duration,easing:t.easing,complete:i})}),e.effects.define("bounce",function(t,i){var n,s,a,o=e(this),r=t.mode,l="hide"===r,h="show"===r,u=t.direction||"up",c=t.distance,d=t.times||5,p=2*d+(h||l?1:0),f=t.duration/p,m=t.easing,g="up"===u||"down"===u?"top":"left",v="up"===u||"left"===u,b=0,y=o.queue().length;for(e.effects.createPlaceholder(o),a=o.css(g),c||(c=o["top"===g?"outerHeight":"outerWidth"]()/3),h&&(s={opacity:1},s[g]=a,o.css("opacity",0).css(g,v?2*-c:2*c).animate(s,f,m)),l&&(c/=Math.pow(2,d-1)),s={},s[g]=a;d>b;b++)n={},n[g]=(v?"-=":"+=")+c,o.animate(n,f,m).animate(s,f,m),c=l?2*c:c/2;l&&(n={opacity:0},n[g]=(v?"-=":"+=")+c,o.animate(n,f,m)),o.queue(i),e.effects.unshift(o,y,p+1)}),e.effects.define("clip","hide",function(t,i){var n,s={},a=e(this),o=t.direction||"vertical",r="both"===o,l=r||"horizontal"===o,h=r||"vertical"===o;n=a.cssClip(),s.clip={top:h?(n.bottom-n.top)/2:n.top,right:l?(n.right-n.left)/2:n.right,bottom:h?(n.bottom-n.top)/2:n.bottom,left:l?(n.right-n.left)/2:n.left},e.effects.createPlaceholder(a),"show"===t.mode&&(a.cssClip(s.clip),s.clip=n),a.animate(s,{queue:!1,duration:t.duration,easing:t.easing,complete:i})}),e.effects.define("drop","hide",function(t,i){var n,s=e(this),a=t.mode,o="show"===a,r=t.direction||"left",l="up"===r||"down"===r?"top":"left",h="up"===r||"left"===r?"-=":"+=",u="+="===h?"-=":"+=",c={opacity:0};e.effects.createPlaceholder(s),n=t.distance||s["top"===l?"outerHeight":"outerWidth"](!0)/2,c[l]=h+n,o&&(s.css(c),c[l]=u+n,c.opacity=1),s.animate(c,{queue:!1,duration:t.duration,easing:t.easing,complete:i})}),e.effects.define("explode","hide",function(t,i){function n(){y.push(this),y.length===c*d&&s()}function s(){p.css({visibility:"visible"}),e(y).remove(),i()}var a,o,r,l,h,u,c=t.pieces?Math.round(Math.sqrt(t.pieces)):3,d=c,p=e(this),f=t.mode,m="show"===f,g=p.show().css("visibility","hidden").offset(),v=Math.ceil(p.outerWidth()/d),b=Math.ceil(p.outerHeight()/c),y=[];for(a=0;c>a;a++)for(l=g.top+a*b,u=a-(c-1)/2,o=0;d>o;o++)r=g.left+o*v,h=o-(d-1)/2,p.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-o*v,top:-a*b}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:v,height:b,left:r+(m?h*v:0),top:l+(m?u*b:0),opacity:m?0:1}).animate({left:r+(m?0:h*v),top:l+(m?0:u*b),opacity:m?1:0},t.duration||500,t.easing,n)}),e.effects.define("fade","toggle",function(t,i){var n="show"===t.mode;e(this).css("opacity",n?0:1).animate({opacity:n?1:0},{queue:!1,duration:t.duration,easing:t.easing,complete:i})}),e.effects.define("fold","hide",function(t,i){var n=e(this),s=t.mode,a="show"===s,o="hide"===s,r=t.size||15,l=/([0-9]+)%/.exec(r),h=!!t.horizFirst,u=h?["right","bottom"]:["bottom","right"],c=t.duration/2,d=e.effects.createPlaceholder(n),p=n.cssClip(),f={clip:e.extend({},p)},m={clip:e.extend({},p)},g=[p[u[0]],p[u[1]]],v=n.queue().length;l&&(r=parseInt(l[1],10)/100*g[o?0:1]),f.clip[u[0]]=r,m.clip[u[0]]=r,m.clip[u[1]]=0,a&&(n.cssClip(m.clip),d&&d.css(e.effects.clipToBox(m)),m.clip=p),n.queue(function(i){d&&d.animate(e.effects.clipToBox(f),c,t.easing).animate(e.effects.clipToBox(m),c,t.easing),i()}).animate(f,c,t.easing).animate(m,c,t.easing).queue(i),e.effects.unshift(n,v,4)}),e.effects.define("highlight","show",function(t,i){var n=e(this),s={backgroundColor:n.css("backgroundColor")};"hide"===t.mode&&(s.opacity=0),e.effects.saveStyle(n),n.css({backgroundImage:"none",backgroundColor:t.color||"#ffff99"}).animate(s,{queue:!1,duration:t.duration,easing:t.easing,complete:i})}),e.effects.define("size",function(t,i){var n,s,a,o=e(this),r=["fontSize"],l=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],h=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],u=t.mode,c="effect"!==u,d=t.scale||"both",p=t.origin||["middle","center"],f=o.css("position"),m=o.position(),g=e.effects.scaledDimensions(o),v=t.from||g,b=t.to||e.effects.scaledDimensions(o,0);e.effects.createPlaceholder(o),"show"===u&&(a=v,v=b,b=a),s={from:{y:v.height/g.height,x:v.width/g.width},to:{y:b.height/g.height,x:b.width/g.width}},("box"===d||"both"===d)&&(s.from.y!==s.to.y&&(v=e.effects.setTransition(o,l,s.from.y,v),b=e.effects.setTransition(o,l,s.to.y,b)),s.from.x!==s.to.x&&(v=e.effects.setTransition(o,h,s.from.x,v),b=e.effects.setTransition(o,h,s.to.x,b))),("content"===d||"both"===d)&&s.from.y!==s.to.y&&(v=e.effects.setTransition(o,r,s.from.y,v),b=e.effects.setTransition(o,r,s.to.y,b)),p&&(n=e.effects.getBaseline(p,g),v.top=(g.outerHeight-v.outerHeight)*n.y+m.top,v.left=(g.outerWidth-v.outerWidth)*n.x+m.left,b.top=(g.outerHeight-b.outerHeight)*n.y+m.top,b.left=(g.outerWidth-b.outerWidth)*n.x+m.left),o.css(v),("content"===d||"both"===d)&&(l=l.concat(["marginTop","marginBottom"]).concat(r),h=h.concat(["marginLeft","marginRight"]),o.find("*[width]").each(function(){var i=e(this),n=e.effects.scaledDimensions(i),a={height:n.height*s.from.y,width:n.width*s.from.x,outerHeight:n.outerHeight*s.from.y,outerWidth:n.outerWidth*s.from.x},o={height:n.height*s.to.y,width:n.width*s.to.x,outerHeight:n.height*s.to.y,outerWidth:n.width*s.to.x};s.from.y!==s.to.y&&(a=e.effects.setTransition(i,l,s.from.y,a),o=e.effects.setTransition(i,l,s.to.y,o)),s.from.x!==s.to.x&&(a=e.effects.setTransition(i,h,s.from.x,a),o=e.effects.setTransition(i,h,s.to.x,o)),c&&e.effects.saveStyle(i),i.css(a),i.animate(o,t.duration,t.easing,function(){c&&e.effects.restoreStyle(i)})})),o.animate(b,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){var t=o.offset();0===b.opacity&&o.css("opacity",v.opacity),c||(o.css("position","static"===f?"relative":f).offset(t),e.effects.saveStyle(o)),i()}})}),e.effects.define("scale",function(t,i){var n=e(this),s=t.mode,a=parseInt(t.percent,10)||(0===parseInt(t.percent,10)?0:"effect"!==s?0:100),o=e.extend(!0,{from:e.effects.scaledDimensions(n),to:e.effects.scaledDimensions(n,a,t.direction||"both"),origin:t.origin||["middle","center"]},t);t.fade&&(o.from.opacity=1,o.to.opacity=0),e.effects.effect.size.call(this,o,i)}),e.effects.define("puff","hide",function(t,i){var n=e.extend(!0,{},t,{fade:!0,percent:parseInt(t.percent,10)||150});e.effects.effect.scale.call(this,n,i)}),e.effects.define("pulsate","show",function(t,i){var n=e(this),s=t.mode,a="show"===s,o="hide"===s,r=a||o,l=2*(t.times||5)+(r?1:0),h=t.duration/l,u=0,c=1,d=n.queue().length;for((a||!n.is(":visible"))&&(n.css("opacity",0).show(),u=1);l>c;c++)n.animate({opacity:u},h,t.easing),u=1-u;n.animate({opacity:u},h,t.easing),n.queue(i),e.effects.unshift(n,d,l+1)}),e.effects.define("shake",function(t,i){var n=1,s=e(this),a=t.direction||"left",o=t.distance||20,r=t.times||3,l=2*r+1,h=Math.round(t.duration/l),u="up"===a||"down"===a?"top":"left",c="up"===a||"left"===a,d={},p={},f={},m=s.queue().length;for(e.effects.createPlaceholder(s),d[u]=(c?"-=":"+=")+o,p[u]=(c?"+=":"-=")+2*o,f[u]=(c?"-=":"+=")+2*o,s.animate(d,h,t.easing);r>n;n++)s.animate(p,h,t.easing).animate(f,h,t.easing);s.animate(p,h,t.easing).animate(d,h/2,t.easing).queue(i),e.effects.unshift(s,m,l+1)}),e.effects.define("slide","show",function(t,i){var n,s,a=e(this),o={up:["bottom","top"],down:["top","bottom"],left:["right","left"],right:["left","right"]},r=t.mode,l=t.direction||"left",h="up"===l||"down"===l?"top":"left",u="up"===l||"left"===l,c=t.distance||a["top"===h?"outerHeight":"outerWidth"](!0),d={};e.effects.createPlaceholder(a),n=a.cssClip(),s=a.position()[h],d[h]=(u?-1:1)*c+s,d.clip=a.cssClip(),d.clip[o[l][1]]=d.clip[o[l][0]],"show"===r&&(a.cssClip(d.clip),a.css(h,d[h]),d.clip=n,d[h]=s),a.animate(d,{queue:!1,duration:t.duration,easing:t.easing,complete:i})});var f;e.uiBackCompat!==!1&&(f=e.effects.define("transfer",function(t,i){e(this).transfer(t,i)})),e.ui.focusable=function(i,n){var s,a,o,r,l,h=i.nodeName.toLowerCase();return"area"===h?(s=i.parentNode,a=s.name,!(!i.href||!a||"map"!==s.nodeName.toLowerCase())&&(o=e("img[usemap='#"+a+"']"),o.length>0&&o.is(":visible"))):(/^(input|select|textarea|button|object)$/.test(h)?(r=!i.disabled,r&&(l=e(i).closest("fieldset")[0],l&&(r=!l.disabled))):r="a"===h?i.href||n:n,r&&e(i).is(":visible")&&t(e(i)))},e.extend(e.expr[":"],{focusable:function(t){return e.ui.focusable(t,null!=e.attr(t,"tabindex"))}}),e.ui.focusable,e.fn.form=function(){return"string"==typeof this[0].form?this.closest("form"):e(this[0].form)},e.ui.formResetMixin={_formResetHandler:function(){var t=e(this);setTimeout(function(){var i=t.data("ui-form-reset-instances");e.each(i,function(){this.refresh()})})},_bindFormResetHandler:function(){if(this.form=this.element.form(),this.form.length){var e=this.form.data("ui-form-reset-instances")||[];e.length||this.form.on("reset.ui-form-reset",this._formResetHandler),e.push(this),this.form.data("ui-form-reset-instances",e)}},_unbindFormResetHandler:function(){if(this.form.length){var t=this.form.data("ui-form-reset-instances");t.splice(e.inArray(this,t),1),t.length?this.form.data("ui-form-reset-instances",t):this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset")}}},"1.7"===e.fn.jquery.substring(0,3)&&(e.each(["Width","Height"],function(t,i){function n(t,i,n,a){return e.each(s,function(){i-=parseFloat(e.css(t,"padding"+this))||0,n&&(i-=parseFloat(e.css(t,"border"+this+"Width"))||0),a&&(i-=parseFloat(e.css(t,"margin"+this))||0)}),i}var s="Width"===i?["Left","Right"]:["Top","Bottom"],a=i.toLowerCase(),o={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+i]=function(t){return void 0===t?o["inner"+i].call(this):this.each(function(){e(this).css(a,n(this,t)+"px")})},e.fn["outer"+i]=function(t,s){return"number"!=typeof t?o["outer"+i].call(this,t):this.each(function(){e(this).css(a,n(this,t,!0,s)+"px")})}}),e.fn.addBack=function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}),e.ui.keyCode={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38},e.ui.escapeSelector=function(){var e=/([!"#$%&'()*+,.\/:;<=>?@[\]^`{|}~])/g;return function(t){return t.replace(e,"\\$1")}}(),e.fn.labels=function(){var t,i,n,s,a;return this[0].labels&&this[0].labels.length?this.pushStack(this[0].labels):(s=this.eq(0).parents("label"),n=this.attr("id"),n&&(t=this.eq(0).parents().last(),a=t.add(t.length?t.siblings():this.siblings()),i="label[for='"+e.ui.escapeSelector(n)+"']",s=s.add(a.find(i).addBack(i))),this.pushStack(s))},e.fn.scrollParent=function(t){var i=this.css("position"),n="absolute"===i,s=t?/(auto|scroll|hidden)/:/(auto|scroll)/,a=this.parents().filter(function(){var t=e(this);return(!n||"static"!==t.css("position"))&&s.test(t.css("overflow")+t.css("overflow-y")+t.css("overflow-x"))}).eq(0);return"fixed"!==i&&a.length?a:e(this[0].ownerDocument||document)},e.extend(e.expr[":"],{tabbable:function(t){var i=e.attr(t,"tabindex"),n=null!=i;return(!n||i>=0)&&e.ui.focusable(t,n)}}),e.fn.extend({uniqueId:function(){var e=0;return function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++e)})}}(),removeUniqueId:function(){return this.each(function(){/^ui-id-\d+$/.test(this.id)&&e(this).removeAttr("id")})}}),e.widget("ui.accordion",{version:"1.12.0",options:{active:0,animate:{},classes:{"ui-accordion-header":"ui-corner-top","ui-accordion-header-collapsed":"ui-corner-all","ui-accordion-content":"ui-corner-bottom"},collapsible:!1,event:"click",header:"> li > :first-child, > :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},hideProps:{borderTopWidth:"hide",borderBottomWidth:"hide",paddingTop:"hide",paddingBottom:"hide",height:"hide"},showProps:{borderTopWidth:"show",borderBottomWidth:"show",paddingTop:"show",paddingBottom:"show",height:"show"},_create:function(){var t=this.options;this.prevShow=this.prevHide=e(),this._addClass("ui-accordion","ui-widget ui-helper-reset"),this.element.attr("role","tablist"),t.collapsible||t.active!==!1&&null!=t.active||(t.active=0),this._processPanels(),0>t.active&&(t.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:this.active.length?this.active.next():e()}},_createIcons:function(){var t,i,n=this.options.icons;n&&(t=e("<span>"),this._addClass(t,"ui-accordion-header-icon","ui-icon "+n.header),t.prependTo(this.headers),i=this.active.children(".ui-accordion-header-icon"),this._removeClass(i,n.header)._addClass(i,null,n.activeHeader)._addClass(this.headers,"ui-accordion-icons"))},_destroyIcons:function(){this._removeClass(this.headers,"ui-accordion-icons"),this.headers.children(".ui-accordion-header-icon").remove()},_destroy:function(){var e;this.element.removeAttr("role"),this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId(),this._destroyIcons(),e=this.headers.next().css("display","").removeAttr("role aria-hidden aria-labelledby").removeUniqueId(),"content"!==this.options.heightStyle&&e.css("height","")},_setOption:function(e,t){return"active"===e?void this._activate(t):("event"===e&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(t)),this._super(e,t),"collapsible"!==e||t||this.options.active!==!1||this._activate(0),void("icons"===e&&(this._destroyIcons(),t&&this._createIcons())))},_setOptionDisabled:function(e){this._super(e),this.element.attr("aria-disabled",e),this._toggleClass(null,"ui-state-disabled",!!e),this._toggleClass(this.headers.add(this.headers.next()),null,"ui-state-disabled",!!e)},_keydown:function(t){if(!t.altKey&&!t.ctrlKey){var i=e.ui.keyCode,n=this.headers.length,s=this.headers.index(t.target),a=!1;switch(t.keyCode){case i.RIGHT:case i.DOWN:a=this.headers[(s+1)%n];break;case i.LEFT:case i.UP:a=this.headers[(s-1+n)%n];break;case i.SPACE:case i.ENTER:this._eventHandler(t);break;case i.HOME:a=this.headers[0];break;case i.END:a=this.headers[n-1]}a&&(e(t.target).attr("tabIndex",-1),e(a).attr("tabIndex",0),e(a).trigger("focus"),t.preventDefault())}},_panelKeyDown:function(t){t.keyCode===e.ui.keyCode.UP&&t.ctrlKey&&e(t.currentTarget).prev().trigger("focus")},refresh:function(){var t=this.options;this._processPanels(),t.active===!1&&t.collapsible===!0||!this.headers.length?(t.active=!1,this.active=e()):t.active===!1?this._activate(0):this.active.length&&!e.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(".ui-state-disabled").length?(t.active=!1,this.active=e()):this._activate(Math.max(0,t.active-1)):t.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){var e=this.headers,t=this.panels;this.headers=this.element.find(this.options.header),this._addClass(this.headers,"ui-accordion-header ui-accordion-header-collapsed","ui-state-default"),this.panels=this.headers.next().filter(":not(.ui-accordion-content-active)").hide(),this._addClass(this.panels,"ui-accordion-content","ui-helper-reset ui-widget-content"),t&&(this._off(e.not(this.headers)),this._off(t.not(this.panels)))},_refresh:function(){var t,i=this.options,n=i.heightStyle,s=this.element.parent();this.active=this._findActive(i.active),this._addClass(this.active,"ui-accordion-header-active","ui-state-active")._removeClass(this.active,"ui-accordion-header-collapsed"),this._addClass(this.active.next(),"ui-accordion-content-active"),this.active.next().show(),this.headers.attr("role","tab").each(function(){var t=e(this),i=t.uniqueId().attr("id"),n=t.next(),s=n.uniqueId().attr("id");t.attr("aria-controls",s),n.attr("aria-labelledby",i)}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}).next().attr({"aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}).next().attr({"aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._createIcons(),this._setupEvents(i.event),"fill"===n?(t=s.height(),this.element.siblings(":visible").each(function(){var i=e(this),n=i.css("position");"absolute"!==n&&"fixed"!==n&&(t-=i.outerHeight(!0))}),this.headers.each(function(){t-=e(this).outerHeight(!0)}),this.headers.next().each(function(){e(this).height(Math.max(0,t-e(this).innerHeight()+e(this).height()))}).css("overflow","auto")):"auto"===n&&(t=0,this.headers.next().each(function(){var i=e(this).is(":visible");i||e(this).show(),t=Math.max(t,e(this).css("height","").height()),i||e(this).hide()}).height(t))},_activate:function(t){var i=this._findActive(t)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:e.noop}))},_findActive:function(t){return"number"==typeof t?this.headers.eq(t):e()},_setupEvents:function(t){var i={keydown:"_keydown"};t&&e.each(t.split(" "),function(e,t){i[t]="_eventHandler"}),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(t){var i,n,s=this.options,a=this.active,o=e(t.currentTarget),r=o[0]===a[0],l=r&&s.collapsible,h=l?e():o.next(),u=a.next(),c={oldHeader:a,oldPanel:u,newHeader:l?e():o,newPanel:h};t.preventDefault(),r&&!s.collapsible||this._trigger("beforeActivate",t,c)===!1||(s.active=!l&&this.headers.index(o),this.active=r?e():o,this._toggle(c),this._removeClass(a,"ui-accordion-header-active","ui-state-active"),s.icons&&(i=a.children(".ui-accordion-header-icon"),this._removeClass(i,null,s.icons.activeHeader)._addClass(i,null,s.icons.header)),r||(this._removeClass(o,"ui-accordion-header-collapsed")._addClass(o,"ui-accordion-header-active","ui-state-active"),s.icons&&(n=o.children(".ui-accordion-header-icon"),this._removeClass(n,null,s.icons.header)._addClass(n,null,s.icons.activeHeader)),this._addClass(o.next(),"ui-accordion-content-active")))},_toggle:function(t){var i=t.newPanel,n=this.prevShow.length?this.prevShow:t.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=n,this.options.animate?this._animate(i,n,t):(n.hide(),i.show(),this._toggleComplete(t)),n.attr({"aria-hidden":"true"}),n.prev().attr({"aria-selected":"false","aria-expanded":"false"}),i.length&&n.length?n.prev().attr({tabIndex:-1,"aria-expanded":"false"}):i.length&&this.headers.filter(function(){return 0===parseInt(e(this).attr("tabIndex"),10)}).attr("tabIndex",-1),i.attr("aria-hidden","false").prev().attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_animate:function(e,t,i){var n,s,a,o=this,r=0,l=e.css("box-sizing"),h=e.length&&(!t.length||e.index()<t.index()),u=this.options.animate||{},c=h&&u.down||u,d=function(){o._toggleComplete(i)};return"number"==typeof c&&(a=c),"string"==typeof c&&(s=c),s=s||c.easing||u.easing,a=a||c.duration||u.duration,t.length?e.length?(n=e.show().outerHeight(),t.animate(this.hideProps,{duration:a,easing:s,step:function(e,t){t.now=Math.round(e)}}),void e.hide().animate(this.showProps,{duration:a,easing:s,complete:d,step:function(e,i){i.now=Math.round(e),"height"!==i.prop?"content-box"===l&&(r+=i.now):"content"!==o.options.heightStyle&&(i.now=Math.round(n-t.outerHeight()-r),r=0)}})):t.animate(this.hideProps,a,s,d):e.animate(this.showProps,a,s,d)},_toggleComplete:function(e){var t=e.oldPanel,i=t.prev();this._removeClass(t,"ui-accordion-content-active"),this._removeClass(i,"ui-accordion-header-active")._addClass(i,"ui-accordion-header-collapsed"),t.length&&(t.parent()[0].className=t.parent()[0].className),this._trigger("activate",null,e)}}),e.ui.safeActiveElement=function(e){var t;try{t=e.activeElement}catch(i){t=e.body}return t||(t=e.body),t.nodeName||(t=e.body),t},e.widget("ui.menu",{version:"1.12.0",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-caret-1-e"},items:"> *",menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().attr({role:this.options.role,tabIndex:0}),this._addClass("ui-menu","ui-widget ui-widget-content"),this._on({"mousedown .ui-menu-item":function(e){e.preventDefault()},"click .ui-menu-item":function(t){var i=e(t.target),n=e(e.ui.safeActiveElement(this.document[0]));!this.mouseHandled&&i.not(".ui-state-disabled").length&&(this.select(t),t.isPropagationStopped()||(this.mouseHandled=!0),i.has(".ui-menu").length?this.expand(t):!this.element.is(":focus")&&n.closest(".ui-menu").length&&(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(t){if(!this.previousFilter){var i=e(t.target).closest(".ui-menu-item"),n=e(t.currentTarget);i[0]===n[0]&&(this._removeClass(n.siblings().children(".ui-state-active"),null,"ui-state-active"),this.focus(t,n))}},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(e,t){var i=this.active||this.element.find(this.options.items).eq(0);t||this.focus(e,i)},blur:function(t){this._delay(function(){var i=!e.contains(this.element[0],e.ui.safeActiveElement(this.document[0]));i&&this.collapseAll(t)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(e){this._closeOnDocumentClick(e)&&this.collapseAll(e),this.mouseHandled=!1}})},_destroy:function(){var t=this.element.find(".ui-menu-item").removeAttr("role aria-disabled"),i=t.children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup");this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show(),i.children().each(function(){var t=e(this);t.data("ui-menu-submenu-caret")&&t.remove()})},_keydown:function(t){var i,n,s,a,o=!0;switch(t.keyCode){case e.ui.keyCode.PAGE_UP:this.previousPage(t);break;case e.ui.keyCode.PAGE_DOWN:this.nextPage(t);break;case e.ui.keyCode.HOME:this._move("first","first",t);break;case e.ui.keyCode.END:this._move("last","last",t);break;case e.ui.keyCode.UP:this.previous(t);break;case e.ui.keyCode.DOWN:this.next(t);break;case e.ui.keyCode.LEFT:this.collapse(t);break;case e.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(t);break;case e.ui.keyCode.ENTER:case e.ui.keyCode.SPACE:this._activate(t);break;case e.ui.keyCode.ESCAPE:this.collapse(t);break;default:o=!1,n=this.previousFilter||"",s=String.fromCharCode(t.keyCode),a=!1,clearTimeout(this.filterTimer),s===n?a=!0:s=n+s,i=this._filterMenuItems(s),i=a&&-1!==i.index(this.active.next())?this.active.nextAll(".ui-menu-item"):i,i.length||(s=String.fromCharCode(t.keyCode),i=this._filterMenuItems(s)),i.length?(this.focus(t,i),this.previousFilter=s,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter}o&&t.preventDefault()},_activate:function(e){this.active&&!this.active.is(".ui-state-disabled")&&(this.active.children("[aria-haspopup='true']").length?this.expand(e):this.select(e))},refresh:function(){var t,i,n,s,a,o=this,r=this.options.icons.submenu,l=this.element.find(this.options.menus);this._toggleClass("ui-menu-icons",null,!!this.element.find(".ui-icon").length),n=l.filter(":not(.ui-menu)").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var t=e(this),i=t.prev(),n=e("<span>").data("ui-menu-submenu-caret",!0);o._addClass(n,"ui-menu-icon","ui-icon "+r),i.attr("aria-haspopup","true").prepend(n),t.attr("aria-labelledby",i.attr("id"))}),this._addClass(n,"ui-menu","ui-widget ui-widget-content ui-front"),t=l.add(this.element),i=t.find(this.options.items),i.not(".ui-menu-item").each(function(){var t=e(this);o._isDivider(t)&&o._addClass(t,"ui-menu-divider","ui-widget-content")}),s=i.not(".ui-menu-item, .ui-menu-divider"),a=s.children().not(".ui-menu").uniqueId().attr({tabIndex:-1,role:this._itemRole()}),this._addClass(s,"ui-menu-item")._addClass(a,"ui-menu-item-wrapper"),i.filter(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!e.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},_setOption:function(e,t){if("icons"===e){var i=this.element.find(".ui-menu-icon");this._removeClass(i,null,this.options.icons.submenu)._addClass(i,null,t.submenu)}this._super(e,t)},_setOptionDisabled:function(e){this._super(e),this.element.attr("aria-disabled",e+""),this._toggleClass(null,"ui-state-disabled",!!e)},focus:function(e,t){var i,n,s;this.blur(e,e&&"focus"===e.type),this._scrollIntoView(t),this.active=t.first(),n=this.active.children(".ui-menu-item-wrapper"),this._addClass(n,null,"ui-state-active"),this.options.role&&this.element.attr("aria-activedescendant",n.attr("id")),s=this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper"),this._addClass(s,null,"ui-state-active"),e&&"keydown"===e.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),i=t.children(".ui-menu"),i.length&&e&&/^mouse/.test(e.type)&&this._startOpening(i),this.activeMenu=t.parent(),this._trigger("focus",e,{item:t})},_scrollIntoView:function(t){var i,n,s,a,o,r;this._hasScroll()&&(i=parseFloat(e.css(this.activeMenu[0],"borderTopWidth"))||0,n=parseFloat(e.css(this.activeMenu[0],"paddingTop"))||0,s=t.offset().top-this.activeMenu.offset().top-i-n,a=this.activeMenu.scrollTop(),o=this.activeMenu.height(),r=t.outerHeight(),0>s?this.activeMenu.scrollTop(a+s):s+r>o&&this.activeMenu.scrollTop(a+s-o+r))},blur:function(e,t){t||clearTimeout(this.timer),this.active&&(this._removeClass(this.active.children(".ui-menu-item-wrapper"),null,"ui-state-active"),this._trigger("blur",e,{item:this.active}),this.active=null)},_startOpening:function(e){clearTimeout(this.timer),"true"===e.attr("aria-hidden")&&(this.timer=this._delay(function(){this._close(),this._open(e)},this.delay))},_open:function(t){var i=e.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(t.parents(".ui-menu")).hide().attr("aria-hidden","true"),t.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(i)},collapseAll:function(t,i){clearTimeout(this.timer),this.timer=this._delay(function(){var n=i?this.element:e(t&&t.target).closest(this.element.find(".ui-menu"));n.length||(n=this.element),this._close(n),this.blur(t),this._removeClass(n.find(".ui-state-active"),null,"ui-state-active"),this.activeMenu=n},this.delay)},_close:function(e){e||(e=this.active?this.active.parent():this.element),e.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false")},_closeOnDocumentClick:function(t){return!e(t.target).closest(".ui-menu").length},_isDivider:function(e){return!/[^\-\u2014\u2013\s]/.test(e.text())},collapse:function(e){var t=this.active&&this.active.parent().closest(".ui-menu-item",this.element);t&&t.length&&(this._close(),this.focus(e,t))},expand:function(e){var t=this.active&&this.active.children(".ui-menu ").find(this.options.items).first();t&&t.length&&(this._open(t.parent()),this._delay(function(){this.focus(e,t)}))},next:function(e){this._move("next","first",e)},previous:function(e){this._move("prev","last",e)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(e,t,i){var n;this.active&&(n="first"===e||"last"===e?this.active["first"===e?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[e+"All"](".ui-menu-item").eq(0)),n&&n.length&&this.active||(n=this.activeMenu.find(this.options.items)[t]()),this.focus(i,n)},nextPage:function(t){var i,n,s;return this.active?void(this.isLastItem()||(this._hasScroll()?(n=this.active.offset().top,
s=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return i=e(this),0>i.offset().top-n-s}),this.focus(t,i)):this.focus(t,this.activeMenu.find(this.options.items)[this.active?"last":"first"]()))):void this.next(t)},previousPage:function(t){var i,n,s;return this.active?void(this.isFirstItem()||(this._hasScroll()?(n=this.active.offset().top,s=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return i=e(this),i.offset().top-n+s>0}),this.focus(t,i)):this.focus(t,this.activeMenu.find(this.options.items).first()))):void this.next(t)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(t){this.active=this.active||e(t.target).closest(".ui-menu-item");var i={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(t,!0),this._trigger("select",t,i)},_filterMenuItems:function(t){var i=t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"),n=RegExp("^"+i,"i");return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function(){return n.test(e.trim(e(this).children(".ui-menu-item-wrapper").text()))})}}),e.widget("ui.autocomplete",{version:"1.12.0",defaultElement:"<input>",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,_create:function(){var t,i,n,s=this.element[0].nodeName.toLowerCase(),a="textarea"===s,o="input"===s;this.isMultiLine=a||!o&&this._isContentEditable(this.element),this.valueMethod=this.element[a||o?"val":"text"],this.isNewMenu=!0,this._addClass("ui-autocomplete-input"),this.element.attr("autocomplete","off"),this._on(this.element,{keydown:function(s){if(this.element.prop("readOnly"))return t=!0,n=!0,void(i=!0);t=!1,n=!1,i=!1;var a=e.ui.keyCode;switch(s.keyCode){case a.PAGE_UP:t=!0,this._move("previousPage",s);break;case a.PAGE_DOWN:t=!0,this._move("nextPage",s);break;case a.UP:t=!0,this._keyEvent("previous",s);break;case a.DOWN:t=!0,this._keyEvent("next",s);break;case a.ENTER:this.menu.active&&(t=!0,s.preventDefault(),this.menu.select(s));break;case a.TAB:this.menu.active&&this.menu.select(s);break;case a.ESCAPE:this.menu.element.is(":visible")&&(this.isMultiLine||this._value(this.term),this.close(s),s.preventDefault());break;default:i=!0,this._searchTimeout(s)}},keypress:function(n){if(t)return t=!1,void((!this.isMultiLine||this.menu.element.is(":visible"))&&n.preventDefault());if(!i){var s=e.ui.keyCode;switch(n.keyCode){case s.PAGE_UP:this._move("previousPage",n);break;case s.PAGE_DOWN:this._move("nextPage",n);break;case s.UP:this._keyEvent("previous",n);break;case s.DOWN:this._keyEvent("next",n)}}},input:function(e){return n?(n=!1,void e.preventDefault()):void this._searchTimeout(e)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(e){return this.cancelBlur?void delete this.cancelBlur:(clearTimeout(this.searching),this.close(e),void this._change(e))}}),this._initSource(),this.menu=e("<ul>").appendTo(this._appendTo()).menu({role:null}).hide().menu("instance"),this._addClass(this.menu.element,"ui-autocomplete","ui-front"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,this.element[0]!==e.ui.safeActiveElement(this.document[0])&&this.element.trigger("focus")})},menufocus:function(t,i){var n,s;return this.isNewMenu&&(this.isNewMenu=!1,t.originalEvent&&/^mouse/.test(t.originalEvent.type))?(this.menu.blur(),void this.document.one("mousemove",function(){e(t.target).trigger(t.originalEvent)})):(s=i.item.data("ui-autocomplete-item"),!1!==this._trigger("focus",t,{item:s})&&t.originalEvent&&/^key/.test(t.originalEvent.type)&&this._value(s.value),n=i.item.attr("aria-label")||s.value,void(n&&e.trim(n).length&&(this.liveRegion.children().hide(),e("<div>").text(n).appendTo(this.liveRegion))))},menuselect:function(t,i){var n=i.item.data("ui-autocomplete-item"),s=this.previous;this.element[0]!==e.ui.safeActiveElement(this.document[0])&&(this.element.trigger("focus"),this.previous=s,this._delay(function(){this.previous=s,this.selectedItem=n})),!1!==this._trigger("select",t,{item:n})&&this._value(n.value),this.term=this._value(),this.close(t),this.selectedItem=n}}),this.liveRegion=e("<div>",{role:"status","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(e,t){this._super(e,t),"source"===e&&this._initSource(),"appendTo"===e&&this.menu.element.appendTo(this._appendTo()),"disabled"===e&&t&&this.xhr&&this.xhr.abort()},_isEventTargetInWidget:function(t){var i=this.menu.element[0];return t.target===this.element[0]||t.target===i||e.contains(i,t.target)},_closeOnClickOutside:function(e){this._isEventTargetInWidget(e)||this.close()},_appendTo:function(){var t=this.options.appendTo;return t&&(t=t.jquery||t.nodeType?e(t):this.document.find(t).eq(0)),t&&t[0]||(t=this.element.closest(".ui-front, dialog")),t.length||(t=this.document[0].body),t},_initSource:function(){var t,i,n=this;e.isArray(this.options.source)?(t=this.options.source,this.source=function(i,n){n(e.ui.autocomplete.filter(t,i.term))}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(t,s){n.xhr&&n.xhr.abort(),n.xhr=e.ajax({url:i,data:t,dataType:"json",success:function(e){s(e)},error:function(){s([])}})}):this.source=this.options.source},_searchTimeout:function(e){clearTimeout(this.searching),this.searching=this._delay(function(){var t=this.term===this._value(),i=this.menu.element.is(":visible"),n=e.altKey||e.ctrlKey||e.metaKey||e.shiftKey;(!t||t&&!i&&!n)&&(this.selectedItem=null,this.search(null,e))},this.options.delay)},search:function(e,t){return e=null!=e?e:this._value(),this.term=this._value(),e.length<this.options.minLength?this.close(t):this._trigger("search",t)!==!1?this._search(e):void 0},_search:function(e){this.pending++,this._addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:e},this._response())},_response:function(){var t=++this.requestIndex;return e.proxy(function(e){t===this.requestIndex&&this.__response(e),this.pending--,this.pending||this._removeClass("ui-autocomplete-loading")},this)},__response:function(e){e&&(e=this._normalize(e)),this._trigger("response",null,{content:e}),!this.options.disabled&&e&&e.length&&!this.cancelSearch?(this._suggest(e),this._trigger("open")):this._close()},close:function(e){this.cancelSearch=!0,this._close(e)},_close:function(e){this._off(this.document,"mousedown"),this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",e))},_change:function(e){this.previous!==this._value()&&this._trigger("change",e,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:e.map(t,function(t){return"string"==typeof t?{label:t,value:t}:e.extend({},t,{label:t.label||t.value,value:t.value||t.label})})},_suggest:function(t){var i=this.menu.element.empty();this._renderMenu(i,t),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(e.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next(),this._on(this.document,{mousedown:"_closeOnClickOutside"})},_resizeMenu:function(){var e=this.menu.element;e.outerWidth(Math.max(e.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(t,i){var n=this;e.each(i,function(e,i){n._renderItemData(t,i)})},_renderItemData:function(e,t){return this._renderItem(e,t).data("ui-autocomplete-item",t)},_renderItem:function(t,i){return e("<li>").append(e("<div>").text(i.label)).appendTo(t)},_move:function(e,t){return this.menu.element.is(":visible")?this.menu.isFirstItem()&&/^previous/.test(e)||this.menu.isLastItem()&&/^next/.test(e)?(this.isMultiLine||this._value(this.term),void this.menu.blur()):void this.menu[e](t):void this.search(null,t)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(e,t){(!this.isMultiLine||this.menu.element.is(":visible"))&&(this._move(e,t),t.preventDefault())},_isContentEditable:function(e){if(!e.length)return!1;var t=e.prop("contentEditable");return"inherit"===t?this._isContentEditable(e.parent()):"true"===t}}),e.extend(e.ui.autocomplete,{escapeRegex:function(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(t,i){var n=RegExp(e.ui.autocomplete.escapeRegex(i),"i");return e.grep(t,function(e){return n.test(e.label||e.value||e)})}}),e.widget("ui.autocomplete",e.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(e){return e+(e>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(t){var i;this._superApply(arguments),this.options.disabled||this.cancelSearch||(i=t&&t.length?this.options.messages.results(t.length):this.options.messages.noResults,this.liveRegion.children().hide(),e("<div>").text(i).appendTo(this.liveRegion))}}),e.ui.autocomplete;var m=/ui-corner-([a-z]){2,6}/g;e.widget("ui.controlgroup",{version:"1.12.0",defaultElement:"<div>",options:{direction:"horizontal",disabled:null,onlyVisible:!0,items:{button:"input[type=button], input[type=submit], input[type=reset], button, a",controlgroupLabel:".ui-controlgroup-label",checkboxradio:"input[type='checkbox'], input[type='radio']",selectmenu:"select",spinner:".ui-spinner-input"}},_create:function(){this._enhance()},_enhance:function(){this.element.attr("role","toolbar"),this.refresh()},_destroy:function(){this._callChildMethod("destroy"),this.childWidgets.removeData("ui-controlgroup-data"),this.element.removeAttr("role"),this.options.items.controlgroupLabel&&this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap()},_initWidgets:function(){var t=this,i=[];e.each(this.options.items,function(n,s){var a,o={};return s?"controlgroupLabel"===n?(a=t.element.find(s),a.each(function(){var t=e(this);t.children(".ui-controlgroup-label-contents").length||t.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>")}),t._addClass(a,null,"ui-widget ui-widget-content ui-state-default"),void(i=i.concat(a.get()))):void(e.fn[n]&&(t["_"+n+"Options"]&&(o=t["_"+n+"Options"]("middle")),t.element.find(s).each(function(){var s=e(this),a=s[n]("instance"),r=e.widget.extend({},o);if("button"!==n||!s.parent(".ui-spinner").length){a||(a=s[n]()[n]("instance")),a&&(r.classes=t._resolveClassesValues(r.classes,a)),s[n](r);var l=s[n]("widget");e.data(l[0],"ui-controlgroup-data",a?a:s[n]("instance")),i.push(l[0])}}))):void 0}),this.childWidgets=e(e.unique(i)),this._addClass(this.childWidgets,"ui-controlgroup-item")},_callChildMethod:function(t){this.childWidgets.each(function(){var i=e(this),n=i.data("ui-controlgroup-data");n&&n[t]&&n[t]()})},_updateCornerClass:function(e,t){var i="ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all",n=this._buildSimpleOptions(t,"label").classes.label;this._removeClass(e,null,i),this._addClass(e,null,n)},_buildSimpleOptions:function(e,t){var i="vertical"===this.options.direction,n={classes:{}};return n.classes[t]={middle:"",first:"ui-corner-"+(i?"top":"left"),last:"ui-corner-"+(i?"bottom":"right"),only:"ui-corner-all"}[e],n},_spinnerOptions:function(e){var t=this._buildSimpleOptions(e,"ui-spinner");return t.classes["ui-spinner-up"]="",t.classes["ui-spinner-down"]="",t},_buttonOptions:function(e){return this._buildSimpleOptions(e,"ui-button")},_checkboxradioOptions:function(e){return this._buildSimpleOptions(e,"ui-checkboxradio-label")},_selectmenuOptions:function(e){var t="vertical"===this.options.direction;return{width:!!t&&"auto",classes:{middle:{"ui-selectmenu-button-open":"","ui-selectmenu-button-closed":""},first:{"ui-selectmenu-button-open":"ui-corner-"+(t?"top":"tl"),"ui-selectmenu-button-closed":"ui-corner-"+(t?"top":"left")},last:{"ui-selectmenu-button-open":t?"":"ui-corner-tr","ui-selectmenu-button-closed":"ui-corner-"+(t?"bottom":"right")},only:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"}}[e]}},_resolveClassesValues:function(t,i){var n={};return e.each(t,function(e){var s=i.options.classes[e]||"";s=s.replace(m,"").trim(),n[e]=(s+" "+t[e]).replace(/\s+/g," ")}),n},_setOption:function(e,t){return"direction"===e&&this._removeClass("ui-controlgroup-"+this.options.direction),this._super(e,t),"disabled"===e?void this._callChildMethod(t?"disable":"enable"):void this.refresh()},refresh:function(){var t,i=this;this._addClass("ui-controlgroup ui-controlgroup-"+this.options.direction),"horizontal"===this.options.direction&&this._addClass(null,"ui-helper-clearfix"),this._initWidgets(),t=this.childWidgets,this.options.onlyVisible&&(t=t.filter(":visible")),t.length&&(e.each(["first","last"],function(e,n){var s=t[n]().data("ui-controlgroup-data");if(s&&i["_"+s.widgetName+"Options"]){var a=i["_"+s.widgetName+"Options"](1===t.length?"only":n);a.classes=i._resolveClassesValues(a.classes,s),s.element[s.widgetName](a)}else i._updateCornerClass(t[n](),n)}),this._callChildMethod("refresh"))}}),e.widget("ui.checkboxradio",[e.ui.formResetMixin,{version:"1.12.0",options:{disabled:null,label:null,icon:!0,classes:{"ui-checkboxradio-label":"ui-corner-all","ui-checkboxradio-icon":"ui-corner-all"}},_getCreateOptions:function(){var t,i,n=this,s=this._super()||{};return this._readType(),i=this.element.labels(),this.label=e(i[i.length-1]),this.label.length||e.error("No label found for checkboxradio widget"),this.originalLabel="",this.label.contents().not(this.element).each(function(){n.originalLabel+=3===this.nodeType?e(this).text():this.outerHTML}),this.originalLabel&&(s.label=this.originalLabel),t=this.element[0].disabled,null!=t&&(s.disabled=t),s},_create:function(){var e=this.element[0].checked;this._bindFormResetHandler(),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled),this._setOption("disabled",this.options.disabled),this._addClass("ui-checkboxradio","ui-helper-hidden-accessible"),this._addClass(this.label,"ui-checkboxradio-label","ui-button ui-widget"),"radio"===this.type&&this._addClass(this.label,"ui-checkboxradio-radio-label"),this.options.label&&this.options.label!==this.originalLabel?this._updateLabel():this.originalLabel&&(this.options.label=this.originalLabel),this._enhance(),e&&(this._addClass(this.label,"ui-checkboxradio-checked","ui-state-active"),this.icon&&this._addClass(this.icon,null,"ui-state-hover")),this._on({change:"_toggleClasses",focus:function(){this._addClass(this.label,null,"ui-state-focus ui-visual-focus")},blur:function(){this._removeClass(this.label,null,"ui-state-focus ui-visual-focus")}})},_readType:function(){var t=this.element[0].nodeName.toLowerCase();this.type=this.element[0].type,"input"===t&&/radio|checkbox/.test(this.type)||e.error("Can't create checkboxradio on element.nodeName="+t+" and element.type="+this.type)},_enhance:function(){this._updateIcon(this.element[0].checked)},widget:function(){return this.label},_getRadioGroup:function(){var t,i=this.element[0].name,n="input[name='"+e.ui.escapeSelector(i)+"']";return i?(t=this.form.length?e(this.form[0].elements).filter(n):e(n).filter(function(){return 0===e(this).form().length}),t.not(this.element)):e([])},_toggleClasses:function(){var t=this.element[0].checked;this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",t),this.options.icon&&"checkbox"===this.type&&this._toggleClass(this.icon,null,"ui-icon-check ui-state-checked",t)._toggleClass(this.icon,null,"ui-icon-blank",!t),"radio"===this.type&&this._getRadioGroup().each(function(){var t=e(this).checkboxradio("instance");t&&t._removeClass(t.label,"ui-checkboxradio-checked","ui-state-active")})},_destroy:function(){this._unbindFormResetHandler(),this.icon&&(this.icon.remove(),this.iconSpace.remove())},_setOption:function(e,t){return"label"!==e||t?(this._super(e,t),"disabled"===e?(this._toggleClass(this.label,null,"ui-state-disabled",t),void(this.element[0].disabled=t)):void this.refresh()):void 0},_updateIcon:function(t){var i="ui-icon ui-icon-background ";this.options.icon?(this.icon||(this.icon=e("<span>"),this.iconSpace=e("<span> </span>"),this._addClass(this.iconSpace,"ui-checkboxradio-icon-space")),"checkbox"===this.type?(i+=t?"ui-icon-check ui-state-checked":"ui-icon-blank",this._removeClass(this.icon,null,t?"ui-icon-blank":"ui-icon-check")):i+="ui-icon-blank",this._addClass(this.icon,"ui-checkboxradio-icon",i),t||this._removeClass(this.icon,null,"ui-icon-check ui-state-checked"),this.icon.prependTo(this.label).after(this.iconSpace)):void 0!==this.icon&&(this.icon.remove(),this.iconSpace.remove(),delete this.icon)},_updateLabel:function(){this.label.contents().not(this.element.add(this.icon).add(this.iconSpace)).remove(),this.label.append(this.options.label)},refresh:function(){var e=this.element[0].checked,t=this.element[0].disabled;this._updateIcon(e),this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",e),null!==this.options.label&&this._updateLabel(),t!==this.options.disabled&&this._setOptions({disabled:t})}}]),e.ui.checkboxradio,e.widget("ui.button",{version:"1.12.0",defaultElement:"<button>",options:{classes:{"ui-button":"ui-corner-all"},disabled:null,icon:null,iconPosition:"beginning",label:null,showLabel:!0},_getCreateOptions:function(){var e,t=this._super()||{};return this.isInput=this.element.is("input"),e=this.element[0].disabled,null!=e&&(t.disabled=e),this.originalLabel=this.isInput?this.element.val():this.element.html(),this.originalLabel&&(t.label=this.originalLabel),t},_create:function(){!this.option.showLabel&!this.options.icon&&(this.options.showLabel=!0),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled||!1),this.hasTitle=!!this.element.attr("title"),this.options.label&&this.options.label!==this.originalLabel&&(this.isInput?this.element.val(this.options.label):this.element.html(this.options.label)),this._addClass("ui-button","ui-widget"),this._setOption("disabled",this.options.disabled),this._enhance(),this.element.is("a")&&this._on({keyup:function(t){t.keyCode===e.ui.keyCode.SPACE&&(t.preventDefault(),this.element[0].click?this.element[0].click():this.element.trigger("click"))}})},_enhance:function(){this.element.is("button")||this.element.attr("role","button"),this.options.icon&&(this._updateIcon("icon",this.options.icon),this._updateTooltip())},_updateTooltip:function(){this.title=this.element.attr("title"),this.options.showLabel||this.title||this.element.attr("title",this.options.label)},_updateIcon:function(t,i){var n="iconPosition"!==t,s=n?this.options.iconPosition:i,a="top"===s||"bottom"===s;this.icon?n&&this._removeClass(this.icon,null,this.options.icon):(this.icon=e("<span>"),this._addClass(this.icon,"ui-button-icon","ui-icon"),this.options.showLabel||this._addClass("ui-button-icon-only")),n&&this._addClass(this.icon,null,i),this._attachIcon(s),a?(this._addClass(this.icon,null,"ui-widget-icon-block"),this.iconSpace&&this.iconSpace.remove()):(this.iconSpace||(this.iconSpace=e("<span> </span>"),this._addClass(this.iconSpace,"ui-button-icon-space")),this._removeClass(this.icon,null,"ui-wiget-icon-block"),this._attachIconSpace(s))},_destroy:function(){this.element.removeAttr("role"),this.icon&&this.icon.remove(),this.iconSpace&&this.iconSpace.remove(),this.hasTitle||this.element.removeAttr("title")},_attachIconSpace:function(e){this.icon[/^(?:end|bottom)/.test(e)?"before":"after"](this.iconSpace)},_attachIcon:function(e){this.element[/^(?:end|bottom)/.test(e)?"append":"prepend"](this.icon)},_setOptions:function(e){var t=void 0===e.showLabel?this.options.showLabel:e.showLabel,i=void 0===e.icon?this.options.icon:e.icon;t||i||(e.showLabel=!0),this._super(e)},_setOption:function(e,t){"icon"===e&&(t?this._updateIcon(e,t):this.icon&&(this.icon.remove(),this.iconSpace&&this.iconSpace.remove())),"iconPosition"===e&&this._updateIcon(e,t),"showLabel"===e&&(this._toggleClass("ui-button-icon-only",null,!t),this._updateTooltip()),"label"===e&&(this.isInput?this.element.val(t):(this.element.html(t),this.icon&&(this._attachIcon(this.options.iconPosition),this._attachIconSpace(this.options.iconPosition)))),this._super(e,t),"disabled"===e&&(this._toggleClass(null,"ui-state-disabled",t),this.element[0].disabled=t,t&&this.element.blur())},refresh:function(){var e=this.element.is("input, button")?this.element[0].disabled:this.element.hasClass("ui-button-disabled");e!==this.options.disabled&&this._setOptions({disabled:e}),this._updateTooltip()}}),e.uiBackCompat!==!1&&(e.widget("ui.button",e.ui.button,{options:{text:!0,icons:{primary:null,secondary:null}},_create:function(){this.options.showLabel&&!this.options.text&&(this.options.showLabel=this.options.text),!this.options.showLabel&&this.options.text&&(this.options.text=this.options.showLabel),this.options.icon||!this.options.icons.primary&&!this.options.icons.secondary?this.options.icon&&(this.options.icons.primary=this.options.icon):this.options.icons.primary?this.options.icon=this.options.icons.primary:(this.options.icon=this.options.icons.secondary,this.options.iconPosition="end"),this._super()},_setOption:function(e,t){return"text"===e?void this._super("showLabel",t):("showLabel"===e&&(this.options.text=t),"icon"===e&&(this.options.icons.primary=t),"icons"===e&&(t.primary?(this._super("icon",t.primary),this._super("iconPosition","beginning")):t.secondary&&(this._super("icon",t.secondary),this._super("iconPosition","end"))),void this._superApply(arguments))}}),e.fn.button=function(t){return function(){return!this.length||this.length&&"INPUT"!==this[0].tagName||this.length&&"INPUT"===this[0].tagName&&"checkbox"!==this.attr("type")&&"radio"!==this.attr("type")?t.apply(this,arguments):(e.ui.checkboxradio||e.error("Checkboxradio widget missing"),0===arguments.length?this.checkboxradio({icon:!1}):this.checkboxradio.apply(this,arguments))}}(e.fn.button),e.fn.buttonset=function(){return e.ui.controlgroup||e.error("Controlgroup widget missing"),"option"===arguments[0]&&"items"===arguments[1]&&arguments[2]?this.controlgroup.apply(this,[arguments[0],"items.button",arguments[2]]):"option"===arguments[0]&&"items"===arguments[1]?this.controlgroup.apply(this,[arguments[0],"items.button"]):("object"==typeof arguments[0]&&arguments[0].items&&(arguments[0].items={button:arguments[0].items}),this.controlgroup.apply(this,arguments))}),e.ui.button,e.extend(e.ui,{datepicker:{version:"1.12.0"}});var g;e.extend(n.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return o(this._defaults,e||{}),this},_attachDatepicker:function(t,i){var n,s,a;n=t.nodeName.toLowerCase(),s="div"===n||"span"===n,t.id||(this.uuid+=1,t.id="dp"+this.uuid),a=this._newInst(e(t),s),a.settings=e.extend({},i||{}),"input"===n?this._connectDatepicker(t,a):s&&this._inlineDatepicker(t,a)},_newInst:function(t,i){var n=t[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1");return{id:n,input:t,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:i?s(e("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")):this.dpDiv}},_connectDatepicker:function(t,i){var n=e(t);i.append=e([]),i.trigger=e([]),n.hasClass(this.markerClassName)||(this._attachments(n,i),n.addClass(this.markerClassName).on("keydown",this._doKeyDown).on("keypress",this._doKeyPress).on("keyup",this._doKeyUp),this._autoSize(i),e.data(t,"datepicker",i),i.settings.disabled&&this._disableDatepicker(t))},_attachments:function(t,i){var n,s,a,o=this._get(i,"appendText"),r=this._get(i,"isRTL");i.append&&i.append.remove(),o&&(i.append=e("<span class='"+this._appendClass+"'>"+o+"</span>"),t[r?"before":"after"](i.append)),t.off("focus",this._showDatepicker),i.trigger&&i.trigger.remove(),n=this._get(i,"showOn"),("focus"===n||"both"===n)&&t.on("focus",this._showDatepicker),("button"===n||"both"===n)&&(s=this._get(i,"buttonText"),a=this._get(i,"buttonImage"),i.trigger=e(this._get(i,"buttonImageOnly")?e("<img/>").addClass(this._triggerClass).attr({src:a,alt:s,title:s}):e("<button type='button'></button>").addClass(this._triggerClass).html(a?e("<img/>").attr({src:a,alt:s,title:s}):s)),t[r?"before":"after"](i.trigger),i.trigger.on("click",function(){return e.datepicker._datepickerShowing&&e.datepicker._lastInput===t[0]?e.datepicker._hideDatepicker():e.datepicker._datepickerShowing&&e.datepicker._lastInput!==t[0]?(e.datepicker._hideDatepicker(),e.datepicker._showDatepicker(t[0])):e.datepicker._showDatepicker(t[0]),!1}))},_autoSize:function(e){if(this._get(e,"autoSize")&&!e.inline){var t,i,n,s,a=new Date(2009,11,20),o=this._get(e,"dateFormat");o.match(/[DM]/)&&(t=function(e){for(i=0,n=0,s=0;e.length>s;s++)e[s].length>i&&(i=e[s].length,n=s);return n},a.setMonth(t(this._get(e,o.match(/MM/)?"monthNames":"monthNamesShort"))),a.setDate(t(this._get(e,o.match(/DD/)?"dayNames":"dayNamesShort"))+20-a.getDay())),e.input.attr("size",this._formatDate(e,a).length)}},_inlineDatepicker:function(t,i){var n=e(t);n.hasClass(this.markerClassName)||(n.addClass(this.markerClassName).append(i.dpDiv),e.data(t,"datepicker",i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(t),i.dpDiv.css("display","block"))},_dialogDatepicker:function(t,i,n,s,a){var r,l,h,u,c,d=this._dialogInst;return d||(this.uuid+=1,r="dp"+this.uuid,this._dialogInput=e("<input type='text' id='"+r+"' style='position: absolute; top: -100px; width: 0px;'/>"),this._dialogInput.on("keydown",this._doKeyDown),e("body").append(this._dialogInput),d=this._dialogInst=this._newInst(this._dialogInput,!1),d.settings={},e.data(this._dialogInput[0],"datepicker",d)),o(d.settings,s||{}),i=i&&i.constructor===Date?this._formatDate(d,i):i,this._dialogInput.val(i),this._pos=a?a.length?a:[a.pageX,a.pageY]:null,this._pos||(l=document.documentElement.clientWidth,h=document.documentElement.clientHeight,u=document.documentElement.scrollLeft||document.body.scrollLeft,c=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[l/2-100+u,h/2-150+c]),this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),d.settings.onSelect=n,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),e.blockUI&&e.blockUI(this.dpDiv),e.data(this._dialogInput[0],"datepicker",d),this},_destroyDatepicker:function(t){var i,n=e(t),s=e.data(t,"datepicker");n.hasClass(this.markerClassName)&&(i=t.nodeName.toLowerCase(),e.removeData(t,"datepicker"),"input"===i?(s.append.remove(),s.trigger.remove(),n.removeClass(this.markerClassName).off("focus",this._showDatepicker).off("keydown",this._doKeyDown).off("keypress",this._doKeyPress).off("keyup",this._doKeyUp)):("div"===i||"span"===i)&&n.removeClass(this.markerClassName).empty(),g===s&&(g=null))},_enableDatepicker:function(t){var i,n,s=e(t),a=e.data(t,"datepicker");s.hasClass(this.markerClassName)&&(i=t.nodeName.toLowerCase(),"input"===i?(t.disabled=!1,a.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""})):("div"===i||"span"===i)&&(n=s.children("."+this._inlineClass),n.children().removeClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)),this._disabledInputs=e.map(this._disabledInputs,function(e){return e===t?null:e}))},_disableDatepicker:function(t){var i,n,s=e(t),a=e.data(t,"datepicker");s.hasClass(this.markerClassName)&&(i=t.nodeName.toLowerCase(),"input"===i?(t.disabled=!0,a.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"})):("div"===i||"span"===i)&&(n=s.children("."+this._inlineClass),n.children().addClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)),this._disabledInputs=e.map(this._disabledInputs,function(e){return e===t?null:e}),this._disabledInputs[this._disabledInputs.length]=t)},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;this._disabledInputs.length>t;t++)if(this._disabledInputs[t]===e)return!0;return!1},_getInst:function(t){try{return e.data(t,"datepicker")}catch(i){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(t,i,n){var s,a,r,l,h=this._getInst(t);return 2===arguments.length&&"string"==typeof i?"defaults"===i?e.extend({},e.datepicker._defaults):h?"all"===i?e.extend({},h.settings):this._get(h,i):null:(s=i||{},"string"==typeof i&&(s={},s[i]=n),void(h&&(this._curInst===h&&this._hideDatepicker(),a=this._getDateDatepicker(t,!0),r=this._getMinMaxDate(h,"min"),l=this._getMinMaxDate(h,"max"),o(h.settings,s),null!==r&&void 0!==s.dateFormat&&void 0===s.minDate&&(h.settings.minDate=this._formatDate(h,r)),null!==l&&void 0!==s.dateFormat&&void 0===s.maxDate&&(h.settings.maxDate=this._formatDate(h,l)),"disabled"in s&&(s.disabled?this._disableDatepicker(t):this._enableDatepicker(t)),this._attachments(e(t),h),this._autoSize(h),this._setDate(h,a),this._updateAlternate(h),this._updateDatepicker(h))))},_changeDatepicker:function(e,t,i){this._optionDatepicker(e,t,i)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var i=this._getInst(e);i&&(this._setDate(i,t),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(e,t){var i=this._getInst(e);return i&&!i.inline&&this._setDateFromField(i,t),i?this._getDate(i):null},_doKeyDown:function(t){var i,n,s,a=e.datepicker._getInst(t.target),o=!0,r=a.dpDiv.is(".ui-datepicker-rtl");if(a._keyEvent=!0,e.datepicker._datepickerShowing)switch(t.keyCode){case 9:e.datepicker._hideDatepicker(),o=!1;break;case 13:return s=e("td."+e.datepicker._dayOverClass+":not(."+e.datepicker._currentClass+")",a.dpDiv),s[0]&&e.datepicker._selectDay(t.target,a.selectedMonth,a.selectedYear,s[0]),i=e.datepicker._get(a,"onSelect"),i?(n=e.datepicker._formatDate(a),i.apply(a.input?a.input[0]:null,[n,a])):e.datepicker._hideDatepicker(),!1;case 27:e.datepicker._hideDatepicker();break;case 33:e.datepicker._adjustDate(t.target,t.ctrlKey?-e.datepicker._get(a,"stepBigMonths"):-e.datepicker._get(a,"stepMonths"),"M");break;case 34:e.datepicker._adjustDate(t.target,t.ctrlKey?+e.datepicker._get(a,"stepBigMonths"):+e.datepicker._get(a,"stepMonths"),"M");break;case 35:(t.ctrlKey||t.metaKey)&&e.datepicker._clearDate(t.target),o=t.ctrlKey||t.metaKey;break;case 36:(t.ctrlKey||t.metaKey)&&e.datepicker._gotoToday(t.target),o=t.ctrlKey||t.metaKey;break;case 37:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,r?1:-1,"D"),o=t.ctrlKey||t.metaKey,t.originalEvent.altKey&&e.datepicker._adjustDate(t.target,t.ctrlKey?-e.datepicker._get(a,"stepBigMonths"):-e.datepicker._get(a,"stepMonths"),"M");break;case 38:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,-7,"D"),o=t.ctrlKey||t.metaKey;break;case 39:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,r?-1:1,"D"),o=t.ctrlKey||t.metaKey,t.originalEvent.altKey&&e.datepicker._adjustDate(t.target,t.ctrlKey?+e.datepicker._get(a,"stepBigMonths"):+e.datepicker._get(a,"stepMonths"),"M");break;case 40:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,7,"D"),o=t.ctrlKey||t.metaKey;break;default:o=!1}else 36===t.keyCode&&t.ctrlKey?e.datepicker._showDatepicker(this):o=!1;o&&(t.preventDefault(),t.stopPropagation())},_doKeyPress:function(t){var i,n,s=e.datepicker._getInst(t.target);return e.datepicker._get(s,"constrainInput")?(i=e.datepicker._possibleChars(e.datepicker._get(s,"dateFormat")),
n=String.fromCharCode(null==t.charCode?t.keyCode:t.charCode),t.ctrlKey||t.metaKey||" ">n||!i||i.indexOf(n)>-1):void 0},_doKeyUp:function(t){var i,n=e.datepicker._getInst(t.target);if(n.input.val()!==n.lastVal)try{i=e.datepicker.parseDate(e.datepicker._get(n,"dateFormat"),n.input?n.input.val():null,e.datepicker._getFormatConfig(n)),i&&(e.datepicker._setDateFromField(n),e.datepicker._updateAlternate(n),e.datepicker._updateDatepicker(n))}catch(s){}return!0},_showDatepicker:function(t){if(t=t.target||t,"input"!==t.nodeName.toLowerCase()&&(t=e("input",t.parentNode)[0]),!e.datepicker._isDisabledDatepicker(t)&&e.datepicker._lastInput!==t){var n,s,a,r,l,h,u;n=e.datepicker._getInst(t),e.datepicker._curInst&&e.datepicker._curInst!==n&&(e.datepicker._curInst.dpDiv.stop(!0,!0),n&&e.datepicker._datepickerShowing&&e.datepicker._hideDatepicker(e.datepicker._curInst.input[0])),s=e.datepicker._get(n,"beforeShow"),a=s?s.apply(t,[t,n]):{},a!==!1&&(o(n.settings,a),n.lastVal=null,e.datepicker._lastInput=t,e.datepicker._setDateFromField(n),e.datepicker._inDialog&&(t.value=""),e.datepicker._pos||(e.datepicker._pos=e.datepicker._findPos(t),e.datepicker._pos[1]+=t.offsetHeight),r=!1,e(t).parents().each(function(){return r|="fixed"===e(this).css("position"),!r}),l={left:e.datepicker._pos[0],top:e.datepicker._pos[1]},e.datepicker._pos=null,n.dpDiv.empty(),n.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),e.datepicker._updateDatepicker(n),l=e.datepicker._checkOffset(n,l,r),n.dpDiv.css({position:e.datepicker._inDialog&&e.blockUI?"static":r?"fixed":"absolute",display:"none",left:l.left+"px",top:l.top+"px"}),n.inline||(h=e.datepicker._get(n,"showAnim"),u=e.datepicker._get(n,"duration"),n.dpDiv.css("z-index",i(e(t))+1),e.datepicker._datepickerShowing=!0,e.effects&&e.effects.effect[h]?n.dpDiv.show(h,e.datepicker._get(n,"showOptions"),u):n.dpDiv[h||"show"](h?u:null),e.datepicker._shouldFocusInput(n)&&n.input.trigger("focus"),e.datepicker._curInst=n))}},_updateDatepicker:function(t){this.maxRows=4,g=t,t.dpDiv.empty().append(this._generateHTML(t)),this._attachHandlers(t);var i,n=this._getNumberOfMonths(t),s=n[1],o=17,r=t.dpDiv.find("."+this._dayOverClass+" a");r.length>0&&a.apply(r.get(0)),t.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),s>1&&t.dpDiv.addClass("ui-datepicker-multi-"+s).css("width",o*s+"em"),t.dpDiv[(1!==n[0]||1!==n[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),t.dpDiv[(this._get(t,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),t===e.datepicker._curInst&&e.datepicker._datepickerShowing&&e.datepicker._shouldFocusInput(t)&&t.input.trigger("focus"),t.yearshtml&&(i=t.yearshtml,setTimeout(function(){i===t.yearshtml&&t.yearshtml&&t.dpDiv.find("select.ui-datepicker-year:first").replaceWith(t.yearshtml),i=t.yearshtml=null},0))},_shouldFocusInput:function(e){return e.input&&e.input.is(":visible")&&!e.input.is(":disabled")&&!e.input.is(":focus")},_checkOffset:function(t,i,n){var s=t.dpDiv.outerWidth(),a=t.dpDiv.outerHeight(),o=t.input?t.input.outerWidth():0,r=t.input?t.input.outerHeight():0,l=document.documentElement.clientWidth+(n?0:e(document).scrollLeft()),h=document.documentElement.clientHeight+(n?0:e(document).scrollTop());return i.left-=this._get(t,"isRTL")?s-o:0,i.left-=n&&i.left===t.input.offset().left?e(document).scrollLeft():0,i.top-=n&&i.top===t.input.offset().top+r?e(document).scrollTop():0,i.left-=Math.min(i.left,i.left+s>l&&l>s?Math.abs(i.left+s-l):0),i.top-=Math.min(i.top,i.top+a>h&&h>a?Math.abs(a+r):0),i},_findPos:function(t){for(var i,n=this._getInst(t),s=this._get(n,"isRTL");t&&("hidden"===t.type||1!==t.nodeType||e.expr.filters.hidden(t));)t=t[s?"previousSibling":"nextSibling"];return i=e(t).offset(),[i.left,i.top]},_hideDatepicker:function(t){var i,n,s,a,o=this._curInst;!o||t&&o!==e.data(t,"datepicker")||this._datepickerShowing&&(i=this._get(o,"showAnim"),n=this._get(o,"duration"),s=function(){e.datepicker._tidyDialog(o)},e.effects&&(e.effects.effect[i]||e.effects[i])?o.dpDiv.hide(i,e.datepicker._get(o,"showOptions"),n,s):o.dpDiv["slideDown"===i?"slideUp":"fadeIn"===i?"fadeOut":"hide"](i?n:null,s),i||s(),this._datepickerShowing=!1,a=this._get(o,"onClose"),a&&a.apply(o.input?o.input[0]:null,[o.input?o.input.val():"",o]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),e.blockUI&&(e.unblockUI(),e("body").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar")},_checkExternalClick:function(t){if(e.datepicker._curInst){var i=e(t.target),n=e.datepicker._getInst(i[0]);(i[0].id!==e.datepicker._mainDivId&&0===i.parents("#"+e.datepicker._mainDivId).length&&!i.hasClass(e.datepicker.markerClassName)&&!i.closest("."+e.datepicker._triggerClass).length&&e.datepicker._datepickerShowing&&(!e.datepicker._inDialog||!e.blockUI)||i.hasClass(e.datepicker.markerClassName)&&e.datepicker._curInst!==n)&&e.datepicker._hideDatepicker()}},_adjustDate:function(t,i,n){var s=e(t),a=this._getInst(s[0]);this._isDisabledDatepicker(s[0])||(this._adjustInstDate(a,i+("M"===n?this._get(a,"showCurrentAtPos"):0),n),this._updateDatepicker(a))},_gotoToday:function(t){var i,n=e(t),s=this._getInst(n[0]);this._get(s,"gotoCurrent")&&s.currentDay?(s.selectedDay=s.currentDay,s.drawMonth=s.selectedMonth=s.currentMonth,s.drawYear=s.selectedYear=s.currentYear):(i=new Date,s.selectedDay=i.getDate(),s.drawMonth=s.selectedMonth=i.getMonth(),s.drawYear=s.selectedYear=i.getFullYear()),this._notifyChange(s),this._adjustDate(n)},_selectMonthYear:function(t,i,n){var s=e(t),a=this._getInst(s[0]);a["selected"+("M"===n?"Month":"Year")]=a["draw"+("M"===n?"Month":"Year")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(a),this._adjustDate(s)},_selectDay:function(t,i,n,s){var a,o=e(t);e(s).hasClass(this._unselectableClass)||this._isDisabledDatepicker(o[0])||(a=this._getInst(o[0]),a.selectedDay=a.currentDay=e("a",s).html(),a.selectedMonth=a.currentMonth=i,a.selectedYear=a.currentYear=n,this._selectDate(t,this._formatDate(a,a.currentDay,a.currentMonth,a.currentYear)))},_clearDate:function(t){var i=e(t);this._selectDate(i,"")},_selectDate:function(t,i){var n,s=e(t),a=this._getInst(s[0]);i=null!=i?i:this._formatDate(a),a.input&&a.input.val(i),this._updateAlternate(a),n=this._get(a,"onSelect"),n?n.apply(a.input?a.input[0]:null,[i,a]):a.input&&a.input.trigger("change"),a.inline?this._updateDatepicker(a):(this._hideDatepicker(),this._lastInput=a.input[0],"object"!=typeof a.input[0]&&a.input.trigger("focus"),this._lastInput=null)},_updateAlternate:function(t){var i,n,s,a=this._get(t,"altField");a&&(i=this._get(t,"altFormat")||this._get(t,"dateFormat"),n=this._getDate(t),s=this.formatDate(i,n,this._getFormatConfig(t)),e(a).val(s))},noWeekends:function(e){var t=e.getDay();return[t>0&&6>t,""]},iso8601Week:function(e){var t,i=new Date(e.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),t=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((t-i)/864e5)/7)+1},parseDate:function(t,i,n){if(null==t||null==i)throw"Invalid arguments";if(i="object"==typeof i?""+i:i+"",""===i)return null;var s,a,o,r,l=0,h=(n?n.shortYearCutoff:null)||this._defaults.shortYearCutoff,u="string"!=typeof h?h:(new Date).getFullYear()%100+parseInt(h,10),c=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,d=(n?n.dayNames:null)||this._defaults.dayNames,p=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,f=(n?n.monthNames:null)||this._defaults.monthNames,m=-1,g=-1,v=-1,b=-1,y=!1,_=function(e){var i=t.length>s+1&&t.charAt(s+1)===e;return i&&s++,i},w=function(e){var t=_(e),n="@"===e?14:"!"===e?20:"y"===e&&t?4:"o"===e?3:2,s="y"===e?n:1,a=RegExp("^\\d{"+s+","+n+"}"),o=i.substring(l).match(a);if(!o)throw"Missing number at position "+l;return l+=o[0].length,parseInt(o[0],10)},x=function(t,n,s){var a=-1,o=e.map(_(t)?s:n,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)});if(e.each(o,function(e,t){var n=t[1];return i.substr(l,n.length).toLowerCase()===n.toLowerCase()?(a=t[0],l+=n.length,!1):void 0}),-1!==a)return a+1;throw"Unknown name at position "+l},C=function(){if(i.charAt(l)!==t.charAt(s))throw"Unexpected literal at position "+l;l++};for(s=0;t.length>s;s++)if(y)"'"!==t.charAt(s)||_("'")?C():y=!1;else switch(t.charAt(s)){case"d":v=w("d");break;case"D":x("D",c,d);break;case"o":b=w("o");break;case"m":g=w("m");break;case"M":g=x("M",p,f);break;case"y":m=w("y");break;case"@":r=new Date(w("@")),m=r.getFullYear(),g=r.getMonth()+1,v=r.getDate();break;case"!":r=new Date((w("!")-this._ticksTo1970)/1e4),m=r.getFullYear(),g=r.getMonth()+1,v=r.getDate();break;case"'":_("'")?C():y=!0;break;default:C()}if(i.length>l&&(o=i.substr(l),!/^\s+/.test(o)))throw"Extra/unparsed characters found in date: "+o;if(-1===m?m=(new Date).getFullYear():100>m&&(m+=(new Date).getFullYear()-(new Date).getFullYear()%100+(u>=m?0:-100)),b>-1)for(g=1,v=b;a=this._getDaysInMonth(m,g-1),!(a>=v);)g++,v-=a;if(r=this._daylightSavingAdjust(new Date(m,g-1,v)),r.getFullYear()!==m||r.getMonth()+1!==g||r.getDate()!==v)throw"Invalid date";return r},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:864e9*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(e,t,i){if(!t)return"";var n,s=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,a=(i?i.dayNames:null)||this._defaults.dayNames,o=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,r=(i?i.monthNames:null)||this._defaults.monthNames,l=function(t){var i=e.length>n+1&&e.charAt(n+1)===t;return i&&n++,i},h=function(e,t,i){var n=""+t;if(l(e))for(;i>n.length;)n="0"+n;return n},u=function(e,t,i,n){return l(e)?n[t]:i[t]},c="",d=!1;if(t)for(n=0;e.length>n;n++)if(d)"'"!==e.charAt(n)||l("'")?c+=e.charAt(n):d=!1;else switch(e.charAt(n)){case"d":c+=h("d",t.getDate(),2);break;case"D":c+=u("D",t.getDay(),s,a);break;case"o":c+=h("o",Math.round((new Date(t.getFullYear(),t.getMonth(),t.getDate()).getTime()-new Date(t.getFullYear(),0,0).getTime())/864e5),3);break;case"m":c+=h("m",t.getMonth()+1,2);break;case"M":c+=u("M",t.getMonth(),o,r);break;case"y":c+=l("y")?t.getFullYear():(10>t.getFullYear()%100?"0":"")+t.getFullYear()%100;break;case"@":c+=t.getTime();break;case"!":c+=1e4*t.getTime()+this._ticksTo1970;break;case"'":l("'")?c+="'":d=!0;break;default:c+=e.charAt(n)}return c},_possibleChars:function(e){var t,i="",n=!1,s=function(i){var n=e.length>t+1&&e.charAt(t+1)===i;return n&&t++,n};for(t=0;e.length>t;t++)if(n)"'"!==e.charAt(t)||s("'")?i+=e.charAt(t):n=!1;else switch(e.charAt(t)){case"d":case"m":case"y":case"@":i+="0123456789";break;case"D":case"M":return null;case"'":s("'")?i+="'":n=!0;break;default:i+=e.charAt(t)}return i},_get:function(e,t){return void 0!==e.settings[t]?e.settings[t]:this._defaults[t]},_setDateFromField:function(e,t){if(e.input.val()!==e.lastVal){var i=this._get(e,"dateFormat"),n=e.lastVal=e.input?e.input.val():null,s=this._getDefaultDate(e),a=s,o=this._getFormatConfig(e);try{a=this.parseDate(i,n,o)||s}catch(r){n=t?"":n}e.selectedDay=a.getDate(),e.drawMonth=e.selectedMonth=a.getMonth(),e.drawYear=e.selectedYear=a.getFullYear(),e.currentDay=n?a.getDate():0,e.currentMonth=n?a.getMonth():0,e.currentYear=n?a.getFullYear():0,this._adjustInstDate(e)}},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,"defaultDate"),new Date))},_determineDate:function(t,i,n){var s=function(e){var t=new Date;return t.setDate(t.getDate()+e),t},a=function(i){try{return e.datepicker.parseDate(e.datepicker._get(t,"dateFormat"),i,e.datepicker._getFormatConfig(t))}catch(n){}for(var s=(i.toLowerCase().match(/^c/)?e.datepicker._getDate(t):null)||new Date,a=s.getFullYear(),o=s.getMonth(),r=s.getDate(),l=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,h=l.exec(i);h;){switch(h[2]||"d"){case"d":case"D":r+=parseInt(h[1],10);break;case"w":case"W":r+=7*parseInt(h[1],10);break;case"m":case"M":o+=parseInt(h[1],10),r=Math.min(r,e.datepicker._getDaysInMonth(a,o));break;case"y":case"Y":a+=parseInt(h[1],10),r=Math.min(r,e.datepicker._getDaysInMonth(a,o))}h=l.exec(i)}return new Date(a,o,r)},o=null==i||""===i?n:"string"==typeof i?a(i):"number"==typeof i?isNaN(i)?n:s(i):new Date(i.getTime());return o=o&&"Invalid Date"==""+o?n:o,o&&(o.setHours(0),o.setMinutes(0),o.setSeconds(0),o.setMilliseconds(0)),this._daylightSavingAdjust(o)},_daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},_setDate:function(e,t,i){var n=!t,s=e.selectedMonth,a=e.selectedYear,o=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=o.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=o.getMonth(),e.drawYear=e.selectedYear=e.currentYear=o.getFullYear(),s===e.selectedMonth&&a===e.selectedYear||i||this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(n?"":this._formatDate(e))},_getDate:function(e){var t=!e.currentYear||e.input&&""===e.input.val()?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return t},_attachHandlers:function(t){var i=this._get(t,"stepMonths"),n="#"+t.id.replace(/\\\\/g,"\\");t.dpDiv.find("[data-handler]").map(function(){var t={prev:function(){e.datepicker._adjustDate(n,-i,"M")},next:function(){e.datepicker._adjustDate(n,+i,"M")},hide:function(){e.datepicker._hideDatepicker()},today:function(){e.datepicker._gotoToday(n)},selectDay:function(){return e.datepicker._selectDay(n,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return e.datepicker._selectMonthYear(n,this,"M"),!1},selectYear:function(){return e.datepicker._selectMonthYear(n,this,"Y"),!1}};e(this).on(this.getAttribute("data-event"),t[this.getAttribute("data-handler")])})},_generateHTML:function(e){var t,i,n,s,a,o,r,l,h,u,c,d,p,f,m,g,v,b,y,_,w,x,C,k,T,D,S,P,M,I,E,z,N,A,H,O,L,W,F,B=new Date,R=this._daylightSavingAdjust(new Date(B.getFullYear(),B.getMonth(),B.getDate())),j=this._get(e,"isRTL"),q=this._get(e,"showButtonPanel"),Y=this._get(e,"hideIfNoPrevNext"),G=this._get(e,"navigationAsDateFormat"),V=this._getNumberOfMonths(e),X=this._get(e,"showCurrentAtPos"),K=this._get(e,"stepMonths"),$=1!==V[0]||1!==V[1],U=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),Q=this._getMinMaxDate(e,"min"),J=this._getMinMaxDate(e,"max"),Z=e.drawMonth-X,ee=e.drawYear;if(0>Z&&(Z+=12,ee--),J)for(t=this._daylightSavingAdjust(new Date(J.getFullYear(),J.getMonth()-V[0]*V[1]+1,J.getDate())),t=Q&&Q>t?Q:t;this._daylightSavingAdjust(new Date(ee,Z,1))>t;)Z--,0>Z&&(Z=11,ee--);for(e.drawMonth=Z,e.drawYear=ee,i=this._get(e,"prevText"),i=G?this.formatDate(i,this._daylightSavingAdjust(new Date(ee,Z-K,1)),this._getFormatConfig(e)):i,n=this._canAdjustMonth(e,-1,ee,Z)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(j?"e":"w")+"'>"+i+"</span></a>":Y?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(j?"e":"w")+"'>"+i+"</span></a>",s=this._get(e,"nextText"),s=G?this.formatDate(s,this._daylightSavingAdjust(new Date(ee,Z+K,1)),this._getFormatConfig(e)):s,a=this._canAdjustMonth(e,1,ee,Z)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='"+s+"'><span class='ui-icon ui-icon-circle-triangle-"+(j?"w":"e")+"'>"+s+"</span></a>":Y?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+s+"'><span class='ui-icon ui-icon-circle-triangle-"+(j?"w":"e")+"'>"+s+"</span></a>",o=this._get(e,"currentText"),r=this._get(e,"gotoCurrent")&&e.currentDay?U:R,o=G?this.formatDate(o,r,this._getFormatConfig(e)):o,l=e.inline?"":"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(e,"closeText")+"</button>",h=q?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(j?l:"")+(this._isInRange(e,r)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>"+o+"</button>":"")+(j?"":l)+"</div>":"",u=parseInt(this._get(e,"firstDay"),10),u=isNaN(u)?0:u,c=this._get(e,"showWeek"),d=this._get(e,"dayNames"),p=this._get(e,"dayNamesMin"),f=this._get(e,"monthNames"),m=this._get(e,"monthNamesShort"),g=this._get(e,"beforeShowDay"),v=this._get(e,"showOtherMonths"),b=this._get(e,"selectOtherMonths"),y=this._getDefaultDate(e),_="",x=0;V[0]>x;x++){for(C="",this.maxRows=4,k=0;V[1]>k;k++){if(T=this._daylightSavingAdjust(new Date(ee,Z,e.selectedDay)),D=" ui-corner-all",S="",$){if(S+="<div class='ui-datepicker-group",V[1]>1)switch(k){case 0:S+=" ui-datepicker-group-first",D=" ui-corner-"+(j?"right":"left");break;case V[1]-1:S+=" ui-datepicker-group-last",D=" ui-corner-"+(j?"left":"right");break;default:S+=" ui-datepicker-group-middle",D=""}S+="'>"}for(S+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+D+"'>"+(/all|left/.test(D)&&0===x?j?a:n:"")+(/all|right/.test(D)&&0===x?j?n:a:"")+this._generateMonthYearHeader(e,Z,ee,Q,J,x>0||k>0,f,m)+"</div><table class='ui-datepicker-calendar'><thead><tr>",P=c?"<th class='ui-datepicker-week-col'>"+this._get(e,"weekHeader")+"</th>":"",w=0;7>w;w++)M=(w+u)%7,P+="<th scope='col'"+((w+u+6)%7>=5?" class='ui-datepicker-week-end'":"")+"><span title='"+d[M]+"'>"+p[M]+"</span></th>";for(S+=P+"</tr></thead><tbody>",I=this._getDaysInMonth(ee,Z),ee===e.selectedYear&&Z===e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,I)),E=(this._getFirstDayOfMonth(ee,Z)-u+7)%7,z=Math.ceil((E+I)/7),N=$&&this.maxRows>z?this.maxRows:z,this.maxRows=N,A=this._daylightSavingAdjust(new Date(ee,Z,1-E)),H=0;N>H;H++){for(S+="<tr>",O=c?"<td class='ui-datepicker-week-col'>"+this._get(e,"calculateWeek")(A)+"</td>":"",w=0;7>w;w++)L=g?g.apply(e.input?e.input[0]:null,[A]):[!0,""],W=A.getMonth()!==Z,F=W&&!b||!L[0]||Q&&Q>A||J&&A>J,O+="<td class='"+((w+u+6)%7>=5?" ui-datepicker-week-end":"")+(W?" ui-datepicker-other-month":"")+(A.getTime()===T.getTime()&&Z===e.selectedMonth&&e._keyEvent||y.getTime()===A.getTime()&&y.getTime()===T.getTime()?" "+this._dayOverClass:"")+(F?" "+this._unselectableClass+" ui-state-disabled":"")+(W&&!v?"":" "+L[1]+(A.getTime()===U.getTime()?" "+this._currentClass:"")+(A.getTime()===R.getTime()?" ui-datepicker-today":""))+"'"+(W&&!v||!L[2]?"":" title='"+L[2].replace(/'/g,"&#39;")+"'")+(F?"":" data-handler='selectDay' data-event='click' data-month='"+A.getMonth()+"' data-year='"+A.getFullYear()+"'")+">"+(W&&!v?"&#xa0;":F?"<span class='ui-state-default'>"+A.getDate()+"</span>":"<a class='ui-state-default"+(A.getTime()===R.getTime()?" ui-state-highlight":"")+(A.getTime()===U.getTime()?" ui-state-active":"")+(W?" ui-priority-secondary":"")+"' href='#'>"+A.getDate()+"</a>")+"</td>",A.setDate(A.getDate()+1),A=this._daylightSavingAdjust(A);S+=O+"</tr>"}Z++,Z>11&&(Z=0,ee++),S+="</tbody></table>"+($?"</div>"+(V[0]>0&&k===V[1]-1?"<div class='ui-datepicker-row-break'></div>":""):""),C+=S}_+=C}return _+=h,e._keyEvent=!1,_},_generateMonthYearHeader:function(e,t,i,n,s,a,o,r){var l,h,u,c,d,p,f,m,g=this._get(e,"changeMonth"),v=this._get(e,"changeYear"),b=this._get(e,"showMonthAfterYear"),y="<div class='ui-datepicker-title'>",_="";if(a||!g)_+="<span class='ui-datepicker-month'>"+o[t]+"</span>";else{for(l=n&&n.getFullYear()===i,h=s&&s.getFullYear()===i,_+="<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",u=0;12>u;u++)(!l||u>=n.getMonth())&&(!h||s.getMonth()>=u)&&(_+="<option value='"+u+"'"+(u===t?" selected='selected'":"")+">"+r[u]+"</option>");_+="</select>"}if(b||(y+=_+(!a&&g&&v?"":"&#xa0;")),!e.yearshtml)if(e.yearshtml="",a||!v)y+="<span class='ui-datepicker-year'>"+i+"</span>";else{for(c=this._get(e,"yearRange").split(":"),d=(new Date).getFullYear(),p=function(e){var t=e.match(/c[+\-].*/)?i+parseInt(e.substring(1),10):e.match(/[+\-].*/)?d+parseInt(e,10):parseInt(e,10);return isNaN(t)?d:t},f=p(c[0]),m=Math.max(f,p(c[1]||"")),f=n?Math.max(f,n.getFullYear()):f,m=s?Math.min(m,s.getFullYear()):m,e.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";m>=f;f++)e.yearshtml+="<option value='"+f+"'"+(f===i?" selected='selected'":"")+">"+f+"</option>";e.yearshtml+="</select>",y+=e.yearshtml,e.yearshtml=null}return y+=this._get(e,"yearSuffix"),b&&(y+=(!a&&g&&v?"":"&#xa0;")+_),y+="</div>"},_adjustInstDate:function(e,t,i){var n=e.selectedYear+("Y"===i?t:0),s=e.selectedMonth+("M"===i?t:0),a=Math.min(e.selectedDay,this._getDaysInMonth(n,s))+("D"===i?t:0),o=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(n,s,a)));e.selectedDay=o.getDate(),e.drawMonth=e.selectedMonth=o.getMonth(),e.drawYear=e.selectedYear=o.getFullYear(),("M"===i||"Y"===i)&&this._notifyChange(e)},_restrictMinMax:function(e,t){var i=this._getMinMaxDate(e,"min"),n=this._getMinMaxDate(e,"max"),s=i&&i>t?i:t;return n&&s>n?n:s},_notifyChange:function(e){var t=this._get(e,"onChangeMonthYear");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,"numberOfMonths");return null==t?[1,1]:"number"==typeof t?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+"Date"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return new Date(e,t,1).getDay()},_canAdjustMonth:function(e,t,i,n){var s=this._getNumberOfMonths(e),a=this._daylightSavingAdjust(new Date(i,n+(0>t?t:s[0]*s[1]),1));return 0>t&&a.setDate(this._getDaysInMonth(a.getFullYear(),a.getMonth())),this._isInRange(e,a)},_isInRange:function(e,t){var i,n,s=this._getMinMaxDate(e,"min"),a=this._getMinMaxDate(e,"max"),o=null,r=null,l=this._get(e,"yearRange");return l&&(i=l.split(":"),n=(new Date).getFullYear(),o=parseInt(i[0],10),r=parseInt(i[1],10),i[0].match(/[+\-].*/)&&(o+=n),i[1].match(/[+\-].*/)&&(r+=n)),(!s||t.getTime()>=s.getTime())&&(!a||t.getTime()<=a.getTime())&&(!o||t.getFullYear()>=o)&&(!r||r>=t.getFullYear())},_getFormatConfig:function(e){var t=this._get(e,"shortYearCutoff");return t="string"!=typeof t?t:(new Date).getFullYear()%100+parseInt(t,10),{shortYearCutoff:t,dayNamesShort:this._get(e,"dayNamesShort"),dayNames:this._get(e,"dayNames"),monthNamesShort:this._get(e,"monthNamesShort"),monthNames:this._get(e,"monthNames")}},_formatDate:function(e,t,i,n){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var s=t?"object"==typeof t?t:this._daylightSavingAdjust(new Date(n,i,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,"dateFormat"),s,this._getFormatConfig(e))}}),e.fn.datepicker=function(t){if(!this.length)return this;e.datepicker.initialized||(e(document).on("mousedown",e.datepicker._checkExternalClick),e.datepicker.initialized=!0),0===e("#"+e.datepicker._mainDivId).length&&e("body").append(e.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return"string"!=typeof t||"isDisabled"!==t&&"getDate"!==t&&"widget"!==t?"option"===t&&2===arguments.length&&"string"==typeof arguments[1]?e.datepicker["_"+t+"Datepicker"].apply(e.datepicker,[this[0]].concat(i)):this.each(function(){"string"==typeof t?e.datepicker["_"+t+"Datepicker"].apply(e.datepicker,[this].concat(i)):e.datepicker._attachDatepicker(this,t)}):e.datepicker["_"+t+"Datepicker"].apply(e.datepicker,[this[0]].concat(i))},e.datepicker=new n,e.datepicker.initialized=!1,e.datepicker.uuid=(new Date).getTime(),e.datepicker.version="1.12.0",e.datepicker,e.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());var v=!1;e(document).on("mouseup",function(){v=!1}),e.widget("ui.mouse",{version:"1.12.0",options:{cancel:"input, textarea, button, select, option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.on("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).on("click."+this.widgetName,function(i){return!0===e.data(i.target,t.widgetName+".preventClickEvent")?(e.removeData(i.target,t.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):void 0}),this.started=!1},_mouseDestroy:function(){this.element.off("."+this.widgetName),this._mouseMoveDelegate&&this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(!v){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var i=this,n=1===t.which,s=!("string"!=typeof this.options.cancel||!t.target.nodeName)&&e(t.target).closest(this.options.cancel).length;return!(n&&!s&&this._mouseCapture(t))||(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){i.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(t)!==!1,!this._mouseStarted)?(t.preventDefault(),!0):(!0===e.data(t.target,this.widgetName+".preventClickEvent")&&e.removeData(t.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return i._mouseMove(e)},this._mouseUpDelegate=function(e){return i._mouseUp(e)},this.document.on("mousemove."+this.widgetName,this._mouseMoveDelegate).on("mouseup."+this.widgetName,this._mouseUpDelegate),t.preventDefault(),v=!0,!0))}},_mouseMove:function(t){if(this._mouseMoved){if(e.ui.ie&&(!document.documentMode||9>document.documentMode)&&!t.button)return this._mouseUp(t);if(!t.which)if(t.originalEvent.altKey||t.originalEvent.ctrlKey||t.originalEvent.metaKey||t.originalEvent.shiftKey)this.ignoreMissingWhich=!0;else if(!this.ignoreMissingWhich)return this._mouseUp(t)}return(t.which||t.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted)},_mouseUp:function(t){this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),this._mouseDelayTimer&&(clearTimeout(this._mouseDelayTimer),delete this._mouseDelayTimer),this.ignoreMissingWhich=!1,v=!1,t.preventDefault()},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}}),e.ui.plugin={add:function(t,i,n){var s,a=e.ui[t].prototype;for(s in n)a.plugins[s]=a.plugins[s]||[],a.plugins[s].push([i,n[s]])},call:function(e,t,i,n){var s,a=e.plugins[t];if(a&&(n||e.element[0].parentNode&&11!==e.element[0].parentNode.nodeType))for(s=0;a.length>s;s++)e.options[a[s][0]]&&a[s][1].apply(e.element,i)}},e.ui.safeBlur=function(t){t&&"body"!==t.nodeName.toLowerCase()&&e(t).trigger("blur")},e.widget("ui.draggable",e.ui.mouse,{version:"1.12.0",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this._addClass("ui-draggable"),this._setHandleClassName(),this._mouseInit()},_setOption:function(e,t){this._super(e,t),"handle"===e&&(this._removeHandleClassName(),this._setHandleClassName())},_destroy:function(){return(this.helper||this.element).is(".ui-draggable-dragging")?void(this.destroyOnClear=!0):(this._removeHandleClassName(),void this._mouseDestroy())},_mouseCapture:function(t){var i=this.options;return this._blurActiveElement(t),!(this.helper||i.disabled||e(t.target).closest(".ui-resizable-handle").length>0)&&(this.handle=this._getHandle(t),!!this.handle&&(this._blockFrames(i.iframeFix===!0?"iframe":i.iframeFix),!0))},_blockFrames:function(t){this.iframeBlocks=this.document.find(t).map(function(){var t=e(this);return e("<div>").css("position","absolute").appendTo(t.parent()).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()).offset(t.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_blurActiveElement:function(t){var i=e.ui.safeActiveElement(this.document[0]),n=e(t.target);this._getHandle(t)&&n.closest(i).length||e.ui.safeBlur(i)},_mouseStart:function(t){var i=this.options;return this.helper=this._createHelper(t),this._addClass(this.helper,"ui-draggable-dragging"),this._cacheHelperProportions(),e.ui.ddmanager&&(e.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=this.helper.parents().filter(function(){return"fixed"===e(this).css("position")}).length>0,this.positionAbs=this.element.offset(),this._refreshOffsets(t),this.originalPosition=this.position=this._generatePosition(t,!1),this.originalPageX=t.pageX,this.originalPageY=t.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger("start",t)===!1?(this._clear(),!1):(this._cacheHelperProportions(),e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this._mouseDrag(t,!0),e.ui.ddmanager&&e.ui.ddmanager.dragStart(this,t),!0)},_refreshOffsets:function(e){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:e.pageX-this.offset.left,top:e.pageY-this.offset.top}},_mouseDrag:function(t,i){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(t,!0),this.positionAbs=this._convertPositionTo("absolute"),!i){var n=this._uiHash();if(this._trigger("drag",t,n)===!1)return this._mouseUp(new e.Event("mouseup",t)),!1;this.position=n.position}return this.helper[0].style.left=this.position.left+"px",this.helper[0].style.top=this.position.top+"px",e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var i=this,n=!1;return e.ui.ddmanager&&!this.options.dropBehaviour&&(n=e.ui.ddmanager.drop(this,t)),this.dropped&&(n=this.dropped,this.dropped=!1),"invalid"===this.options.revert&&!n||"valid"===this.options.revert&&n||this.options.revert===!0||e.isFunction(this.options.revert)&&this.options.revert.call(this.element,n)?e(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger("stop",t)!==!1&&i._clear()}):this._trigger("stop",t)!==!1&&this._clear(),!1},_mouseUp:function(t){return this._unblockFrames(),e.ui.ddmanager&&e.ui.ddmanager.dragStop(this,t),this.handleElement.is(t.target)&&this.element.trigger("focus"),e.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp(new e.Event("mouseup",{target:this.element[0]})):this._clear(),this},_getHandle:function(t){return!this.options.handle||!!e(t.target).closest(this.element.find(this.options.handle)).length},_setHandleClassName:function(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this._addClass(this.handleElement,"ui-draggable-handle");
},_removeHandleClassName:function(){this._removeClass(this.handleElement,"ui-draggable-handle")},_createHelper:function(t){var i=this.options,n=e.isFunction(i.helper),s=n?e(i.helper.apply(this.element[0],[t])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element;return s.parents("body").length||s.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),n&&s[0]===this.element[0]&&this._setPositionRelative(),s[0]===this.element[0]||/(fixed|absolute)/.test(s.css("position"))||s.css("position","absolute"),s},_setPositionRelative:function(){/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative")},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_isRootNode:function(e){return/(html|body)/i.test(e.tagName)||e===this.document[0]},_getParentOffset:function(){var t=this.offsetParent.offset(),i=this.document[0];return"absolute"===this.cssPosition&&this.scrollParent[0]!==i&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(t={top:0,left:0}),{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"!==this.cssPosition)return{top:0,left:0};var e=this.element.position(),t=this._isRootNode(this.scrollParent[0]);return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+(t?0:this.scrollParent.scrollTop()),left:e.left-(parseInt(this.helper.css("left"),10)||0)+(t?0:this.scrollParent.scrollLeft())}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t,i,n,s=this.options,a=this.document[0];return this.relativeContainer=null,s.containment?"window"===s.containment?void(this.containment=[e(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,e(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,e(window).scrollLeft()+e(window).width()-this.helperProportions.width-this.margins.left,e(window).scrollTop()+(e(window).height()||a.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):"document"===s.containment?void(this.containment=[0,0,e(a).width()-this.helperProportions.width-this.margins.left,(e(a).height()||a.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):s.containment.constructor===Array?void(this.containment=s.containment):("parent"===s.containment&&(s.containment=this.helper[0].parentNode),i=e(s.containment),n=i[0],void(n&&(t=/(scroll|auto)/.test(i.css("overflow")),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(t?Math.max(n.scrollWidth,n.offsetWidth):n.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(t?Math.max(n.scrollHeight,n.offsetHeight):n.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=i))):void(this.containment=null)},_convertPositionTo:function(e,t){t||(t=this.position);var i="absolute"===e?1:-1,n=this._isRootNode(this.scrollParent[0]);return{top:t.top+this.offset.relative.top*i+this.offset.parent.top*i-("fixed"===this.cssPosition?-this.offset.scroll.top:n?0:this.offset.scroll.top)*i,left:t.left+this.offset.relative.left*i+this.offset.parent.left*i-("fixed"===this.cssPosition?-this.offset.scroll.left:n?0:this.offset.scroll.left)*i}},_generatePosition:function(e,t){var i,n,s,a,o=this.options,r=this._isRootNode(this.scrollParent[0]),l=e.pageX,h=e.pageY;return r&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),t&&(this.containment&&(this.relativeContainer?(n=this.relativeContainer.offset(),i=[this.containment[0]+n.left,this.containment[1]+n.top,this.containment[2]+n.left,this.containment[3]+n.top]):i=this.containment,e.pageX-this.offset.click.left<i[0]&&(l=i[0]+this.offset.click.left),e.pageY-this.offset.click.top<i[1]&&(h=i[1]+this.offset.click.top),e.pageX-this.offset.click.left>i[2]&&(l=i[2]+this.offset.click.left),e.pageY-this.offset.click.top>i[3]&&(h=i[3]+this.offset.click.top)),o.grid&&(s=o.grid[1]?this.originalPageY+Math.round((h-this.originalPageY)/o.grid[1])*o.grid[1]:this.originalPageY,h=i?s-this.offset.click.top>=i[1]||s-this.offset.click.top>i[3]?s:s-this.offset.click.top>=i[1]?s-o.grid[1]:s+o.grid[1]:s,a=o.grid[0]?this.originalPageX+Math.round((l-this.originalPageX)/o.grid[0])*o.grid[0]:this.originalPageX,l=i?a-this.offset.click.left>=i[0]||a-this.offset.click.left>i[2]?a:a-this.offset.click.left>=i[0]?a-o.grid[0]:a+o.grid[0]:a),"y"===o.axis&&(l=this.originalPageX),"x"===o.axis&&(h=this.originalPageY)),{top:h-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.offset.scroll.top:r?0:this.offset.scroll.top),left:l-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.offset.scroll.left:r?0:this.offset.scroll.left)}},_clear:function(){this._removeClass(this.helper,"ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_trigger:function(t,i,n){return n=n||this._uiHash(),e.ui.plugin.call(this,t,[i,n,this],!0),/^(drag|start|stop)/.test(t)&&(this.positionAbs=this._convertPositionTo("absolute"),n.offset=this.positionAbs),e.Widget.prototype._trigger.call(this,t,i,n)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),e.ui.plugin.add("draggable","connectToSortable",{start:function(t,i,n){var s=e.extend({},i,{item:n.element});n.sortables=[],e(n.options.connectToSortable).each(function(){var i=e(this).sortable("instance");i&&!i.options.disabled&&(n.sortables.push(i),i.refreshPositions(),i._trigger("activate",t,s))})},stop:function(t,i,n){var s=e.extend({},i,{item:n.element});n.cancelHelperRemoval=!1,e.each(n.sortables,function(){var e=this;e.isOver?(e.isOver=0,n.cancelHelperRemoval=!0,e.cancelHelperRemoval=!1,e._storedCSS={position:e.placeholder.css("position"),top:e.placeholder.css("top"),left:e.placeholder.css("left")},e._mouseStop(t),e.options.helper=e.options._helper):(e.cancelHelperRemoval=!0,e._trigger("deactivate",t,s))})},drag:function(t,i,n){e.each(n.sortables,function(){var s=!1,a=this;a.positionAbs=n.positionAbs,a.helperProportions=n.helperProportions,a.offset.click=n.offset.click,a._intersectsWith(a.containerCache)&&(s=!0,e.each(n.sortables,function(){return this.positionAbs=n.positionAbs,this.helperProportions=n.helperProportions,this.offset.click=n.offset.click,this!==a&&this._intersectsWith(this.containerCache)&&e.contains(a.element[0],this.element[0])&&(s=!1),s})),s?(a.isOver||(a.isOver=1,n._parent=i.helper.parent(),a.currentItem=i.helper.appendTo(a.element).data("ui-sortable-item",!0),a.options._helper=a.options.helper,a.options.helper=function(){return i.helper[0]},t.target=a.currentItem[0],a._mouseCapture(t,!0),a._mouseStart(t,!0,!0),a.offset.click.top=n.offset.click.top,a.offset.click.left=n.offset.click.left,a.offset.parent.left-=n.offset.parent.left-a.offset.parent.left,a.offset.parent.top-=n.offset.parent.top-a.offset.parent.top,n._trigger("toSortable",t),n.dropped=a.element,e.each(n.sortables,function(){this.refreshPositions()}),n.currentItem=n.element,a.fromOutside=n),a.currentItem&&(a._mouseDrag(t),i.position=a.position)):a.isOver&&(a.isOver=0,a.cancelHelperRemoval=!0,a.options._revert=a.options.revert,a.options.revert=!1,a._trigger("out",t,a._uiHash(a)),a._mouseStop(t,!0),a.options.revert=a.options._revert,a.options.helper=a.options._helper,a.placeholder&&a.placeholder.remove(),i.helper.appendTo(n._parent),n._refreshOffsets(t),i.position=n._generatePosition(t,!0),n._trigger("fromSortable",t),n.dropped=!1,e.each(n.sortables,function(){this.refreshPositions()}))})}}),e.ui.plugin.add("draggable","cursor",{start:function(t,i,n){var s=e("body"),a=n.options;s.css("cursor")&&(a._cursor=s.css("cursor")),s.css("cursor",a.cursor)},stop:function(t,i,n){var s=n.options;s._cursor&&e("body").css("cursor",s._cursor)}}),e.ui.plugin.add("draggable","opacity",{start:function(t,i,n){var s=e(i.helper),a=n.options;s.css("opacity")&&(a._opacity=s.css("opacity")),s.css("opacity",a.opacity)},stop:function(t,i,n){var s=n.options;s._opacity&&e(i.helper).css("opacity",s._opacity)}}),e.ui.plugin.add("draggable","scroll",{start:function(e,t,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&"HTML"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset())},drag:function(t,i,n){var s=n.options,a=!1,o=n.scrollParentNotHidden[0],r=n.document[0];o!==r&&"HTML"!==o.tagName?(s.axis&&"x"===s.axis||(n.overflowOffset.top+o.offsetHeight-t.pageY<s.scrollSensitivity?o.scrollTop=a=o.scrollTop+s.scrollSpeed:t.pageY-n.overflowOffset.top<s.scrollSensitivity&&(o.scrollTop=a=o.scrollTop-s.scrollSpeed)),s.axis&&"y"===s.axis||(n.overflowOffset.left+o.offsetWidth-t.pageX<s.scrollSensitivity?o.scrollLeft=a=o.scrollLeft+s.scrollSpeed:t.pageX-n.overflowOffset.left<s.scrollSensitivity&&(o.scrollLeft=a=o.scrollLeft-s.scrollSpeed))):(s.axis&&"x"===s.axis||(t.pageY-e(r).scrollTop()<s.scrollSensitivity?a=e(r).scrollTop(e(r).scrollTop()-s.scrollSpeed):e(window).height()-(t.pageY-e(r).scrollTop())<s.scrollSensitivity&&(a=e(r).scrollTop(e(r).scrollTop()+s.scrollSpeed))),s.axis&&"y"===s.axis||(t.pageX-e(r).scrollLeft()<s.scrollSensitivity?a=e(r).scrollLeft(e(r).scrollLeft()-s.scrollSpeed):e(window).width()-(t.pageX-e(r).scrollLeft())<s.scrollSensitivity&&(a=e(r).scrollLeft(e(r).scrollLeft()+s.scrollSpeed)))),a!==!1&&e.ui.ddmanager&&!s.dropBehaviour&&e.ui.ddmanager.prepareOffsets(n,t)}}),e.ui.plugin.add("draggable","snap",{start:function(t,i,n){var s=n.options;n.snapElements=[],e(s.snap.constructor!==String?s.snap.items||":data(ui-draggable)":s.snap).each(function(){var t=e(this),i=t.offset();this!==n.element[0]&&n.snapElements.push({item:this,width:t.outerWidth(),height:t.outerHeight(),top:i.top,left:i.left})})},drag:function(t,i,n){var s,a,o,r,l,h,u,c,d,p,f=n.options,m=f.snapTolerance,g=i.offset.left,v=g+n.helperProportions.width,b=i.offset.top,y=b+n.helperProportions.height;for(d=n.snapElements.length-1;d>=0;d--)l=n.snapElements[d].left-n.margins.left,h=l+n.snapElements[d].width,u=n.snapElements[d].top-n.margins.top,c=u+n.snapElements[d].height,l-m>v||g>h+m||u-m>y||b>c+m||!e.contains(n.snapElements[d].item.ownerDocument,n.snapElements[d].item)?(n.snapElements[d].snapping&&n.options.snap.release&&n.options.snap.release.call(n.element,t,e.extend(n._uiHash(),{snapItem:n.snapElements[d].item})),n.snapElements[d].snapping=!1):("inner"!==f.snapMode&&(s=m>=Math.abs(u-y),a=m>=Math.abs(c-b),o=m>=Math.abs(l-v),r=m>=Math.abs(h-g),s&&(i.position.top=n._convertPositionTo("relative",{top:u-n.helperProportions.height,left:0}).top),a&&(i.position.top=n._convertPositionTo("relative",{top:c,left:0}).top),o&&(i.position.left=n._convertPositionTo("relative",{top:0,left:l-n.helperProportions.width}).left),r&&(i.position.left=n._convertPositionTo("relative",{top:0,left:h}).left)),p=s||a||o||r,"outer"!==f.snapMode&&(s=m>=Math.abs(u-b),a=m>=Math.abs(c-y),o=m>=Math.abs(l-g),r=m>=Math.abs(h-v),s&&(i.position.top=n._convertPositionTo("relative",{top:u,left:0}).top),a&&(i.position.top=n._convertPositionTo("relative",{top:c-n.helperProportions.height,left:0}).top),o&&(i.position.left=n._convertPositionTo("relative",{top:0,left:l}).left),r&&(i.position.left=n._convertPositionTo("relative",{top:0,left:h-n.helperProportions.width}).left)),!n.snapElements[d].snapping&&(s||a||o||r||p)&&n.options.snap.snap&&n.options.snap.snap.call(n.element,t,e.extend(n._uiHash(),{snapItem:n.snapElements[d].item})),n.snapElements[d].snapping=s||a||o||r||p)}}),e.ui.plugin.add("draggable","stack",{start:function(t,i,n){var s,a=n.options,o=e.makeArray(e(a.stack)).sort(function(t,i){return(parseInt(e(t).css("zIndex"),10)||0)-(parseInt(e(i).css("zIndex"),10)||0)});o.length&&(s=parseInt(e(o[0]).css("zIndex"),10)||0,e(o).each(function(t){e(this).css("zIndex",s+t)}),this.css("zIndex",s+o.length))}}),e.ui.plugin.add("draggable","zIndex",{start:function(t,i,n){var s=e(i.helper),a=n.options;s.css("zIndex")&&(a._zIndex=s.css("zIndex")),s.css("zIndex",a.zIndex)},stop:function(t,i,n){var s=n.options;s._zIndex&&e(i.helper).css("zIndex",s._zIndex)}}),e.ui.draggable,e.widget("ui.resizable",e.ui.mouse,{version:"1.12.0",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,classes:{"ui-resizable-se":"ui-icon ui-icon-gripsmall-diagonal-se"},containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_num:function(e){return parseFloat(e)||0},_isNumber:function(e){return!isNaN(parseFloat(e))},_hasScroll:function(t,i){if("hidden"===e(t).css("overflow"))return!1;var n=i&&"left"===i?"scrollLeft":"scrollTop",s=!1;return t[n]>0||(t[n]=1,s=t[n]>0,t[n]=0,s)},_create:function(){var t,i=this.options,n=this;this._addClass("ui-resizable"),e.extend(this,{_aspectRatio:!!i.aspectRatio,aspectRatio:i.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:i.helper||i.ghost||i.animate?i.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)&&(this.element.wrap(e("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.resizable("instance")),this.elementIsWrapper=!0,t={marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom"),marginLeft:this.originalElement.css("marginLeft")},this.element.css(t),this.originalElement.css("margin",0),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css(t),this._proportionallyResize()),this._setupHandles(),i.autoHide&&e(this.element).on("mouseenter",function(){i.disabled||(n._removeClass("ui-resizable-autohide"),n._handles.show())}).on("mouseleave",function(){i.disabled||n.resizing||(n._addClass("ui-resizable-autohide"),n._handles.hide())}),this._mouseInit()},_destroy:function(){this._mouseDestroy();var t,i=function(t){e(t).removeData("resizable").removeData("ui-resizable").off(".resizable").find(".ui-resizable-handle").remove()};return this.elementIsWrapper&&(i(this.element),t=this.element,this.originalElement.css({position:t.css("position"),width:t.outerWidth(),height:t.outerHeight(),top:t.css("top"),left:t.css("left")}).insertAfter(t),t.remove()),this.originalElement.css("resize",this.originalResizeStyle),i(this.originalElement),this},_setOption:function(e,t){switch(this._super(e,t),e){case"handles":this._removeHandles(),this._setupHandles()}},_setupHandles:function(){var t,i,n,s,a,o=this.options,r=this;if(this.handles=o.handles||(e(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this._handles=e(),this.handles.constructor===String)for("all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw"),n=this.handles.split(","),this.handles={},i=0;n.length>i;i++)t=e.trim(n[i]),s="ui-resizable-"+t,a=e("<div>"),this._addClass(a,"ui-resizable-handle "+s),a.css({zIndex:o.zIndex}),this.handles[t]=".ui-resizable-"+t,this.element.append(a);this._renderAxis=function(t){var i,n,s,a;t=t||this.element;for(i in this.handles)this.handles[i].constructor===String?this.handles[i]=this.element.children(this.handles[i]).first().show():(this.handles[i].jquery||this.handles[i].nodeType)&&(this.handles[i]=e(this.handles[i]),this._on(this.handles[i],{mousedown:r._mouseDown})),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)&&(n=e(this.handles[i],this.element),a=/sw|ne|nw|se|n|s/.test(i)?n.outerHeight():n.outerWidth(),s=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join(""),t.css(s,a),this._proportionallyResize()),this._handles=this._handles.add(this.handles[i])},this._renderAxis(this.element),this._handles=this._handles.add(this.element.find(".ui-resizable-handle")),this._handles.disableSelection(),this._handles.on("mouseover",function(){r.resizing||(this.className&&(a=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),r.axis=a&&a[1]?a[1]:"se")}),o.autoHide&&(this._handles.hide(),this._addClass("ui-resizable-autohide"))},_removeHandles:function(){this._handles.remove()},_mouseCapture:function(t){var i,n,s=!1;for(i in this.handles)n=e(this.handles[i])[0],(n===t.target||e.contains(n,t.target))&&(s=!0);return!this.options.disabled&&s},_mouseStart:function(t){var i,n,s,a=this.options,o=this.element;return this.resizing=!0,this._renderProxy(),i=this._num(this.helper.css("left")),n=this._num(this.helper.css("top")),a.containment&&(i+=e(a.containment).scrollLeft()||0,n+=e(a.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:i,top:n},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:o.width(),height:o.height()},this.originalSize=this._helper?{width:o.outerWidth(),height:o.outerHeight()}:{width:o.width(),height:o.height()},this.sizeDiff={width:o.outerWidth()-o.width(),height:o.outerHeight()-o.height()},this.originalPosition={left:i,top:n},this.originalMousePosition={left:t.pageX,top:t.pageY},this.aspectRatio="number"==typeof a.aspectRatio?a.aspectRatio:this.originalSize.width/this.originalSize.height||1,s=e(".ui-resizable-"+this.axis).css("cursor"),e("body").css("cursor","auto"===s?this.axis+"-resize":s),this._addClass("ui-resizable-resizing"),this._propagate("start",t),!0},_mouseDrag:function(t){var i,n,s=this.originalMousePosition,a=this.axis,o=t.pageX-s.left||0,r=t.pageY-s.top||0,l=this._change[a];return this._updatePrevProperties(),!!l&&(i=l.apply(this,[t,o,r]),this._updateVirtualBoundaries(t.shiftKey),(this._aspectRatio||t.shiftKey)&&(i=this._updateRatio(i,t)),i=this._respectSize(i,t),this._updateCache(i),this._propagate("resize",t),n=this._applyChanges(),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),e.isEmptyObject(n)||(this._updatePrevProperties(),this._trigger("resize",t,this.ui()),this._applyChanges()),!1)},_mouseStop:function(t){this.resizing=!1;var i,n,s,a,o,r,l,h=this.options,u=this;return this._helper&&(i=this._proportionallyResizeElements,n=i.length&&/textarea/i.test(i[0].nodeName),s=n&&this._hasScroll(i[0],"left")?0:u.sizeDiff.height,a=n?0:u.sizeDiff.width,o={width:u.helper.width()-a,height:u.helper.height()-s},r=parseFloat(u.element.css("left"))+(u.position.left-u.originalPosition.left)||null,l=parseFloat(u.element.css("top"))+(u.position.top-u.originalPosition.top)||null,h.animate||this.element.css(e.extend(o,{top:l,left:r})),u.helper.height(u.size.height),u.helper.width(u.size.width),this._helper&&!h.animate&&this._proportionallyResize()),e("body").css("cursor","auto"),this._removeClass("ui-resizable-resizing"),this._propagate("stop",t),this._helper&&this.helper.remove(),!1},_updatePrevProperties:function(){this.prevPosition={top:this.position.top,left:this.position.left},this.prevSize={width:this.size.width,height:this.size.height}},_applyChanges:function(){var e={};return this.position.top!==this.prevPosition.top&&(e.top=this.position.top+"px"),this.position.left!==this.prevPosition.left&&(e.left=this.position.left+"px"),this.size.width!==this.prevSize.width&&(e.width=this.size.width+"px"),this.size.height!==this.prevSize.height&&(e.height=this.size.height+"px"),this.helper.css(e),e},_updateVirtualBoundaries:function(e){var t,i,n,s,a,o=this.options;a={minWidth:this._isNumber(o.minWidth)?o.minWidth:0,maxWidth:this._isNumber(o.maxWidth)?o.maxWidth:1/0,minHeight:this._isNumber(o.minHeight)?o.minHeight:0,maxHeight:this._isNumber(o.maxHeight)?o.maxHeight:1/0},(this._aspectRatio||e)&&(t=a.minHeight*this.aspectRatio,n=a.minWidth/this.aspectRatio,i=a.maxHeight*this.aspectRatio,s=a.maxWidth/this.aspectRatio,t>a.minWidth&&(a.minWidth=t),n>a.minHeight&&(a.minHeight=n),a.maxWidth>i&&(a.maxWidth=i),a.maxHeight>s&&(a.maxHeight=s)),this._vBoundaries=a},_updateCache:function(e){this.offset=this.helper.offset(),this._isNumber(e.left)&&(this.position.left=e.left),this._isNumber(e.top)&&(this.position.top=e.top),this._isNumber(e.height)&&(this.size.height=e.height),this._isNumber(e.width)&&(this.size.width=e.width)},_updateRatio:function(e){var t=this.position,i=this.size,n=this.axis;return this._isNumber(e.height)?e.width=e.height*this.aspectRatio:this._isNumber(e.width)&&(e.height=e.width/this.aspectRatio),"sw"===n&&(e.left=t.left+(i.width-e.width),e.top=null),"nw"===n&&(e.top=t.top+(i.height-e.height),e.left=t.left+(i.width-e.width)),e},_respectSize:function(e){var t=this._vBoundaries,i=this.axis,n=this._isNumber(e.width)&&t.maxWidth&&t.maxWidth<e.width,s=this._isNumber(e.height)&&t.maxHeight&&t.maxHeight<e.height,a=this._isNumber(e.width)&&t.minWidth&&t.minWidth>e.width,o=this._isNumber(e.height)&&t.minHeight&&t.minHeight>e.height,r=this.originalPosition.left+this.originalSize.width,l=this.originalPosition.top+this.originalSize.height,h=/sw|nw|w/.test(i),u=/nw|ne|n/.test(i);return a&&(e.width=t.minWidth),o&&(e.height=t.minHeight),n&&(e.width=t.maxWidth),s&&(e.height=t.maxHeight),a&&h&&(e.left=r-t.minWidth),n&&h&&(e.left=r-t.maxWidth),o&&u&&(e.top=l-t.minHeight),s&&u&&(e.top=l-t.maxHeight),e.width||e.height||e.left||!e.top?e.width||e.height||e.top||!e.left||(e.left=null):e.top=null,e},_getPaddingPlusBorderDimensions:function(e){for(var t=0,i=[],n=[e.css("borderTopWidth"),e.css("borderRightWidth"),e.css("borderBottomWidth"),e.css("borderLeftWidth")],s=[e.css("paddingTop"),e.css("paddingRight"),e.css("paddingBottom"),e.css("paddingLeft")];4>t;t++)i[t]=parseFloat(n[t])||0,i[t]+=parseFloat(s[t])||0;return{height:i[0]+i[2],width:i[1]+i[3]}},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var e,t=0,i=this.helper||this.element;this._proportionallyResizeElements.length>t;t++)e=this._proportionallyResizeElements[t],this.outerDimensions||(this.outerDimensions=this._getPaddingPlusBorderDimensions(e)),e.css({height:i.height()-this.outerDimensions.height||0,width:i.width()-this.outerDimensions.width||0})},_renderProxy:function(){var t=this.element,i=this.options;this.elementOffset=t.offset(),this._helper?(this.helper=this.helper||e("<div style='overflow:hidden;'></div>"),this._addClass(this.helper,this._helper),this.helper.css({width:this.element.outerWidth(),height:this.element.outerHeight(),position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(e,t){return{width:this.originalSize.width+t}},w:function(e,t){var i=this.originalSize,n=this.originalPosition;return{left:n.left+t,width:i.width-t}},n:function(e,t,i){var n=this.originalSize,s=this.originalPosition;return{top:s.top+i,height:n.height-i}},s:function(e,t,i){return{height:this.originalSize.height+i}},se:function(t,i,n){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[t,i,n]))},sw:function(t,i,n){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[t,i,n]))},ne:function(t,i,n){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[t,i,n]))},nw:function(t,i,n){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[t,i,n]))}},_propagate:function(t,i){e.ui.plugin.call(this,t,[i,this.ui()]),"resize"!==t&&this._trigger(t,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),e.ui.plugin.add("resizable","animate",{stop:function(t){var i=e(this).resizable("instance"),n=i.options,s=i._proportionallyResizeElements,a=s.length&&/textarea/i.test(s[0].nodeName),o=a&&i._hasScroll(s[0],"left")?0:i.sizeDiff.height,r=a?0:i.sizeDiff.width,l={width:i.size.width-r,height:i.size.height-o},h=parseFloat(i.element.css("left"))+(i.position.left-i.originalPosition.left)||null,u=parseFloat(i.element.css("top"))+(i.position.top-i.originalPosition.top)||null;i.element.animate(e.extend(l,u&&h?{top:u,left:h}:{}),{duration:n.animateDuration,easing:n.animateEasing,step:function(){var n={width:parseFloat(i.element.css("width")),height:parseFloat(i.element.css("height")),top:parseFloat(i.element.css("top")),left:parseFloat(i.element.css("left"))};s&&s.length&&e(s[0]).css({width:n.width,height:n.height}),i._updateCache(n),i._propagate("resize",t)}})}}),e.ui.plugin.add("resizable","containment",{start:function(){var t,i,n,s,a,o,r,l=e(this).resizable("instance"),h=l.options,u=l.element,c=h.containment,d=c instanceof e?c.get(0):/parent/.test(c)?u.parent().get(0):c;d&&(l.containerElement=e(d),/document/.test(c)||c===document?(l.containerOffset={left:0,top:0},l.containerPosition={left:0,top:0},l.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight}):(t=e(d),i=[],e(["Top","Right","Left","Bottom"]).each(function(e,n){i[e]=l._num(t.css("padding"+n))}),l.containerOffset=t.offset(),l.containerPosition=t.position(),l.containerSize={height:t.innerHeight()-i[3],width:t.innerWidth()-i[1]},n=l.containerOffset,s=l.containerSize.height,a=l.containerSize.width,o=l._hasScroll(d,"left")?d.scrollWidth:a,r=l._hasScroll(d)?d.scrollHeight:s,l.parentData={element:d,left:n.left,top:n.top,width:o,height:r}))},resize:function(t){var i,n,s,a,o=e(this).resizable("instance"),r=o.options,l=o.containerOffset,h=o.position,u=o._aspectRatio||t.shiftKey,c={top:0,left:0},d=o.containerElement,p=!0;d[0]!==document&&/static/.test(d.css("position"))&&(c=l),h.left<(o._helper?l.left:0)&&(o.size.width=o.size.width+(o._helper?o.position.left-l.left:o.position.left-c.left),u&&(o.size.height=o.size.width/o.aspectRatio,p=!1),o.position.left=r.helper?l.left:0),h.top<(o._helper?l.top:0)&&(o.size.height=o.size.height+(o._helper?o.position.top-l.top:o.position.top),u&&(o.size.width=o.size.height*o.aspectRatio,p=!1),o.position.top=o._helper?l.top:0),s=o.containerElement.get(0)===o.element.parent().get(0),a=/relative|absolute/.test(o.containerElement.css("position")),s&&a?(o.offset.left=o.parentData.left+o.position.left,o.offset.top=o.parentData.top+o.position.top):(o.offset.left=o.element.offset().left,o.offset.top=o.element.offset().top),i=Math.abs(o.sizeDiff.width+(o._helper?o.offset.left-c.left:o.offset.left-l.left)),n=Math.abs(o.sizeDiff.height+(o._helper?o.offset.top-c.top:o.offset.top-l.top)),i+o.size.width>=o.parentData.width&&(o.size.width=o.parentData.width-i,u&&(o.size.height=o.size.width/o.aspectRatio,p=!1)),n+o.size.height>=o.parentData.height&&(o.size.height=o.parentData.height-n,u&&(o.size.width=o.size.height*o.aspectRatio,p=!1)),p||(o.position.left=o.prevPosition.left,o.position.top=o.prevPosition.top,o.size.width=o.prevSize.width,o.size.height=o.prevSize.height)},stop:function(){var t=e(this).resizable("instance"),i=t.options,n=t.containerOffset,s=t.containerPosition,a=t.containerElement,o=e(t.helper),r=o.offset(),l=o.outerWidth()-t.sizeDiff.width,h=o.outerHeight()-t.sizeDiff.height;t._helper&&!i.animate&&/relative/.test(a.css("position"))&&e(this).css({left:r.left-s.left-n.left,width:l,height:h}),t._helper&&!i.animate&&/static/.test(a.css("position"))&&e(this).css({left:r.left-s.left-n.left,width:l,height:h})}}),e.ui.plugin.add("resizable","alsoResize",{start:function(){var t=e(this).resizable("instance"),i=t.options;e(i.alsoResize).each(function(){var t=e(this);t.data("ui-resizable-alsoresize",{width:parseFloat(t.width()),height:parseFloat(t.height()),left:parseFloat(t.css("left")),top:parseFloat(t.css("top"))})})},resize:function(t,i){var n=e(this).resizable("instance"),s=n.options,a=n.originalSize,o=n.originalPosition,r={height:n.size.height-a.height||0,width:n.size.width-a.width||0,top:n.position.top-o.top||0,left:n.position.left-o.left||0};e(s.alsoResize).each(function(){var t=e(this),n=e(this).data("ui-resizable-alsoresize"),s={},a=t.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(a,function(e,t){var i=(n[t]||0)+(r[t]||0);i&&i>=0&&(s[t]=i||null)}),t.css(s)})},stop:function(){e(this).removeData("ui-resizable-alsoresize")}}),e.ui.plugin.add("resizable","ghost",{start:function(){var t=e(this).resizable("instance"),i=t.size;t.ghost=t.originalElement.clone(),t.ghost.css({opacity:.25,display:"block",position:"relative",height:i.height,width:i.width,margin:0,left:0,top:0}),t._addClass(t.ghost,"ui-resizable-ghost"),e.uiBackCompat!==!1&&"string"==typeof t.options.ghost&&t.ghost.addClass(this.options.ghost),t.ghost.appendTo(t.helper)},resize:function(){var t=e(this).resizable("instance");t.ghost&&t.ghost.css({position:"relative",height:t.size.height,width:t.size.width})},stop:function(){var t=e(this).resizable("instance");t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),e.ui.plugin.add("resizable","grid",{resize:function(){var t,i=e(this).resizable("instance"),n=i.options,s=i.size,a=i.originalSize,o=i.originalPosition,r=i.axis,l="number"==typeof n.grid?[n.grid,n.grid]:n.grid,h=l[0]||1,u=l[1]||1,c=Math.round((s.width-a.width)/h)*h,d=Math.round((s.height-a.height)/u)*u,p=a.width+c,f=a.height+d,m=n.maxWidth&&p>n.maxWidth,g=n.maxHeight&&f>n.maxHeight,v=n.minWidth&&n.minWidth>p,b=n.minHeight&&n.minHeight>f;n.grid=l,v&&(p+=h),b&&(f+=u),m&&(p-=h),g&&(f-=u),/^(se|s|e)$/.test(r)?(i.size.width=p,i.size.height=f):/^(ne)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.top=o.top-d):/^(sw)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.left=o.left-c):((0>=f-u||0>=p-h)&&(t=i._getPaddingPlusBorderDimensions(this)),f-u>0?(i.size.height=f,i.position.top=o.top-d):(f=u-t.height,i.size.height=f,i.position.top=o.top+a.height-f),p-h>0?(i.size.width=p,i.position.left=o.left-c):(p=h-t.width,i.size.width=p,i.position.left=o.left+a.width-p))}}),e.ui.resizable,e.widget("ui.dialog",{version:"1.12.0",options:{appendTo:"body",autoOpen:!0,buttons:[],classes:{"ui-dialog":"ui-corner-all","ui-dialog-titlebar":"ui-corner-all"},closeOnEscape:!0,closeText:"Close",draggable:!0,hide:null,height:"auto",maxHeight:null,maxWidth:null,minHeight:150,
minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(t){var i=e(this).css(t).offset().top;0>i&&e(this).css("top",t.top-i)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},sizeRelatedOptions:{buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},resizableRelatedOptions:{maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr("title"),null==this.options.title&&null!=this.originalTitle&&(this.options.title=this.originalTitle),this.options.disabled&&(this.options.disabled=!1),this._createWrapper(),this.element.show().removeAttr("title").appendTo(this.uiDialog),this._addClass("ui-dialog-content","ui-widget-content"),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&e.fn.draggable&&this._makeDraggable(),this.options.resizable&&e.fn.resizable&&this._makeResizable(),this._isOpen=!1,this._trackFocus()},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var t=this.options.appendTo;return t&&(t.jquery||t.nodeType)?e(t):this.document.find(t||"body").eq(0)},_destroy:function(){var e,t=this.originalPosition;this._untrackInstance(),this._destroyOverlay(),this.element.removeUniqueId().css(this.originalCss).detach(),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),e=t.parent.children().eq(t.index),e.length&&e[0]!==this.element[0]?e.before(this.element):t.parent.append(this.element)},widget:function(){return this.uiDialog},disable:e.noop,enable:e.noop,close:function(t){var i=this;this._isOpen&&this._trigger("beforeClose",t)!==!1&&(this._isOpen=!1,this._focusedElement=null,this._destroyOverlay(),this._untrackInstance(),this.opener.filter(":focusable").trigger("focus").length||e.ui.safeBlur(e.ui.safeActiveElement(this.document[0])),this._hide(this.uiDialog,this.options.hide,function(){i._trigger("close",t)}))},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(t,i){var n=!1,s=this.uiDialog.siblings(".ui-front:visible").map(function(){return+e(this).css("z-index")}).get(),a=Math.max.apply(null,s);return a>=+this.uiDialog.css("z-index")&&(this.uiDialog.css("z-index",a+1),n=!0),n&&!i&&this._trigger("focus",t),n},open:function(){var t=this;return this._isOpen?void(this._moveToTop()&&this._focusTabbable()):(this._isOpen=!0,this.opener=e(e.ui.safeActiveElement(this.document[0])),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this.overlay&&this.overlay.css("z-index",this.uiDialog.css("z-index")-1),this._show(this.uiDialog,this.options.show,function(){t._focusTabbable(),t._trigger("focus")}),this._makeFocusTarget(),void this._trigger("open"))},_focusTabbable:function(){var e=this._focusedElement;e||(e=this.element.find("[autofocus]")),e.length||(e=this.element.find(":tabbable")),e.length||(e=this.uiDialogButtonPane.find(":tabbable")),e.length||(e=this.uiDialogTitlebarClose.filter(":tabbable")),e.length||(e=this.uiDialog),e.eq(0).trigger("focus")},_keepFocus:function(t){function i(){var t=e.ui.safeActiveElement(this.document[0]),i=this.uiDialog[0]===t||e.contains(this.uiDialog[0],t);i||this._focusTabbable()}t.preventDefault(),i.call(this),this._delay(i)},_createWrapper:function(){this.uiDialog=e("<div>").hide().attr({tabIndex:-1,role:"dialog"}).appendTo(this._appendTo()),this._addClass(this.uiDialog,"ui-dialog","ui-widget ui-widget-content ui-front"),this._on(this.uiDialog,{keydown:function(t){if(this.options.closeOnEscape&&!t.isDefaultPrevented()&&t.keyCode&&t.keyCode===e.ui.keyCode.ESCAPE)return t.preventDefault(),void this.close(t);if(t.keyCode===e.ui.keyCode.TAB&&!t.isDefaultPrevented()){var i=this.uiDialog.find(":tabbable"),n=i.filter(":first"),s=i.filter(":last");t.target!==s[0]&&t.target!==this.uiDialog[0]||t.shiftKey?t.target!==n[0]&&t.target!==this.uiDialog[0]||!t.shiftKey||(this._delay(function(){s.trigger("focus")}),t.preventDefault()):(this._delay(function(){n.trigger("focus")}),t.preventDefault())}},mousedown:function(e){this._moveToTop(e)&&this._focusTabbable()}}),this.element.find("[aria-describedby]").length||this.uiDialog.attr({"aria-describedby":this.element.uniqueId().attr("id")})},_createTitlebar:function(){var t;this.uiDialogTitlebar=e("<div>"),this._addClass(this.uiDialogTitlebar,"ui-dialog-titlebar","ui-widget-header ui-helper-clearfix"),this._on(this.uiDialogTitlebar,{mousedown:function(t){e(t.target).closest(".ui-dialog-titlebar-close")||this.uiDialog.trigger("focus")}}),this.uiDialogTitlebarClose=e("<button type='button'></button>").button({label:e("<a>").text(this.options.closeText).html(),icon:"ui-icon-closethick",showLabel:!1}).appendTo(this.uiDialogTitlebar),this._addClass(this.uiDialogTitlebarClose,"ui-dialog-titlebar-close"),this._on(this.uiDialogTitlebarClose,{click:function(e){e.preventDefault(),this.close(e)}}),t=e("<span>").uniqueId().prependTo(this.uiDialogTitlebar),this._addClass(t,"ui-dialog-title"),this._title(t),this.uiDialogTitlebar.prependTo(this.uiDialog),this.uiDialog.attr({"aria-labelledby":t.attr("id")})},_title:function(e){this.options.title?e.text(this.options.title):e.html("&#160;")},_createButtonPane:function(){this.uiDialogButtonPane=e("<div>"),this._addClass(this.uiDialogButtonPane,"ui-dialog-buttonpane","ui-widget-content ui-helper-clearfix"),this.uiButtonSet=e("<div>").appendTo(this.uiDialogButtonPane),this._addClass(this.uiButtonSet,"ui-dialog-buttonset"),this._createButtons()},_createButtons:function(){var t=this,i=this.options.buttons;return this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),e.isEmptyObject(i)||e.isArray(i)&&!i.length?void this._removeClass(this.uiDialog,"ui-dialog-buttons"):(e.each(i,function(i,n){var s,a;n=e.isFunction(n)?{click:n,text:i}:n,n=e.extend({type:"button"},n),s=n.click,a={icon:n.icon,iconPosition:n.iconPosition,showLabel:n.showLabel},delete n.click,delete n.icon,delete n.iconPosition,delete n.showLabel,e("<button></button>",n).button(a).appendTo(t.uiButtonSet).on("click",function(){s.apply(t.element[0],arguments)})}),this._addClass(this.uiDialog,"ui-dialog-buttons"),void this.uiDialogButtonPane.appendTo(this.uiDialog))},_makeDraggable:function(){function t(e){return{position:e.position,offset:e.offset}}var i=this,n=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(n,s){i._addClass(e(this),"ui-dialog-dragging"),i._blockFrames(),i._trigger("dragStart",n,t(s))},drag:function(e,n){i._trigger("drag",e,t(n))},stop:function(s,a){var o=a.offset.left-i.document.scrollLeft(),r=a.offset.top-i.document.scrollTop();n.position={my:"left top",at:"left"+(o>=0?"+":"")+o+" top"+(r>=0?"+":"")+r,of:i.window},i._removeClass(e(this),"ui-dialog-dragging"),i._unblockFrames(),i._trigger("dragStop",s,t(a))}})},_makeResizable:function(){function t(e){return{originalPosition:e.originalPosition,originalSize:e.originalSize,position:e.position,size:e.size}}var i=this,n=this.options,s=n.resizable,a=this.uiDialog.css("position"),o="string"==typeof s?s:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:n.maxWidth,maxHeight:n.maxHeight,minWidth:n.minWidth,minHeight:this._minHeight(),handles:o,start:function(n,s){i._addClass(e(this),"ui-dialog-resizing"),i._blockFrames(),i._trigger("resizeStart",n,t(s))},resize:function(e,n){i._trigger("resize",e,t(n))},stop:function(s,a){var o=i.uiDialog.offset(),r=o.left-i.document.scrollLeft(),l=o.top-i.document.scrollTop();n.height=i.uiDialog.height(),n.width=i.uiDialog.width(),n.position={my:"left top",at:"left"+(r>=0?"+":"")+r+" top"+(l>=0?"+":"")+l,of:i.window},i._removeClass(e(this),"ui-dialog-resizing"),i._unblockFrames(),i._trigger("resizeStop",s,t(a))}}).css("position",a)},_trackFocus:function(){this._on(this.widget(),{focusin:function(t){this._makeFocusTarget(),this._focusedElement=e(t.target)}})},_makeFocusTarget:function(){this._untrackInstance(),this._trackingInstances().unshift(this)},_untrackInstance:function(){var t=this._trackingInstances(),i=e.inArray(this,t);-1!==i&&t.splice(i,1)},_trackingInstances:function(){var e=this.document.data("ui-dialog-instances");return e||(e=[],this.document.data("ui-dialog-instances",e)),e},_minHeight:function(){var e=this.options;return"auto"===e.height?e.minHeight:Math.min(e.minHeight,e.height)},_position:function(){var e=this.uiDialog.is(":visible");e||this.uiDialog.show(),this.uiDialog.position(this.options.position),e||this.uiDialog.hide()},_setOptions:function(t){var i=this,n=!1,s={};e.each(t,function(e,t){i._setOption(e,t),e in i.sizeRelatedOptions&&(n=!0),e in i.resizableRelatedOptions&&(s[e]=t)}),n&&(this._size(),this._position()),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option",s)},_setOption:function(t,i){var n,s,a=this.uiDialog;"disabled"!==t&&(this._super(t,i),"appendTo"===t&&this.uiDialog.appendTo(this._appendTo()),"buttons"===t&&this._createButtons(),"closeText"===t&&this.uiDialogTitlebarClose.button({label:e("<a>").text(""+this.options.closeText).html()}),"draggable"===t&&(n=a.is(":data(ui-draggable)"),n&&!i&&a.draggable("destroy"),!n&&i&&this._makeDraggable()),"position"===t&&this._position(),"resizable"===t&&(s=a.is(":data(ui-resizable)"),s&&!i&&a.resizable("destroy"),s&&"string"==typeof i&&a.resizable("option","handles",i),s||i===!1||this._makeResizable()),"title"===t&&this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))},_size:function(){var e,t,i,n=this.options;this.element.show().css({width:"auto",minHeight:0,maxHeight:"none",height:0}),n.minWidth>n.width&&(n.width=n.minWidth),e=this.uiDialog.css({height:"auto",width:n.width}).outerHeight(),t=Math.max(0,n.minHeight-e),i="number"==typeof n.maxHeight?Math.max(0,n.maxHeight-e):"none","auto"===n.height?this.element.css({minHeight:t,maxHeight:i,height:"auto"}):this.element.height(Math.max(0,n.height-e)),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find("iframe").map(function(){var t=e(this);return e("<div>").css({position:"absolute",width:t.outerWidth(),height:t.outerHeight()}).appendTo(t.parent()).offset(t.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(t){return!!e(t.target).closest(".ui-dialog").length||!!e(t.target).closest(".ui-datepicker").length},_createOverlay:function(){if(this.options.modal){var t=!0;this._delay(function(){t=!1}),this.document.data("ui-dialog-overlays")||this._on(this.document,{focusin:function(e){t||this._allowInteraction(e)||(e.preventDefault(),this._trackingInstances()[0]._focusTabbable())}}),this.overlay=e("<div>").appendTo(this._appendTo()),this._addClass(this.overlay,null,"ui-widget-overlay ui-front"),this._on(this.overlay,{mousedown:"_keepFocus"}),this.document.data("ui-dialog-overlays",(this.document.data("ui-dialog-overlays")||0)+1)}},_destroyOverlay:function(){if(this.options.modal&&this.overlay){var e=this.document.data("ui-dialog-overlays")-1;e?this.document.data("ui-dialog-overlays",e):(this._off(this.document,"focusin"),this.document.removeData("ui-dialog-overlays")),this.overlay.remove(),this.overlay=null}}}),e.uiBackCompat!==!1&&e.widget("ui.dialog",e.ui.dialog,{options:{dialogClass:""},_createWrapper:function(){this._super(),this.uiDialog.addClass(this.options.dialogClass)},_setOption:function(e,t){"dialogClass"===e&&this.uiDialog.removeClass(this.options.dialogClass).addClass(t),this._superApply(arguments)}}),e.ui.dialog,e.widget("ui.droppable",{version:"1.12.0",widgetEventPrefix:"drop",options:{accept:"*",addClasses:!0,greedy:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var t,i=this.options,n=i.accept;this.isover=!1,this.isout=!0,this.accept=e.isFunction(n)?n:function(e){return e.is(n)},this.proportions=function(){return arguments.length?void(t=arguments[0]):t?t:t={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight}},this._addToManager(i.scope),i.addClasses&&this._addClass("ui-droppable")},_addToManager:function(t){e.ui.ddmanager.droppables[t]=e.ui.ddmanager.droppables[t]||[],e.ui.ddmanager.droppables[t].push(this)},_splice:function(e){for(var t=0;e.length>t;t++)e[t]===this&&e.splice(t,1)},_destroy:function(){var t=e.ui.ddmanager.droppables[this.options.scope];this._splice(t)},_setOption:function(t,i){if("accept"===t)this.accept=e.isFunction(i)?i:function(e){return e.is(i)};else if("scope"===t){var n=e.ui.ddmanager.droppables[this.options.scope];this._splice(n),this._addToManager(i)}this._super(t,i)},_activate:function(t){var i=e.ui.ddmanager.current;this._addActiveClass(),i&&this._trigger("activate",t,this.ui(i))},_deactivate:function(t){var i=e.ui.ddmanager.current;this._removeActiveClass(),i&&this._trigger("deactivate",t,this.ui(i))},_over:function(t){var i=e.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._addHoverClass(),this._trigger("over",t,this.ui(i)))},_out:function(t){var i=e.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._removeHoverClass(),this._trigger("out",t,this.ui(i)))},_drop:function(t,i){var n=i||e.ui.ddmanager.current,s=!1;return!(!n||(n.currentItem||n.element)[0]===this.element[0])&&(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function(){var i=e(this).droppable("instance");return i.options.greedy&&!i.options.disabled&&i.options.scope===n.options.scope&&i.accept.call(i.element[0],n.currentItem||n.element)&&b(n,e.extend(i,{offset:i.element.offset()}),i.options.tolerance,t)?(s=!0,!1):void 0}),!s&&(!!this.accept.call(this.element[0],n.currentItem||n.element)&&(this._removeActiveClass(),this._removeHoverClass(),this._trigger("drop",t,this.ui(n)),this.element)))},ui:function(e){return{draggable:e.currentItem||e.element,helper:e.helper,position:e.position,offset:e.positionAbs}},_addHoverClass:function(){this._addClass("ui-droppable-hover")},_removeHoverClass:function(){this._removeClass("ui-droppable-hover")},_addActiveClass:function(){this._addClass("ui-droppable-active")},_removeActiveClass:function(){this._removeClass("ui-droppable-active")}});var b=e.ui.intersect=function(){function e(e,t,i){return e>=t&&t+i>e}return function(t,i,n,s){if(!i.offset)return!1;var a=(t.positionAbs||t.position.absolute).left+t.margins.left,o=(t.positionAbs||t.position.absolute).top+t.margins.top,r=a+t.helperProportions.width,l=o+t.helperProportions.height,h=i.offset.left,u=i.offset.top,c=h+i.proportions().width,d=u+i.proportions().height;switch(n){case"fit":return a>=h&&c>=r&&o>=u&&d>=l;case"intersect":return a+t.helperProportions.width/2>h&&c>r-t.helperProportions.width/2&&o+t.helperProportions.height/2>u&&d>l-t.helperProportions.height/2;case"pointer":return e(s.pageY,u,i.proportions().height)&&e(s.pageX,h,i.proportions().width);case"touch":return(o>=u&&d>=o||l>=u&&d>=l||u>o&&l>d)&&(a>=h&&c>=a||r>=h&&c>=r||h>a&&r>c);default:return!1}}}();e.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(t,i){var n,s,a=e.ui.ddmanager.droppables[t.options.scope]||[],o=i?i.type:null,r=(t.currentItem||t.element).find(":data(ui-droppable)").addBack();e:for(n=0;a.length>n;n++)if(!(a[n].options.disabled||t&&!a[n].accept.call(a[n].element[0],t.currentItem||t.element))){for(s=0;r.length>s;s++)if(r[s]===a[n].element[0]){a[n].proportions().height=0;continue e}a[n].visible="none"!==a[n].element.css("display"),a[n].visible&&("mousedown"===o&&a[n]._activate.call(a[n],i),a[n].offset=a[n].element.offset(),a[n].proportions({width:a[n].element[0].offsetWidth,height:a[n].element[0].offsetHeight}))}},drop:function(t,i){var n=!1;return e.each((e.ui.ddmanager.droppables[t.options.scope]||[]).slice(),function(){this.options&&(!this.options.disabled&&this.visible&&b(t,this,this.options.tolerance,i)&&(n=this._drop.call(this,i)||n),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],t.currentItem||t.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))}),n},dragStart:function(t,i){t.element.parentsUntil("body").on("scroll.droppable",function(){t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,i)})},drag:function(t,i){t.options.refreshPositions&&e.ui.ddmanager.prepareOffsets(t,i),e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var n,s,a,o=b(t,this,this.options.tolerance,i),r=!o&&this.isover?"isout":o&&!this.isover?"isover":null;r&&(this.options.greedy&&(s=this.options.scope,a=this.element.parents(":data(ui-droppable)").filter(function(){return e(this).droppable("instance").options.scope===s}),a.length&&(n=e(a[0]).droppable("instance"),n.greedyChild="isover"===r)),n&&"isover"===r&&(n.isover=!1,n.isout=!0,n._out.call(n,i)),this[r]=!0,this["isout"===r?"isover":"isout"]=!1,this["isover"===r?"_over":"_out"].call(this,i),n&&"isout"===r&&(n.isout=!1,n.isover=!0,n._over.call(n,i)))}})},dragStop:function(t,i){t.element.parentsUntil("body").off("scroll.droppable"),t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,i)}},e.uiBackCompat!==!1&&e.widget("ui.droppable",e.ui.droppable,{options:{hoverClass:!1,activeClass:!1},_addActiveClass:function(){this._super(),this.options.activeClass&&this.element.addClass(this.options.activeClass)},_removeActiveClass:function(){this._super(),this.options.activeClass&&this.element.removeClass(this.options.activeClass)},_addHoverClass:function(){this._super(),this.options.hoverClass&&this.element.addClass(this.options.hoverClass)},_removeHoverClass:function(){this._super(),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass)}}),e.ui.droppable,e.widget("ui.progressbar",{version:"1.12.0",options:{classes:{"ui-progressbar":"ui-corner-all","ui-progressbar-value":"ui-corner-left","ui-progressbar-complete":"ui-corner-right"},max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.attr({role:"progressbar","aria-valuemin":this.min}),this._addClass("ui-progressbar","ui-widget ui-widget-content"),this.valueDiv=e("<div>").appendTo(this.element),this._addClass(this.valueDiv,"ui-progressbar-value","ui-widget-header"),this._refreshValue()},_destroy:function(){this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow"),this.valueDiv.remove()},value:function(e){return void 0===e?this.options.value:(this.options.value=this._constrainedValue(e),void this._refreshValue())},_constrainedValue:function(e){return void 0===e&&(e=this.options.value),this.indeterminate=e===!1,"number"!=typeof e&&(e=0),!this.indeterminate&&Math.min(this.options.max,Math.max(this.min,e))},_setOptions:function(e){var t=e.value;delete e.value,this._super(e),this.options.value=this._constrainedValue(t),this._refreshValue()},_setOption:function(e,t){"max"===e&&(t=Math.max(this.min,t)),this._super(e,t)},_setOptionDisabled:function(e){this._super(e),this.element.attr("aria-disabled",e),this._toggleClass(null,"ui-state-disabled",!!e)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var t=this.options.value,i=this._percentage();this.valueDiv.toggle(this.indeterminate||t>this.min).width(i.toFixed(0)+"%"),this._toggleClass(this.valueDiv,"ui-progressbar-complete",null,t===this.options.max)._toggleClass("ui-progressbar-indeterminate",null,this.indeterminate),this.indeterminate?(this.element.removeAttr("aria-valuenow"),this.overlayDiv||(this.overlayDiv=e("<div>").appendTo(this.valueDiv),this._addClass(this.overlayDiv,"ui-progressbar-overlay"))):(this.element.attr({"aria-valuemax":this.options.max,"aria-valuenow":t}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==t&&(this.oldValue=t,this._trigger("change")),t===this.options.max&&this._trigger("complete")}}),e.widget("ui.selectable",e.ui.mouse,{version:"1.12.0",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var t=this;this._addClass("ui-selectable"),this.dragged=!1,this.refresh=function(){t.elementPos=e(t.element[0]).offset(),t.selectees=e(t.options.filter,t.element[0]),t._addClass(t.selectees,"ui-selectee"),t.selectees.each(function(){var i=e(this),n=i.offset(),s={left:n.left-t.elementPos.left,top:n.top-t.elementPos.top};e.data(this,"selectable-item",{element:this,$element:i,left:s.left,top:s.top,right:s.left+i.outerWidth(),bottom:s.top+i.outerHeight(),startselected:!1,selected:i.hasClass("ui-selected"),selecting:i.hasClass("ui-selecting"),unselecting:i.hasClass("ui-unselecting")})})},this.refresh(),this._mouseInit(),this.helper=e("<div>"),this._addClass(this.helper,"ui-selectable-helper")},_destroy:function(){this.selectees.removeData("selectable-item"),this._mouseDestroy()},_mouseStart:function(t){var i=this,n=this.options;this.opos=[t.pageX,t.pageY],this.elementPos=e(this.element[0]).offset(),this.options.disabled||(this.selectees=e(n.filter,this.element[0]),this._trigger("start",t),e(n.appendTo).append(this.helper),this.helper.css({left:t.pageX,top:t.pageY,width:0,height:0}),n.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var n=e.data(this,"selectable-item");n.startselected=!0,t.metaKey||t.ctrlKey||(i._removeClass(n.$element,"ui-selected"),n.selected=!1,i._addClass(n.$element,"ui-unselecting"),n.unselecting=!0,i._trigger("unselecting",t,{unselecting:n.element}))}),e(t.target).parents().addBack().each(function(){var n,s=e.data(this,"selectable-item");return s?(n=!t.metaKey&&!t.ctrlKey||!s.$element.hasClass("ui-selected"),i._removeClass(s.$element,n?"ui-unselecting":"ui-selected")._addClass(s.$element,n?"ui-selecting":"ui-unselecting"),s.unselecting=!n,s.selecting=n,s.selected=n,n?i._trigger("selecting",t,{selecting:s.element}):i._trigger("unselecting",t,{unselecting:s.element}),!1):void 0}))},_mouseDrag:function(t){if(this.dragged=!0,!this.options.disabled){var i,n=this,s=this.options,a=this.opos[0],o=this.opos[1],r=t.pageX,l=t.pageY;return a>r&&(i=r,r=a,a=i),o>l&&(i=l,l=o,o=i),this.helper.css({left:a,top:o,width:r-a,height:l-o}),this.selectees.each(function(){var i=e.data(this,"selectable-item"),h=!1,u={};i&&i.element!==n.element[0]&&(u.left=i.left+n.elementPos.left,u.right=i.right+n.elementPos.left,u.top=i.top+n.elementPos.top,u.bottom=i.bottom+n.elementPos.top,"touch"===s.tolerance?h=!(u.left>r||a>u.right||u.top>l||o>u.bottom):"fit"===s.tolerance&&(h=u.left>a&&r>u.right&&u.top>o&&l>u.bottom),h?(i.selected&&(n._removeClass(i.$element,"ui-selected"),i.selected=!1),i.unselecting&&(n._removeClass(i.$element,"ui-unselecting"),i.unselecting=!1),i.selecting||(n._addClass(i.$element,"ui-selecting"),i.selecting=!0,n._trigger("selecting",t,{selecting:i.element}))):(i.selecting&&((t.metaKey||t.ctrlKey)&&i.startselected?(n._removeClass(i.$element,"ui-selecting"),i.selecting=!1,n._addClass(i.$element,"ui-selected"),i.selected=!0):(n._removeClass(i.$element,"ui-selecting"),i.selecting=!1,i.startselected&&(n._addClass(i.$element,"ui-unselecting"),i.unselecting=!0),n._trigger("unselecting",t,{unselecting:i.element}))),i.selected&&(t.metaKey||t.ctrlKey||i.startselected||(n._removeClass(i.$element,"ui-selected"),i.selected=!1,n._addClass(i.$element,"ui-unselecting"),i.unselecting=!0,n._trigger("unselecting",t,{unselecting:i.element})))))}),!1}},_mouseStop:function(t){var i=this;return this.dragged=!1,e(".ui-unselecting",this.element[0]).each(function(){var n=e.data(this,"selectable-item");i._removeClass(n.$element,"ui-unselecting"),n.unselecting=!1,n.startselected=!1,i._trigger("unselected",t,{unselected:n.element})}),e(".ui-selecting",this.element[0]).each(function(){var n=e.data(this,"selectable-item");i._removeClass(n.$element,"ui-selecting")._addClass(n.$element,"ui-selected"),n.selecting=!1,n.selected=!0,n.startselected=!0,i._trigger("selected",t,{selected:n.element})}),this._trigger("stop",t),this.helper.remove(),!1}}),e.widget("ui.selectmenu",[e.ui.formResetMixin,{version:"1.12.0",defaultElement:"<select>",options:{appendTo:null,classes:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"},disabled:null,icons:{button:"ui-icon-triangle-1-s"},position:{my:"left top",at:"left bottom",collision:"none"},width:!1,change:null,close:null,focus:null,open:null,select:null},_create:function(){var t=this.element.uniqueId().attr("id");this.ids={element:t,button:t+"-button",menu:t+"-menu"},this._drawButton(),this._drawMenu(),this._bindFormResetHandler(),this._rendered=!1,this.menuItems=e()},_drawButton:function(){var t,i=this,n=this._parseOption(this.element.find("option:selected"),this.element[0].selectedIndex);this.labels=this.element.labels().attr("for",this.ids.button),this._on(this.labels,{click:function(e){this.button.focus(),e.preventDefault()}}),this.element.hide(),this.button=e("<span>",{tabindex:this.options.disabled?-1:0,id:this.ids.button,role:"combobox","aria-expanded":"false","aria-autocomplete":"list","aria-owns":this.ids.menu,"aria-haspopup":"true",title:this.element.attr("title")}).insertAfter(this.element),this._addClass(this.button,"ui-selectmenu-button ui-selectmenu-button-closed","ui-button ui-widget"),t=e("<span>").appendTo(this.button),this._addClass(t,"ui-selectmenu-icon","ui-icon "+this.options.icons.button),this.buttonItem=this._renderButtonItem(n).appendTo(this.button),this.options.width!==!1&&this._resizeButton(),this._on(this.button,this._buttonEvents),this.button.one("focusin",function(){i._rendered||i._refreshMenu()})},_drawMenu:function(){var t=this;this.menu=e("<ul>",{"aria-hidden":"true","aria-labelledby":this.ids.button,id:this.ids.menu}),this.menuWrap=e("<div>").append(this.menu),this._addClass(this.menuWrap,"ui-selectmenu-menu","ui-front"),this.menuWrap.appendTo(this._appendTo()),this.menuInstance=this.menu.menu({classes:{"ui-menu":"ui-corner-bottom"},role:"listbox",select:function(e,i){e.preventDefault(),t._setSelection(),t._select(i.item.data("ui-selectmenu-item"),e)},focus:function(e,i){var n=i.item.data("ui-selectmenu-item");null!=t.focusIndex&&n.index!==t.focusIndex&&(t._trigger("focus",e,{item:n}),t.isOpen||t._select(n,e)),t.focusIndex=n.index,t.button.attr("aria-activedescendant",t.menuItems.eq(n.index).attr("id"))}}).menu("instance"),this.menuInstance._off(this.menu,"mouseleave"),this.menuInstance._closeOnDocumentClick=function(){return!1},this.menuInstance._isDivider=function(){return!1}},refresh:function(){this._refreshMenu(),this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(this._getSelectedItem().data("ui-selectmenu-item")||{})),null===this.options.width&&this._resizeButton()},_refreshMenu:function(){var e,t=this.element.find("option");this.menu.empty(),this._parseOptions(t),this._renderMenu(this.menu,this.items),this.menuInstance.refresh(),this.menuItems=this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper"),this._rendered=!0,t.length&&(e=this._getSelectedItem(),this.menuInstance.focus(null,e),this._setAria(e.data("ui-selectmenu-item")),this._setOption("disabled",this.element.prop("disabled")))},open:function(e){this.options.disabled||(this._rendered?(this._removeClass(this.menu.find(".ui-state-active"),null,"ui-state-active"),this.menuInstance.focus(null,this._getSelectedItem())):this._refreshMenu(),this.menuItems.length&&(this.isOpen=!0,this._toggleAttr(),this._resizeMenu(),this._position(),this._on(this.document,this._documentClick),this._trigger("open",e)))},_position:function(){this.menuWrap.position(e.extend({of:this.button},this.options.position))},close:function(e){this.isOpen&&(this.isOpen=!1,this._toggleAttr(),this.range=null,this._off(this.document),this._trigger("close",e))},widget:function(){return this.button},menuWidget:function(){return this.menu},_renderButtonItem:function(t){var i=e("<span>");return this._setText(i,t.label),this._addClass(i,"ui-selectmenu-text"),i},_renderMenu:function(t,i){var n=this,s="";e.each(i,function(i,a){var o;a.optgroup!==s&&(o=e("<li>",{text:a.optgroup}),n._addClass(o,"ui-selectmenu-optgroup","ui-menu-divider"+(a.element.parent("optgroup").prop("disabled")?" ui-state-disabled":"")),o.appendTo(t),s=a.optgroup),n._renderItemData(t,a)})},_renderItemData:function(e,t){return this._renderItem(e,t).data("ui-selectmenu-item",t)},_renderItem:function(t,i){var n=e("<li>"),s=e("<div>",{title:i.element.attr("title")});return i.disabled&&this._addClass(n,null,"ui-state-disabled"),this._setText(s,i.label),n.append(s).appendTo(t)},_setText:function(e,t){t?e.text(t):e.html("&#160;")},_move:function(e,t){var i,n,s=".ui-menu-item";this.isOpen?i=this.menuItems.eq(this.focusIndex).parent("li"):(i=this.menuItems.eq(this.element[0].selectedIndex).parent("li"),s+=":not(.ui-state-disabled)"),n="first"===e||"last"===e?i["first"===e?"prevAll":"nextAll"](s).eq(-1):i[e+"All"](s).eq(0),n.length&&this.menuInstance.focus(t,n)},_getSelectedItem:function(){return this.menuItems.eq(this.element[0].selectedIndex).parent("li")},_toggle:function(e){this[this.isOpen?"close":"open"](e)},_setSelection:function(){var e;this.range&&(window.getSelection?(e=window.getSelection(),e.removeAllRanges(),e.addRange(this.range)):this.range.select(),this.button.focus())},_documentClick:{mousedown:function(t){this.isOpen&&(e(t.target).closest(".ui-selectmenu-menu, #"+e.ui.escapeSelector(this.ids.button)).length||this.close(t))}},_buttonEvents:{mousedown:function(){var e;window.getSelection?(e=window.getSelection(),e.rangeCount&&(this.range=e.getRangeAt(0))):this.range=document.selection.createRange()},click:function(e){this._setSelection(),this._toggle(e)},keydown:function(t){var i=!0;switch(t.keyCode){case e.ui.keyCode.TAB:case e.ui.keyCode.ESCAPE:this.close(t),i=!1;break;case e.ui.keyCode.ENTER:this.isOpen&&this._selectFocusedItem(t);break;case e.ui.keyCode.UP:t.altKey?this._toggle(t):this._move("prev",t);break;case e.ui.keyCode.DOWN:t.altKey?this._toggle(t):this._move("next",t);break;case e.ui.keyCode.SPACE:this.isOpen?this._selectFocusedItem(t):this._toggle(t);break;case e.ui.keyCode.LEFT:this._move("prev",t);break;case e.ui.keyCode.RIGHT:this._move("next",t);break;case e.ui.keyCode.HOME:case e.ui.keyCode.PAGE_UP:this._move("first",t);break;case e.ui.keyCode.END:case e.ui.keyCode.PAGE_DOWN:this._move("last",t);break;default:this.menu.trigger(t),i=!1}i&&t.preventDefault()}},_selectFocusedItem:function(e){var t=this.menuItems.eq(this.focusIndex).parent("li");t.hasClass("ui-state-disabled")||this._select(t.data("ui-selectmenu-item"),e)},_select:function(e,t){var i=this.element[0].selectedIndex;this.element[0].selectedIndex=e.index,this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(e)),this._setAria(e),this._trigger("select",t,{item:e}),e.index!==i&&this._trigger("change",t,{item:e}),this.close(t)},_setAria:function(e){var t=this.menuItems.eq(e.index).attr("id");this.button.attr({"aria-labelledby":t,"aria-activedescendant":t}),this.menu.attr("aria-activedescendant",t)},_setOption:function(e,t){if("icons"===e){var i=this.button.find("span.ui-icon");this._removeClass(i,null,this.options.icons.button)._addClass(i,null,t.button)}this._super(e,t),
"appendTo"===e&&this.menuWrap.appendTo(this._appendTo()),"width"===e&&this._resizeButton()},_setOptionDisabled:function(e){this._super(e),this.menuInstance.option("disabled",e),this.button.attr("aria-disabled",e),this._toggleClass(this.button,null,"ui-state-disabled",e),this.element.prop("disabled",e),e?(this.button.attr("tabindex",-1),this.close()):this.button.attr("tabindex",0)},_appendTo:function(){var t=this.options.appendTo;return t&&(t=t.jquery||t.nodeType?e(t):this.document.find(t).eq(0)),t&&t[0]||(t=this.element.closest(".ui-front, dialog")),t.length||(t=this.document[0].body),t},_toggleAttr:function(){this.button.attr("aria-expanded",this.isOpen),this._removeClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"closed":"open"))._addClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"open":"closed"))._toggleClass(this.menuWrap,"ui-selectmenu-open",null,this.isOpen),this.menu.attr("aria-hidden",!this.isOpen)},_resizeButton:function(){var e=this.options.width;return e===!1?void this.button.css("width",""):(null===e&&(e=this.element.show().outerWidth(),this.element.hide()),void this.button.outerWidth(e))},_resizeMenu:function(){this.menu.outerWidth(Math.max(this.button.outerWidth(),this.menu.width("").outerWidth()+1))},_getCreateOptions:function(){var e=this._super();return e.disabled=this.element.prop("disabled"),e},_parseOptions:function(t){var i=this,n=[];t.each(function(t,s){n.push(i._parseOption(e(s),t))}),this.items=n},_parseOption:function(e,t){var i=e.parent("optgroup");return{element:e,index:t,value:e.val(),label:e.text(),optgroup:i.attr("label")||"",disabled:i.prop("disabled")||e.prop("disabled")}},_destroy:function(){this._unbindFormResetHandler(),this.menuWrap.remove(),this.button.remove(),this.element.show(),this.element.removeUniqueId(),this.labels.attr("for",this.ids.element)}}]),e.widget("ui.slider",e.ui.mouse,{version:"1.12.0",widgetEventPrefix:"slide",options:{animate:!1,classes:{"ui-slider":"ui-corner-all","ui-slider-handle":"ui-corner-all","ui-slider-range":"ui-corner-all ui-widget-header"},distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this._addClass("ui-slider ui-slider-"+this.orientation,"ui-widget ui-widget-content"),this._refresh(),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var t,i,n=this.options,s=this.element.find(".ui-slider-handle"),a="<span tabindex='0'></span>",o=[];for(i=n.values&&n.values.length||1,s.length>i&&(s.slice(i).remove(),s=s.slice(0,i)),t=s.length;i>t;t++)o.push(a);this.handles=s.add(e(o.join("")).appendTo(this.element)),this._addClass(this.handles,"ui-slider-handle","ui-state-default"),this.handle=this.handles.eq(0),this.handles.each(function(t){e(this).data("ui-slider-handle-index",t)})},_createRange:function(){var t=this.options;t.range?(t.range===!0&&(t.values?t.values.length&&2!==t.values.length?t.values=[t.values[0],t.values[0]]:e.isArray(t.values)&&(t.values=t.values.slice(0)):t.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?(this._removeClass(this.range,"ui-slider-range-min ui-slider-range-max"),this.range.css({left:"",bottom:""})):(this.range=e("<div>").appendTo(this.element),this._addClass(this.range,"ui-slider-range")),("min"===t.range||"max"===t.range)&&this._addClass(this.range,"ui-slider-range-"+t.range)):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this._mouseDestroy()},_mouseCapture:function(t){var i,n,s,a,o,r,l,h,u=this,c=this.options;return!c.disabled&&(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:t.pageX,y:t.pageY},n=this._normValueFromMouse(i),s=this._valueMax()-this._valueMin()+1,this.handles.each(function(t){var i=Math.abs(n-u.values(t));(s>i||s===i&&(t===u._lastChangedValue||u.values(t)===c.min))&&(s=i,a=e(this),o=t)}),r=this._start(t,o),r!==!1&&(this._mouseSliding=!0,this._handleIndex=o,this._addClass(a,null,"ui-state-active"),a.trigger("focus"),l=a.offset(),h=!e(t.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=h?{left:0,top:0}:{left:t.pageX-l.left-a.width()/2,top:t.pageY-l.top-a.height()/2-(parseInt(a.css("borderTopWidth"),10)||0)-(parseInt(a.css("borderBottomWidth"),10)||0)+(parseInt(a.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(t,o,n),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(e){var t={x:e.pageX,y:e.pageY},i=this._normValueFromMouse(t);return this._slide(e,this._handleIndex,i),!1},_mouseStop:function(e){return this._removeClass(this.handles,null,"ui-state-active"),this._mouseSliding=!1,this._stop(e,this._handleIndex),this._change(e,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(e){var t,i,n,s,a;return"horizontal"===this.orientation?(t=this.elementSize.width,i=e.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(t=this.elementSize.height,i=e.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),n=i/t,n>1&&(n=1),0>n&&(n=0),"vertical"===this.orientation&&(n=1-n),s=this._valueMax()-this._valueMin(),a=this._valueMin()+n*s,this._trimAlignValue(a)},_uiHash:function(e,t,i){var n={handle:this.handles[e],handleIndex:e,value:void 0!==t?t:this.value()};return this._hasMultipleValues()&&(n.value=void 0!==t?t:this.values(e),n.values=i||this.values()),n},_hasMultipleValues:function(){return this.options.values&&this.options.values.length},_start:function(e,t){return this._trigger("start",e,this._uiHash(t))},_slide:function(e,t,i){var n,s,a=this.value(),o=this.values();this._hasMultipleValues()&&(s=this.values(t?0:1),a=this.values(t),2===this.options.values.length&&this.options.range===!0&&(i=0===t?Math.min(s,i):Math.max(s,i)),o[t]=i),i!==a&&(n=this._trigger("slide",e,this._uiHash(t,i,o)),n!==!1&&(this._hasMultipleValues()?this.values(t,i):this.value(i)))},_stop:function(e,t){this._trigger("stop",e,this._uiHash(t))},_change:function(e,t){this._keySliding||this._mouseSliding||(this._lastChangedValue=t,this._trigger("change",e,this._uiHash(t)))},value:function(e){return arguments.length?(this.options.value=this._trimAlignValue(e),this._refreshValue(),void this._change(null,0)):this._value()},values:function(t,i){var n,s,a;if(arguments.length>1)return this.options.values[t]=this._trimAlignValue(i),this._refreshValue(),void this._change(null,t);if(!arguments.length)return this._values();if(!e.isArray(arguments[0]))return this._hasMultipleValues()?this._values(t):this.value();for(n=this.options.values,s=arguments[0],a=0;n.length>a;a+=1)n[a]=this._trimAlignValue(s[a]),this._change(null,a);this._refreshValue()},_setOption:function(t,i){var n,s=0;switch("range"===t&&this.options.range===!0&&("min"===i?(this.options.value=this._values(0),this.options.values=null):"max"===i&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),e.isArray(this.options.values)&&(s=this.options.values.length),this._super(t,i),t){case"orientation":this._detectOrientation(),this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-"+this.orientation),this._refreshValue(),this.options.range&&this._refreshRange(i),this.handles.css("horizontal"===i?"bottom":"left","");break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),n=s-1;n>=0;n--)this._change(null,n);this._animateOff=!1;break;case"step":case"min":case"max":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_setOptionDisabled:function(e){this._super(e),this._toggleClass(null,"ui-state-disabled",!!e)},_value:function(){var e=this.options.value;return e=this._trimAlignValue(e)},_values:function(e){var t,i,n;if(arguments.length)return t=this.options.values[e],t=this._trimAlignValue(t);if(this._hasMultipleValues()){for(i=this.options.values.slice(),n=0;i.length>n;n+=1)i[n]=this._trimAlignValue(i[n]);return i}return[]},_trimAlignValue:function(e){if(this._valueMin()>=e)return this._valueMin();if(e>=this._valueMax())return this._valueMax();var t=this.options.step>0?this.options.step:1,i=(e-this._valueMin())%t,n=e-i;return 2*Math.abs(i)>=t&&(n+=i>0?t:-t),parseFloat(n.toFixed(5))},_calculateNewMax:function(){var e=this.options.max,t=this._valueMin(),i=this.options.step,n=Math.round((e-t)/i)*i;e=n+t,e>this.options.max&&(e-=i),this.max=parseFloat(e.toFixed(this._precision()))},_precision:function(){var e=this._precisionOf(this.options.step);return null!==this.options.min&&(e=Math.max(e,this._precisionOf(this.options.min))),e},_precisionOf:function(e){var t=""+e,i=t.indexOf(".");return-1===i?0:t.length-i-1},_valueMin:function(){return this.options.min},_valueMax:function(){return this.max},_refreshRange:function(e){"vertical"===e&&this.range.css({width:"",left:""}),"horizontal"===e&&this.range.css({height:"",bottom:""})},_refreshValue:function(){var t,i,n,s,a,o=this.options.range,r=this.options,l=this,h=!this._animateOff&&r.animate,u={};this._hasMultipleValues()?this.handles.each(function(n){i=100*((l.values(n)-l._valueMin())/(l._valueMax()-l._valueMin())),u["horizontal"===l.orientation?"left":"bottom"]=i+"%",e(this).stop(1,1)[h?"animate":"css"](u,r.animate),l.options.range===!0&&("horizontal"===l.orientation?(0===n&&l.range.stop(1,1)[h?"animate":"css"]({left:i+"%"},r.animate),1===n&&l.range[h?"animate":"css"]({width:i-t+"%"},{queue:!1,duration:r.animate})):(0===n&&l.range.stop(1,1)[h?"animate":"css"]({bottom:i+"%"},r.animate),1===n&&l.range[h?"animate":"css"]({height:i-t+"%"},{queue:!1,duration:r.animate}))),t=i}):(n=this.value(),s=this._valueMin(),a=this._valueMax(),i=a!==s?100*((n-s)/(a-s)):0,u["horizontal"===this.orientation?"left":"bottom"]=i+"%",this.handle.stop(1,1)[h?"animate":"css"](u,r.animate),"min"===o&&"horizontal"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({width:i+"%"},r.animate),"max"===o&&"horizontal"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({width:100-i+"%"},r.animate),"min"===o&&"vertical"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({height:i+"%"},r.animate),"max"===o&&"vertical"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({height:100-i+"%"},r.animate))},_handleEvents:{keydown:function(t){var i,n,s,a,o=e(t.target).data("ui-slider-handle-index");switch(t.keyCode){case e.ui.keyCode.HOME:case e.ui.keyCode.END:case e.ui.keyCode.PAGE_UP:case e.ui.keyCode.PAGE_DOWN:case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(t.preventDefault(),!this._keySliding&&(this._keySliding=!0,this._addClass(e(t.target),null,"ui-state-active"),i=this._start(t,o),i===!1))return}switch(a=this.options.step,n=s=this._hasMultipleValues()?this.values(o):this.value(),t.keyCode){case e.ui.keyCode.HOME:s=this._valueMin();break;case e.ui.keyCode.END:s=this._valueMax();break;case e.ui.keyCode.PAGE_UP:s=this._trimAlignValue(n+(this._valueMax()-this._valueMin())/this.numPages);break;case e.ui.keyCode.PAGE_DOWN:s=this._trimAlignValue(n-(this._valueMax()-this._valueMin())/this.numPages);break;case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:if(n===this._valueMax())return;s=this._trimAlignValue(n+a);break;case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(n===this._valueMin())return;s=this._trimAlignValue(n-a)}this._slide(t,o,s)},keyup:function(t){var i=e(t.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(t,i),this._change(t,i),this._removeClass(e(t.target),null,"ui-state-active"))}}}),e.widget("ui.sortable",e.ui.mouse,{version:"1.12.0",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function(e,t,i){return e>=t&&t+i>e},_isFloating:function(e){return/left|right/.test(e.css("float"))||/inline|table-cell/.test(e.css("display"))},_create:function(){this.containerCache={},this._addClass("ui-sortable"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0},_setOption:function(e,t){this._super(e,t),"handle"===e&&this._setHandleClassName()},_setHandleClassName:function(){var t=this;this._removeClass(this.element.find(".ui-sortable-handle"),"ui-sortable-handle"),e.each(this.items,function(){t._addClass(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item,"ui-sortable-handle")})},_destroy:function(){this._mouseDestroy();for(var e=this.items.length-1;e>=0;e--)this.items[e].item.removeData(this.widgetName+"-item");return this},_mouseCapture:function(t,i){var n=null,s=!1,a=this;return!this.reverting&&(!this.options.disabled&&"static"!==this.options.type&&(this._refreshItems(t),e(t.target).parents().each(function(){return e.data(this,a.widgetName+"-item")===a?(n=e(this),!1):void 0}),e.data(t.target,a.widgetName+"-item")===a&&(n=e(t.target)),!!n&&(!(this.options.handle&&!i&&(e(this.options.handle,n).find("*").addBack().each(function(){this===t.target&&(s=!0)}),!s))&&(this.currentItem=n,this._removeCurrentsFromItems(),!0))))},_mouseStart:function(t,i,n){var s,a,o=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(t),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,o.cursorAt&&this._adjustOffsetFromHelper(o.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),o.containment&&this._setContainment(),o.cursor&&"auto"!==o.cursor&&(a=this.document.find("body"),this.storedCursor=a.css("cursor"),a.css("cursor",o.cursor),this.storedStylesheet=e("<style>*{ cursor: "+o.cursor+" !important; }</style>").appendTo(a)),o.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",o.opacity)),o.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",o.zIndex)),this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",t,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!n)for(s=this.containers.length-1;s>=0;s--)this.containers[s]._trigger("activate",t,this._uiHash(this));return e.ui.ddmanager&&(e.ui.ddmanager.current=this),e.ui.ddmanager&&!o.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this.dragging=!0,this._addClass(this.helper,"ui-sortable-helper"),this._mouseDrag(t),!0},_mouseDrag:function(t){var i,n,s,a,o=this.options,r=!1;for(this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-t.pageY<o.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+o.scrollSpeed:t.pageY-this.overflowOffset.top<o.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-o.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-t.pageX<o.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+o.scrollSpeed:t.pageX-this.overflowOffset.left<o.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-o.scrollSpeed)):(t.pageY-this.document.scrollTop()<o.scrollSensitivity?r=this.document.scrollTop(this.document.scrollTop()-o.scrollSpeed):this.window.height()-(t.pageY-this.document.scrollTop())<o.scrollSensitivity&&(r=this.document.scrollTop(this.document.scrollTop()+o.scrollSpeed)),t.pageX-this.document.scrollLeft()<o.scrollSensitivity?r=this.document.scrollLeft(this.document.scrollLeft()-o.scrollSpeed):this.window.width()-(t.pageX-this.document.scrollLeft())<o.scrollSensitivity&&(r=this.document.scrollLeft(this.document.scrollLeft()+o.scrollSpeed))),r!==!1&&e.ui.ddmanager&&!o.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t)),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),i=this.items.length-1;i>=0;i--)if(n=this.items[i],s=n.item[0],a=this._intersectsWithPointer(n),a&&n.instance===this.currentContainer&&s!==this.currentItem[0]&&this.placeholder[1===a?"next":"prev"]()[0]!==s&&!e.contains(this.placeholder[0],s)&&("semi-dynamic"!==this.options.type||!e.contains(this.element[0],s))){if(this.direction=1===a?"down":"up","pointer"!==this.options.tolerance&&!this._intersectsWithSides(n))break;this._rearrange(t,n),this._trigger("change",t,this._uiHash());break}return this._contactContainers(t),e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),this._trigger("sort",t,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(t,i){if(t){if(e.ui.ddmanager&&!this.options.dropBehaviour&&e.ui.ddmanager.drop(this,t),this.options.revert){var n=this,s=this.placeholder.offset(),a=this.options.axis,o={};a&&"x"!==a||(o.left=s.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),a&&"y"!==a||(o.top=s.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,e(this.helper).animate(o,parseInt(this.options.revert,10)||500,function(){n._clear(t)})}else this._clear(t,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp({target:null}),"original"===this.options.helper?(this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")):this.currentItem.show();for(var t=this.containers.length-1;t>=0;t--)this.containers[t]._trigger("deactivate",null,this._uiHash(this)),this.containers[t].containerCache.over&&(this.containers[t]._trigger("out",null,this._uiHash(this)),this.containers[t].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),e.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?e(this.domPosition.prev).after(this.currentItem):e(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(t){var i=this._getItemsAsjQuery(t&&t.connected),n=[];return t=t||{},e(i).each(function(){var i=(e(t.item||this).attr(t.attribute||"id")||"").match(t.expression||/(.+)[\-=_](.+)/);i&&n.push((t.key||i[1]+"[]")+"="+(t.key&&t.expression?i[1]:i[2]))}),!n.length&&t.key&&n.push(t.key+"="),n.join("&")},toArray:function(t){var i=this._getItemsAsjQuery(t&&t.connected),n=[];return t=t||{},i.each(function(){n.push(e(t.item||this).attr(t.attribute||"id")||"")}),n},_intersectsWith:function(e){var t=this.positionAbs.left,i=t+this.helperProportions.width,n=this.positionAbs.top,s=n+this.helperProportions.height,a=e.left,o=a+e.width,r=e.top,l=r+e.height,h=this.offset.click.top,u=this.offset.click.left,c="x"===this.options.axis||n+h>r&&l>n+h,d="y"===this.options.axis||t+u>a&&o>t+u,p=c&&d;return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>e[this.floating?"width":"height"]?p:t+this.helperProportions.width/2>a&&o>i-this.helperProportions.width/2&&n+this.helperProportions.height/2>r&&l>s-this.helperProportions.height/2},_intersectsWithPointer:function(e){var t,i,n="x"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,e.top,e.height),s="y"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,e.left,e.width),a=n&&s;return!!a&&(t=this._getDragVerticalDirection(),i=this._getDragHorizontalDirection(),this.floating?"right"===i||"down"===t?2:1:t&&("down"===t?2:1))},_intersectsWithSides:function(e){var t=this._isOverAxis(this.positionAbs.top+this.offset.click.top,e.top+e.height/2,e.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,e.left+e.width/2,e.width),n=this._getDragVerticalDirection(),s=this._getDragHorizontalDirection();return this.floating&&s?"right"===s&&i||"left"===s&&!i:n&&("down"===n&&t||"up"===n&&!t)},_getDragVerticalDirection:function(){var e=this.positionAbs.top-this.lastPositionAbs.top;return 0!==e&&(e>0?"down":"up")},_getDragHorizontalDirection:function(){var e=this.positionAbs.left-this.lastPositionAbs.left;return 0!==e&&(e>0?"right":"left")},refresh:function(e){return this._refreshItems(e),this._setHandleClassName(),this.refreshPositions(),this},_connectWith:function(){var e=this.options;return e.connectWith.constructor===String?[e.connectWith]:e.connectWith},_getItemsAsjQuery:function(t){function i(){r.push(this)}var n,s,a,o,r=[],l=[],h=this._connectWith();if(h&&t)for(n=h.length-1;n>=0;n--)for(a=e(h[n],this.document[0]),s=a.length-1;s>=0;s--)o=e.data(a[s],this.widgetFullName),o&&o!==this&&!o.options.disabled&&l.push([e.isFunction(o.options.items)?o.options.items.call(o.element):e(o.options.items,o.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),o]);for(l.push([e.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):e(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),n=l.length-1;n>=0;n--)l[n][0].each(i);return e(r)},_removeCurrentsFromItems:function(){var t=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=e.grep(this.items,function(e){for(var i=0;t.length>i;i++)if(t[i]===e.item[0])return!1;return!0})},_refreshItems:function(t){this.items=[],this.containers=[this];var i,n,s,a,o,r,l,h,u=this.items,c=[[e.isFunction(this.options.items)?this.options.items.call(this.element[0],t,{item:this.currentItem}):e(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(s=e(d[i],this.document[0]),n=s.length-1;n>=0;n--)a=e.data(s[n],this.widgetFullName),a&&a!==this&&!a.options.disabled&&(c.push([e.isFunction(a.options.items)?a.options.items.call(a.element[0],t,{item:this.currentItem}):e(a.options.items,a.element),a]),this.containers.push(a));for(i=c.length-1;i>=0;i--)for(o=c[i][1],r=c[i][0],n=0,h=r.length;h>n;n++)l=e(r[n]),l.data(this.widgetName+"-item",o),u.push({item:l,instance:o,width:0,height:0,left:0,top:0})},refreshPositions:function(t){this.floating=!!this.items.length&&("x"===this.options.axis||this._isFloating(this.items[0].item)),this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,n,s,a;for(i=this.items.length-1;i>=0;i--)n=this.items[i],n.instance!==this.currentContainer&&this.currentContainer&&n.item[0]!==this.currentItem[0]||(s=this.options.toleranceElement?e(this.options.toleranceElement,n.item):n.item,t||(n.width=s.outerWidth(),n.height=s.outerHeight()),a=s.offset(),n.left=a.left,n.top=a.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)a=this.containers[i].element.offset(),this.containers[i].containerCache.left=a.left,this.containers[i].containerCache.top=a.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(t){t=t||this;var i,n=t.options;n.placeholder&&n.placeholder.constructor!==String||(i=n.placeholder,n.placeholder={element:function(){var n=t.currentItem[0].nodeName.toLowerCase(),s=e("<"+n+">",t.document[0]);return t._addClass(s,"ui-sortable-placeholder",i||t.currentItem[0].className)._removeClass(s,"ui-sortable-helper"),"tbody"===n?t._createTrPlaceholder(t.currentItem.find("tr").eq(0),e("<tr>",t.document[0]).appendTo(s)):"tr"===n?t._createTrPlaceholder(t.currentItem,s):"img"===n&&s.attr("src",t.currentItem.attr("src")),i||s.css("visibility","hidden"),s},update:function(e,s){(!i||n.forcePlaceholderSize)&&(s.height()||s.height(t.currentItem.innerHeight()-parseInt(t.currentItem.css("paddingTop")||0,10)-parseInt(t.currentItem.css("paddingBottom")||0,10)),s.width()||s.width(t.currentItem.innerWidth()-parseInt(t.currentItem.css("paddingLeft")||0,10)-parseInt(t.currentItem.css("paddingRight")||0,10)))}}),t.placeholder=e(n.placeholder.element.call(t.element,t.currentItem)),t.currentItem.after(t.placeholder),n.placeholder.update(t,t.placeholder)},_createTrPlaceholder:function(t,i){var n=this;t.children().each(function(){e("<td>&#160;</td>",n.document[0]).attr("colspan",e(this).attr("colspan")||1).appendTo(i)})},_contactContainers:function(t){var i,n,s,a,o,r,l,h,u,c,d=null,p=null;for(i=this.containers.length-1;i>=0;i--)if(!e.contains(this.currentItem[0],this.containers[i].element[0]))if(this._intersectsWith(this.containers[i].containerCache)){if(d&&e.contains(this.containers[i].element[0],d.element[0]))continue;d=this.containers[i],p=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger("out",t,this._uiHash(this)),this.containers[i].containerCache.over=0);if(d)if(1===this.containers.length)this.containers[p].containerCache.over||(this.containers[p]._trigger("over",t,this._uiHash(this)),this.containers[p].containerCache.over=1);else{for(s=1e4,a=null,u=d.floating||this._isFloating(this.currentItem),o=u?"left":"top",r=u?"width":"height",c=u?"pageX":"pageY",n=this.items.length-1;n>=0;n--)e.contains(this.containers[p].element[0],this.items[n].item[0])&&this.items[n].item[0]!==this.currentItem[0]&&(l=this.items[n].item.offset()[o],h=!1,t[c]-l>this.items[n][r]/2&&(h=!0),s>Math.abs(t[c]-l)&&(s=Math.abs(t[c]-l),a=this.items[n],this.direction=h?"up":"down"));if(!a&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[p])return void(this.currentContainer.containerCache.over||(this.containers[p]._trigger("over",t,this._uiHash()),this.currentContainer.containerCache.over=1));a?this._rearrange(t,a,null,!0):this._rearrange(t,null,this.containers[p].element,!0),this._trigger("change",t,this._uiHash()),this.containers[p]._trigger("change",t,this._uiHash(this)),this.currentContainer=this.containers[p],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[p]._trigger("over",t,this._uiHash(this)),this.containers[p].containerCache.over=1}},_createHelper:function(t){var i=this.options,n=e.isFunction(i.helper)?e(i.helper.apply(this.element[0],[t,this.currentItem])):"clone"===i.helper?this.currentItem.clone():this.currentItem;return n.parents("body").length||e("parent"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(n[0]),n[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(!n[0].style.width||i.forceHelperSize)&&n.width(this.currentItem.width()),(!n[0].style.height||i.forceHelperSize)&&n.height(this.currentItem.height()),n},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&e.ui.ie)&&(t={top:0,left:0}),{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var e=this.currentItem.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t,i,n,s=this.options;"parent"===s.containment&&(s.containment=this.helper[0].parentNode),("document"===s.containment||"window"===s.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,"document"===s.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,("document"===s.containment?this.document.height()||document.body.parentNode.scrollHeight:this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(s.containment)||(t=e(s.containment)[0],i=e(s.containment).offset(),n="hidden"!==e(t).css("overflow"),this.containment=[i.left+(parseInt(e(t).css("borderLeftWidth"),10)||0)+(parseInt(e(t).css("paddingLeft"),10)||0)-this.margins.left,i.top+(parseInt(e(t).css("borderTopWidth"),10)||0)+(parseInt(e(t).css("paddingTop"),10)||0)-this.margins.top,i.left+(n?Math.max(t.scrollWidth,t.offsetWidth):t.offsetWidth)-(parseInt(e(t).css("borderLeftWidth"),10)||0)-(parseInt(e(t).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(n?Math.max(t.scrollHeight,t.offsetHeight):t.offsetHeight)-(parseInt(e(t).css("borderTopWidth"),10)||0)-(parseInt(e(t).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(t,i){i||(i=this.position);var n="absolute"===t?1:-1,s="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,a=/(html|body)/i.test(s[0].tagName);
return{top:i.top+this.offset.relative.top*n+this.offset.parent.top*n-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():a?0:s.scrollTop())*n,left:i.left+this.offset.relative.left*n+this.offset.parent.left*n-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():a?0:s.scrollLeft())*n}},_generatePosition:function(t){var i,n,s=this.options,a=t.pageX,o=t.pageY,r="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,l=/(html|body)/i.test(r[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(t.pageX-this.offset.click.left<this.containment[0]&&(a=this.containment[0]+this.offset.click.left),t.pageY-this.offset.click.top<this.containment[1]&&(o=this.containment[1]+this.offset.click.top),t.pageX-this.offset.click.left>this.containment[2]&&(a=this.containment[2]+this.offset.click.left),t.pageY-this.offset.click.top>this.containment[3]&&(o=this.containment[3]+this.offset.click.top)),s.grid&&(i=this.originalPageY+Math.round((o-this.originalPageY)/s.grid[1])*s.grid[1],o=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-s.grid[1]:i+s.grid[1]:i,n=this.originalPageX+Math.round((a-this.originalPageX)/s.grid[0])*s.grid[0],a=this.containment?n-this.offset.click.left>=this.containment[0]&&n-this.offset.click.left<=this.containment[2]?n:n-this.offset.click.left>=this.containment[0]?n-s.grid[0]:n+s.grid[0]:n)),{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():l?0:r.scrollTop()),left:a-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():l?0:r.scrollLeft())}},_rearrange:function(e,t,i,n){i?i[0].appendChild(this.placeholder[0]):t.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?t.item[0]:t.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var s=this.counter;this._delay(function(){s===this.counter&&this.refreshPositions(!n)})},_clear:function(e,t){function i(e,t,i){return function(n){i._trigger(e,n,t._uiHash(t))}}this.reverting=!1;var n,s=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(n in this._storedCSS)("auto"===this._storedCSS[n]||"static"===this._storedCSS[n])&&(this._storedCSS[n]="");this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")}else this.currentItem.show();for(this.fromOutside&&!t&&s.push(function(e){this._trigger("receive",e,this._uiHash(this.fromOutside))}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||t||s.push(function(e){this._trigger("update",e,this._uiHash())}),this!==this.currentContainer&&(t||(s.push(function(e){this._trigger("remove",e,this._uiHash())}),s.push(function(e){return function(t){e._trigger("receive",t,this._uiHash(this))}}.call(this,this.currentContainer)),s.push(function(e){return function(t){e._trigger("update",t,this._uiHash(this))}}.call(this,this.currentContainer)))),n=this.containers.length-1;n>=0;n--)t||s.push(i("deactivate",this,this.containers[n])),this.containers[n].containerCache.over&&(s.push(i("out",this,this.containers[n])),this.containers[n].containerCache.over=0);if(this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,t||this._trigger("beforeStop",e,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!t){for(n=0;s.length>n;n++)s[n].call(this,e);this._trigger("stop",e,this._uiHash())}return this.fromOutside=!1,!this.cancelHelperRemoval},_trigger:function(){e.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(t){var i=t||this;return{helper:i.helper,placeholder:i.placeholder||e([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:t?t.element:null}}}),e.widget("ui.spinner",{version:"1.12.0",defaultElement:"<input>",widgetEventPrefix:"spin",options:{classes:{"ui-spinner":"ui-corner-all","ui-spinner-down":"ui-corner-br","ui-spinner-up":"ui-corner-tr"},culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),""!==this.value()&&this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var t=this._super(),i=this.element;return e.each(["min","max","step"],function(e,n){var s=i.attr(n);null!=s&&s.length&&(t[n]=s)}),t},_events:{keydown:function(e){this._start(e)&&this._keydown(e)&&e.preventDefault()},keyup:"_stop",focus:function(){this.previous=this.element.val()},blur:function(e){return this.cancelBlur?void delete this.cancelBlur:(this._stop(),this._refresh(),void(this.previous!==this.element.val()&&this._trigger("change",e)))},mousewheel:function(e,t){if(t){if(!this.spinning&&!this._start(e))return!1;this._spin((t>0?1:-1)*this.options.step,e),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(e)},100),e.preventDefault()}},"mousedown .ui-spinner-button":function(t){function i(){var t=this.element[0]===e.ui.safeActiveElement(this.document[0]);t||(this.element.trigger("focus"),this.previous=n,this._delay(function(){this.previous=n}))}var n;n=this.element[0]===e.ui.safeActiveElement(this.document[0])?this.previous:this.element.val(),t.preventDefault(),i.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,i.call(this)}),this._start(t)!==!1&&this._repeat(null,e(t.currentTarget).hasClass("ui-spinner-up")?1:-1,t)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(t){return e(t.currentTarget).hasClass("ui-state-active")?this._start(t)!==!1&&void this._repeat(null,e(t.currentTarget).hasClass("ui-spinner-up")?1:-1,t):void 0},"mouseleave .ui-spinner-button":"_stop"},_enhance:function(){this.uiSpinner=this.element.attr("autocomplete","off").wrap("<span>").parent().append("<a></a><a></a>")},_draw:function(){this._enhance(),this._addClass(this.uiSpinner,"ui-spinner","ui-widget ui-widget-content"),this._addClass("ui-spinner-input"),this.element.attr("role","spinbutton"),this.buttons=this.uiSpinner.children("a").attr("tabIndex",-1).attr("aria-hidden",!0).button({classes:{"ui-button":""}}),this._removeClass(this.buttons,"ui-corner-all"),this._addClass(this.buttons.first(),"ui-spinner-button ui-spinner-up"),this._addClass(this.buttons.last(),"ui-spinner-button ui-spinner-down"),this.buttons.first().button({icon:this.options.icons.up,showLabel:!1}),this.buttons.last().button({icon:this.options.icons.down,showLabel:!1}),this.buttons.height()>Math.ceil(.5*this.uiSpinner.height())&&this.uiSpinner.height()>0&&this.uiSpinner.height(this.uiSpinner.height())},_keydown:function(t){var i=this.options,n=e.ui.keyCode;switch(t.keyCode){case n.UP:return this._repeat(null,1,t),!0;case n.DOWN:return this._repeat(null,-1,t),!0;case n.PAGE_UP:return this._repeat(null,i.page,t),!0;case n.PAGE_DOWN:return this._repeat(null,-i.page,t),!0}return!1},_start:function(e){return!(!this.spinning&&this._trigger("start",e)===!1)&&(this.counter||(this.counter=1),this.spinning=!0,!0)},_repeat:function(e,t,i){e=e||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,t,i)},e),this._spin(t*this.options.step,i)},_spin:function(e,t){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+e*this._increment(this.counter)),this.spinning&&this._trigger("spin",t,{value:i})===!1||(this._value(i),this.counter++)},_increment:function(t){var i=this.options.incremental;return i?e.isFunction(i)?i(t):Math.floor(t*t*t/5e4-t*t/500+17*t/200+1):1},_precision:function(){var e=this._precisionOf(this.options.step);return null!==this.options.min&&(e=Math.max(e,this._precisionOf(this.options.min))),e},_precisionOf:function(e){var t=""+e,i=t.indexOf(".");return-1===i?0:t.length-i-1},_adjustValue:function(e){var t,i,n=this.options;return t=null!==n.min?n.min:0,i=e-t,i=Math.round(i/n.step)*n.step,e=t+i,e=parseFloat(e.toFixed(this._precision())),null!==n.max&&e>n.max?n.max:null!==n.min&&n.min>e?n.min:e},_stop:function(e){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",e))},_setOption:function(e,t){var i,n,s;return"culture"===e||"numberFormat"===e?(i=this._parse(this.element.val()),this.options[e]=t,void this.element.val(this._format(i))):(("max"===e||"min"===e||"step"===e)&&"string"==typeof t&&(t=this._parse(t)),"icons"===e&&(n=this.buttons.first().find(".ui-icon"),this._removeClass(n,null,this.options.icons.up),this._addClass(n,null,t.up),s=this.buttons.last().find(".ui-icon"),this._removeClass(s,null,this.options.icons.down),this._addClass(s,null,t.down)),void this._super(e,t))},_setOptionDisabled:function(e){this._super(e),this._toggleClass(this.uiSpinner,null,"ui-state-disabled",!!e),this.element.prop("disabled",!!e),this.buttons.button(e?"disable":"enable")},_setOptions:r(function(e){this._super(e)}),_parse:function(e){return"string"==typeof e&&""!==e&&(e=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(e,10,this.options.culture):+e),""===e||isNaN(e)?null:e},_format:function(e){return""===e?"":window.Globalize&&this.options.numberFormat?Globalize.format(e,this.options.numberFormat,this.options.culture):e},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},isValid:function(){var e=this.value();return null!==e&&e===this._adjustValue(e)},_value:function(e,t){var i;""!==e&&(i=this._parse(e),null!==i&&(t||(i=this._adjustValue(i)),e=this._format(i))),this.element.val(e),this._refresh()},_destroy:function(){this.element.prop("disabled",!1).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow"),this.uiSpinner.replaceWith(this.element)},stepUp:r(function(e){this._stepUp(e)}),_stepUp:function(e){this._start()&&(this._spin((e||1)*this.options.step),this._stop())},stepDown:r(function(e){this._stepDown(e)}),_stepDown:function(e){this._start()&&(this._spin((e||1)*-this.options.step),this._stop())},pageUp:r(function(e){this._stepUp((e||1)*this.options.page)}),pageDown:r(function(e){this._stepDown((e||1)*this.options.page)}),value:function(e){return arguments.length?void r(this._value).call(this,e):this._parse(this.element.val())},widget:function(){return this.uiSpinner}}),e.uiBackCompat!==!1&&e.widget("ui.spinner",e.ui.spinner,{_enhance:function(){this.uiSpinner=this.element.attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml())},_uiSpinnerHtml:function(){return"<span>"},_buttonHtml:function(){return"<a></a><a></a>"}}),e.ui.spinner,e.widget("ui.tabs",{version:"1.12.0",delay:300,options:{active:null,classes:{"ui-tabs":"ui-corner-all","ui-tabs-nav":"ui-corner-all","ui-tabs-panel":"ui-corner-bottom","ui-tabs-tab":"ui-corner-top"},collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_isLocal:function(){var e=/#.*$/;return function(t){var i,n;i=t.href.replace(e,""),n=location.href.replace(e,"");try{i=decodeURIComponent(i)}catch(s){}try{n=decodeURIComponent(n)}catch(s){}return t.hash.length>1&&i===n}}(),_create:function(){var t=this,i=this.options;this.running=!1,this._addClass("ui-tabs","ui-widget ui-widget-content"),this._toggleClass("ui-tabs-collapsible",null,i.collapsible),this._processTabs(),i.active=this._initialActive(),e.isArray(i.disabled)&&(i.disabled=e.unique(i.disabled.concat(e.map(this.tabs.filter(".ui-state-disabled"),function(e){return t.tabs.index(e)}))).sort()),this.active=this.options.active!==!1&&this.anchors.length?this._findActive(i.active):e(),this._refresh(),this.active.length&&this.load(i.active)},_initialActive:function(){var t=this.options.active,i=this.options.collapsible,n=location.hash.substring(1);return null===t&&(n&&this.tabs.each(function(i,s){return e(s).attr("aria-controls")===n?(t=i,!1):void 0}),null===t&&(t=this.tabs.index(this.tabs.filter(".ui-tabs-active"))),(null===t||-1===t)&&(t=!!this.tabs.length&&0)),t!==!1&&(t=this.tabs.index(this.tabs.eq(t)),-1===t&&(t=!i&&0)),!i&&t===!1&&this.anchors.length&&(t=0),t},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):e()}},_tabKeydown:function(t){var i=e(e.ui.safeActiveElement(this.document[0])).closest("li"),n=this.tabs.index(i),s=!0;if(!this._handlePageNav(t)){switch(t.keyCode){case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:n++;break;case e.ui.keyCode.UP:case e.ui.keyCode.LEFT:s=!1,n--;break;case e.ui.keyCode.END:n=this.anchors.length-1;break;case e.ui.keyCode.HOME:n=0;break;case e.ui.keyCode.SPACE:return t.preventDefault(),clearTimeout(this.activating),void this._activate(n);case e.ui.keyCode.ENTER:return t.preventDefault(),clearTimeout(this.activating),void this._activate(n!==this.options.active&&n);default:return}t.preventDefault(),clearTimeout(this.activating),n=this._focusNextTab(n,s),t.ctrlKey||t.metaKey||(i.attr("aria-selected","false"),this.tabs.eq(n).attr("aria-selected","true"),this.activating=this._delay(function(){this.option("active",n)},this.delay))}},_panelKeydown:function(t){this._handlePageNav(t)||t.ctrlKey&&t.keyCode===e.ui.keyCode.UP&&(t.preventDefault(),this.active.trigger("focus"))},_handlePageNav:function(t){return t.altKey&&t.keyCode===e.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):t.altKey&&t.keyCode===e.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):void 0},_findNextTab:function(t,i){function n(){return t>s&&(t=0),0>t&&(t=s),t}for(var s=this.tabs.length-1;-1!==e.inArray(n(),this.options.disabled);)t=i?t+1:t-1;return t},_focusNextTab:function(e,t){return e=this._findNextTab(e,t),this.tabs.eq(e).trigger("focus"),e},_setOption:function(e,t){return"active"===e?void this._activate(t):(this._super(e,t),"collapsible"===e&&(this._toggleClass("ui-tabs-collapsible",null,t),t||this.options.active!==!1||this._activate(0)),"event"===e&&this._setupEvents(t),void("heightStyle"===e&&this._setupHeightStyle(t)))},_sanitizeSelector:function(e){return e?e.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var t=this.options,i=this.tablist.children(":has(a[href])");t.disabled=e.map(i.filter(".ui-state-disabled"),function(e){return i.index(e)}),this._processTabs(),t.active!==!1&&this.anchors.length?this.active.length&&!e.contains(this.tablist[0],this.active[0])?this.tabs.length===t.disabled.length?(t.active=!1,this.active=e()):this._activate(this._findNextTab(Math.max(0,t.active-1),!1)):t.active=this.tabs.index(this.active):(t.active=!1,this.active=e()),this._refresh()},_refresh:function(){this._setOptionDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden":"true"}),this.active.length?(this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}),this._addClass(this.active,"ui-tabs-active","ui-state-active"),this._getPanelForTab(this.active).show().attr({"aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var t=this,i=this.tabs,n=this.anchors,s=this.panels;this.tablist=this._getList().attr("role","tablist"),this._addClass(this.tablist,"ui-tabs-nav","ui-helper-reset ui-helper-clearfix ui-widget-header"),this.tablist.on("mousedown"+this.eventNamespace,"> li",function(t){e(this).is(".ui-state-disabled")&&t.preventDefault()}).on("focus"+this.eventNamespace,".ui-tabs-anchor",function(){e(this).closest("li").is(".ui-state-disabled")&&this.blur()}),this.tabs=this.tablist.find("> li:has(a[href])").attr({role:"tab",tabIndex:-1}),this._addClass(this.tabs,"ui-tabs-tab","ui-state-default"),this.anchors=this.tabs.map(function(){return e("a",this)[0]}).attr({role:"presentation",tabIndex:-1}),this._addClass(this.anchors,"ui-tabs-anchor"),this.panels=e(),this.anchors.each(function(i,n){var s,a,o,r=e(n).uniqueId().attr("id"),l=e(n).closest("li"),h=l.attr("aria-controls");t._isLocal(n)?(s=n.hash,o=s.substring(1),a=t.element.find(t._sanitizeSelector(s))):(o=l.attr("aria-controls")||e({}).uniqueId()[0].id,s="#"+o,a=t.element.find(s),a.length||(a=t._createPanel(o),a.insertAfter(t.panels[i-1]||t.tablist)),a.attr("aria-live","polite")),a.length&&(t.panels=t.panels.add(a)),h&&l.data("ui-tabs-aria-controls",h),l.attr({"aria-controls":o,"aria-labelledby":r}),a.attr("aria-labelledby",r)}),this.panels.attr("role","tabpanel"),this._addClass(this.panels,"ui-tabs-panel","ui-widget-content"),i&&(this._off(i.not(this.tabs)),this._off(n.not(this.anchors)),this._off(s.not(this.panels)))},_getList:function(){return this.tablist||this.element.find("ol, ul").eq(0)},_createPanel:function(t){return e("<div>").attr("id",t).data("ui-tabs-destroy",!0)},_setOptionDisabled:function(t){var i,n,s;for(e.isArray(t)&&(t.length?t.length===this.anchors.length&&(t=!0):t=!1),s=0;n=this.tabs[s];s++)i=e(n),t===!0||-1!==e.inArray(s,t)?(i.attr("aria-disabled","true"),this._addClass(i,null,"ui-state-disabled")):(i.removeAttr("aria-disabled"),this._removeClass(i,null,"ui-state-disabled"));this.options.disabled=t,this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,t===!0)},_setupEvents:function(t){var i={};t&&e.each(t.split(" "),function(e,t){i[t]="_eventHandler"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(!0,this.anchors,{click:function(e){e.preventDefault()}}),this._on(this.anchors,i),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(t){var i,n=this.element.parent();"fill"===t?(i=n.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(":visible").each(function(){var t=e(this),n=t.css("position");"absolute"!==n&&"fixed"!==n&&(i-=t.outerHeight(!0))}),this.element.children().not(this.panels).each(function(){i-=e(this).outerHeight(!0)}),this.panels.each(function(){e(this).height(Math.max(0,i-e(this).innerHeight()+e(this).height()))}).css("overflow","auto")):"auto"===t&&(i=0,this.panels.each(function(){i=Math.max(i,e(this).height("").height())}).height(i))},_eventHandler:function(t){var i=this.options,n=this.active,s=e(t.currentTarget),a=s.closest("li"),o=a[0]===n[0],r=o&&i.collapsible,l=r?e():this._getPanelForTab(a),h=n.length?this._getPanelForTab(n):e(),u={oldTab:n,oldPanel:h,newTab:r?e():a,newPanel:l};t.preventDefault(),a.hasClass("ui-state-disabled")||a.hasClass("ui-tabs-loading")||this.running||o&&!i.collapsible||this._trigger("beforeActivate",t,u)===!1||(i.active=!r&&this.tabs.index(a),this.active=o?e():a,this.xhr&&this.xhr.abort(),h.length||l.length||e.error("jQuery UI Tabs: Mismatching fragment identifier."),l.length&&this.load(this.tabs.index(a),t),this._toggle(t,u))},_toggle:function(t,i){function n(){a.running=!1,a._trigger("activate",t,i)}function s(){a._addClass(i.newTab.closest("li"),"ui-tabs-active","ui-state-active"),o.length&&a.options.show?a._show(o,a.options.show,n):(o.show(),n())}var a=this,o=i.newPanel,r=i.oldPanel;this.running=!0,r.length&&this.options.hide?this._hide(r,this.options.hide,function(){a._removeClass(i.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),s()}):(this._removeClass(i.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),r.hide(),s()),r.attr("aria-hidden","true"),i.oldTab.attr({"aria-selected":"false","aria-expanded":"false"}),o.length&&r.length?i.oldTab.attr("tabIndex",-1):o.length&&this.tabs.filter(function(){return 0===e(this).attr("tabIndex")}).attr("tabIndex",-1),o.attr("aria-hidden","false"),i.newTab.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_activate:function(t){var i,n=this._findActive(t);n[0]!==this.active[0]&&(n.length||(n=this.active),i=n.find(".ui-tabs-anchor")[0],this._eventHandler({target:i,currentTarget:i,preventDefault:e.noop}))},_findActive:function(t){return t===!1?e():this.tabs.eq(t)},_getIndex:function(t){return"string"==typeof t&&(t=this.anchors.index(this.anchors.filter("[href$='"+e.ui.escapeSelector(t)+"']"))),t},_destroy:function(){this.xhr&&this.xhr.abort(),this.tablist.removeAttr("role").off(this.eventNamespace),this.anchors.removeAttr("role tabIndex").removeUniqueId(),this.tabs.add(this.panels).each(function(){e.data(this,"ui-tabs-destroy")?e(this).remove():e(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded")}),this.tabs.each(function(){var t=e(this),i=t.data("ui-tabs-aria-controls");i?t.attr("aria-controls",i).removeData("ui-tabs-aria-controls"):t.removeAttr("aria-controls")}),this.panels.show(),"content"!==this.options.heightStyle&&this.panels.css("height","")},enable:function(t){var i=this.options.disabled;i!==!1&&(void 0===t?i=!1:(t=this._getIndex(t),i=e.isArray(i)?e.map(i,function(e){return e!==t?e:null}):e.map(this.tabs,function(e,i){return i!==t?i:null})),this._setOptionDisabled(i))},disable:function(t){var i=this.options.disabled;if(i!==!0){if(void 0===t)i=!0;else{if(t=this._getIndex(t),-1!==e.inArray(t,i))return;i=e.isArray(i)?e.merge([t],i).sort():[t]}this._setOptionDisabled(i)}},load:function(t,i){t=this._getIndex(t);var n=this,s=this.tabs.eq(t),a=s.find(".ui-tabs-anchor"),o=this._getPanelForTab(s),r={tab:s,panel:o},l=function(e,t){"abort"===t&&n.panels.stop(!1,!0),n._removeClass(s,"ui-tabs-loading"),o.removeAttr("aria-busy"),e===n.xhr&&delete n.xhr};this._isLocal(a[0])||(this.xhr=e.ajax(this._ajaxSettings(a,i,r)),this.xhr&&"canceled"!==this.xhr.statusText&&(this._addClass(s,"ui-tabs-loading"),o.attr("aria-busy","true"),this.xhr.done(function(e,t,s){setTimeout(function(){o.html(e),n._trigger("load",i,r),l(s,t)},1)}).fail(function(e,t){setTimeout(function(){l(e,t)},1)})))},_ajaxSettings:function(t,i,n){var s=this;return{url:t.attr("href"),beforeSend:function(t,a){return s._trigger("beforeLoad",i,e.extend({jqXHR:t,ajaxSettings:a},n))}}},_getPanelForTab:function(t){var i=e(t).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+i))}}),e.uiBackCompat!==!1&&e.widget("ui.tabs",e.ui.tabs,{_processTabs:function(){this._superApply(arguments),this._addClass(this.tabs,"ui-tab")}}),e.ui.tabs,e.widget("ui.tooltip",{version:"1.12.0",options:{classes:{"ui-tooltip":"ui-corner-all ui-widget-shadow"},content:function(){var t=e(this).attr("title")||"";return e("<a>").text(t).html()},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:!0,track:!1,close:null,open:null},_addDescribedBy:function(t,i){var n=(t.attr("aria-describedby")||"").split(/\s+/);n.push(i),t.data("ui-tooltip-id",i).attr("aria-describedby",e.trim(n.join(" ")))},_removeDescribedBy:function(t){var i=t.data("ui-tooltip-id"),n=(t.attr("aria-describedby")||"").split(/\s+/),s=e.inArray(i,n);-1!==s&&n.splice(s,1),t.removeData("ui-tooltip-id"),n=e.trim(n.join(" ")),n?t.attr("aria-describedby",n):t.removeAttr("aria-describedby")},_create:function(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={},this.parents={},this.liveRegion=e("<div>").attr({role:"log","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this.disabledTitles=e([])},_setOption:function(t,i){var n=this;this._super(t,i),"content"===t&&e.each(this.tooltips,function(e,t){n._updateContent(t.element)})},_setOptionDisabled:function(e){this[e?"_disable":"_enable"]()},_disable:function(){var t=this;e.each(this.tooltips,function(i,n){var s=e.Event("blur");s.target=s.currentTarget=n.element[0],t.close(s,!0)}),this.disabledTitles=this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function(){var t=e(this);return t.is("[title]")?t.data("ui-tooltip-title",t.attr("title")).removeAttr("title"):void 0}))},_enable:function(){this.disabledTitles.each(function(){var t=e(this);t.data("ui-tooltip-title")&&t.attr("title",t.data("ui-tooltip-title"))}),this.disabledTitles=e([])},open:function(t){var i=this,n=e(t?t.target:this.element).closest(this.options.items);n.length&&!n.data("ui-tooltip-id")&&(n.attr("title")&&n.data("ui-tooltip-title",n.attr("title")),n.data("ui-tooltip-open",!0),t&&"mouseover"===t.type&&n.parents().each(function(){var t,n=e(this);n.data("ui-tooltip-open")&&(t=e.Event("blur"),t.target=t.currentTarget=this,i.close(t,!0)),n.attr("title")&&(n.uniqueId(),i.parents[this.id]={element:this,title:n.attr("title")},n.attr("title",""))}),this._registerCloseHandlers(t,n),this._updateContent(n,t))},_updateContent:function(e,t){var i,n=this.options.content,s=this,a=t?t.type:null;return"string"==typeof n||n.nodeType||n.jquery?this._open(t,e,n):(i=n.call(e[0],function(i){s._delay(function(){e.data("ui-tooltip-open")&&(t&&(t.type=a),this._open(t,e,i))})}),void(i&&this._open(t,e,i)))},_open:function(t,i,n){function s(e){h.of=e,o.is(":hidden")||o.position(h)}var a,o,r,l,h=e.extend({},this.options.position);if(n){if(a=this._find(i))return void a.tooltip.find(".ui-tooltip-content").html(n);i.is("[title]")&&(t&&"mouseover"===t.type?i.attr("title",""):i.removeAttr("title")),a=this._tooltip(i),o=a.tooltip,this._addDescribedBy(i,o.attr("id")),o.find(".ui-tooltip-content").html(n),this.liveRegion.children().hide(),l=e("<div>").html(o.find(".ui-tooltip-content").html()),l.removeAttr("name").find("[name]").removeAttr("name"),l.removeAttr("id").find("[id]").removeAttr("id"),l.appendTo(this.liveRegion),this.options.track&&t&&/^mouse/.test(t.type)?(this._on(this.document,{mousemove:s}),s(t)):o.position(e.extend({of:i},this.options.position)),o.hide(),this._show(o,this.options.show),this.options.track&&this.options.show&&this.options.show.delay&&(r=this.delayedShow=setInterval(function(){o.is(":visible")&&(s(h.of),clearInterval(r))},e.fx.interval)),this._trigger("open",t,{tooltip:o})}},_registerCloseHandlers:function(t,i){var n={keyup:function(t){if(t.keyCode===e.ui.keyCode.ESCAPE){var n=e.Event(t);n.currentTarget=i[0],this.close(n,!0)}}};i[0]!==this.element[0]&&(n.remove=function(){this._removeTooltip(this._find(i).tooltip)}),t&&"mouseover"!==t.type||(n.mouseleave="close"),t&&"focusin"!==t.type||(n.focusout="close"),this._on(!0,i,n)},close:function(t){var i,n=this,s=e(t?t.currentTarget:this.element),a=this._find(s);return a?(i=a.tooltip,void(a.closing||(clearInterval(this.delayedShow),s.data("ui-tooltip-title")&&!s.attr("title")&&s.attr("title",s.data("ui-tooltip-title")),this._removeDescribedBy(s),a.hiding=!0,i.stop(!0),this._hide(i,this.options.hide,function(){n._removeTooltip(e(this))}),s.removeData("ui-tooltip-open"),this._off(s,"mouseleave focusout keyup"),s[0]!==this.element[0]&&this._off(s,"remove"),this._off(this.document,"mousemove"),t&&"mouseleave"===t.type&&e.each(this.parents,function(t,i){e(i.element).attr("title",i.title),delete n.parents[t]}),a.closing=!0,this._trigger("close",t,{tooltip:i}),a.hiding||(a.closing=!1)))):void s.removeData("ui-tooltip-open")},_tooltip:function(t){var i=e("<div>").attr("role","tooltip"),n=e("<div>").appendTo(i),s=i.uniqueId().attr("id");return this._addClass(n,"ui-tooltip-content"),this._addClass(i,"ui-tooltip","ui-widget ui-widget-content"),i.appendTo(this._appendTo(t)),this.tooltips[s]={element:t,tooltip:i}},_find:function(e){var t=e.data("ui-tooltip-id");return t?this.tooltips[t]:null},_removeTooltip:function(e){e.remove(),delete this.tooltips[e.attr("id")]},_appendTo:function(e){var t=e.closest(".ui-front, dialog");return t.length||(t=this.document[0].body),t},_destroy:function(){var t=this;e.each(this.tooltips,function(i,n){var s=e.Event("blur"),a=n.element;s.target=s.currentTarget=a[0],t.close(s,!0),e("#"+i).remove(),a.data("ui-tooltip-title")&&(a.attr("title")||a.attr("title",a.data("ui-tooltip-title")),a.removeData("ui-tooltip-title"))}),this.liveRegion.remove()}}),e.uiBackCompat!==!1&&e.widget("ui.tooltip",e.ui.tooltip,{options:{tooltipClass:null},_tooltip:function(){var e=this._superApply(arguments);return this.options.tooltipClass&&e.tooltip.addClass(this.options.tooltipClass),e}}),e.ui.tooltip}),function(){"use strict";function e(e){e.fn.swiper=function(t){var n;return e(this).each(function(){var e=new i(this,t);n||(n=e)}),n}}var t,i=function(e,s){function a(e){return Math.floor(e)}function o(){_.autoplayTimeoutId=setTimeout(function(){_.params.loop?(_.fixLoop(),_._slideNext(),_.emit("onAutoplay",_)):_.isEnd?s.autoplayStopOnLast?_.stopAutoplay():(_._slideTo(0),_.emit("onAutoplay",_)):(_._slideNext(),_.emit("onAutoplay",_))},_.params.autoplay)}function r(e,i){var n=t(e.target);if(!n.is(i))if("string"==typeof i)n=n.parents(i);else if(i.nodeType){var s;return n.parents().each(function(e,t){t===i&&(s=i)}),s?i:void 0}if(0!==n.length)return n[0]}function l(e,t){t=t||{};var i=window.MutationObserver||window.WebkitMutationObserver,n=new i(function(e){e.forEach(function(e){_.onResize(!0),_.emit("onObserverUpdate",_,e)})});n.observe(e,{attributes:"undefined"==typeof t.attributes||t.attributes,childList:"undefined"==typeof t.childList||t.childList,characterData:"undefined"==typeof t.characterData||t.characterData}),_.observers.push(n)}function h(e){e.originalEvent&&(e=e.originalEvent);var t=e.keyCode||e.charCode;if(!_.params.allowSwipeToNext&&(_.isHorizontal()&&39===t||!_.isHorizontal()&&40===t))return!1;if(!_.params.allowSwipeToPrev&&(_.isHorizontal()&&37===t||!_.isHorizontal()&&38===t))return!1;if(!(e.shiftKey||e.altKey||e.ctrlKey||e.metaKey||document.activeElement&&document.activeElement.nodeName&&("input"===document.activeElement.nodeName.toLowerCase()||"textarea"===document.activeElement.nodeName.toLowerCase()))){if(37===t||39===t||38===t||40===t){var i=!1;if(_.container.parents(".swiper-slide").length>0&&0===_.container.parents(".swiper-slide-active").length)return;var n={left:window.pageXOffset,top:window.pageYOffset},s=window.innerWidth,a=window.innerHeight,o=_.container.offset();_.rtl&&(o.left=o.left-_.container[0].scrollLeft);for(var r=[[o.left,o.top],[o.left+_.width,o.top],[o.left,o.top+_.height],[o.left+_.width,o.top+_.height]],l=0;l<r.length;l++){var h=r[l];h[0]>=n.left&&h[0]<=n.left+s&&h[1]>=n.top&&h[1]<=n.top+a&&(i=!0)}if(!i)return}_.isHorizontal()?(37!==t&&39!==t||(e.preventDefault?e.preventDefault():e.returnValue=!1),(39===t&&!_.rtl||37===t&&_.rtl)&&_.slideNext(),(37===t&&!_.rtl||39===t&&_.rtl)&&_.slidePrev()):(38!==t&&40!==t||(e.preventDefault?e.preventDefault():e.returnValue=!1),40===t&&_.slideNext(),38===t&&_.slidePrev())}}function u(e){e.originalEvent&&(e=e.originalEvent);var t=_.mousewheel.event,i=0,n=_.rtl?-1:1;if("mousewheel"===t)if(_.params.mousewheelForceToAxis)if(_.isHorizontal()){if(!(Math.abs(e.wheelDeltaX)>Math.abs(e.wheelDeltaY)))return;i=e.wheelDeltaX*n}else{if(!(Math.abs(e.wheelDeltaY)>Math.abs(e.wheelDeltaX)))return;
i=e.wheelDeltaY}else i=Math.abs(e.wheelDeltaX)>Math.abs(e.wheelDeltaY)?-e.wheelDeltaX*n:-e.wheelDeltaY;else if("DOMMouseScroll"===t)i=-e.detail;else if("wheel"===t)if(_.params.mousewheelForceToAxis)if(_.isHorizontal()){if(!(Math.abs(e.deltaX)>Math.abs(e.deltaY)))return;i=-e.deltaX*n}else{if(!(Math.abs(e.deltaY)>Math.abs(e.deltaX)))return;i=-e.deltaY}else i=Math.abs(e.deltaX)>Math.abs(e.deltaY)?-e.deltaX*n:-e.deltaY;if(0!==i){if(_.params.mousewheelInvert&&(i=-i),_.params.freeMode){var s=_.getWrapperTranslate()+i*_.params.mousewheelSensitivity,a=_.isBeginning,o=_.isEnd;if(s>=_.minTranslate()&&(s=_.minTranslate()),s<=_.maxTranslate()&&(s=_.maxTranslate()),_.setWrapperTransition(0),_.setWrapperTranslate(s),_.updateProgress(),_.updateActiveIndex(),(!a&&_.isBeginning||!o&&_.isEnd)&&_.updateClasses(),_.params.freeModeSticky?(clearTimeout(_.mousewheel.timeout),_.mousewheel.timeout=setTimeout(function(){_.slideReset()},300)):_.params.lazyLoading&&_.lazy&&_.lazy.load(),0===s||s===_.maxTranslate())return}else{if((new window.Date).getTime()-_.mousewheel.lastScrollTime>60)if(i<0)if(_.isEnd&&!_.params.loop||_.animating){if(_.params.mousewheelReleaseOnEdges)return!0}else _.slideNext();else if(_.isBeginning&&!_.params.loop||_.animating){if(_.params.mousewheelReleaseOnEdges)return!0}else _.slidePrev();_.mousewheel.lastScrollTime=(new window.Date).getTime()}return _.params.autoplay&&_.stopAutoplay(),e.preventDefault?e.preventDefault():e.returnValue=!1,!1}}function c(e,i){e=t(e);var n,s,a,o=_.rtl?-1:1;n=e.attr("data-swiper-parallax")||"0",s=e.attr("data-swiper-parallax-x"),a=e.attr("data-swiper-parallax-y"),s||a?(s=s||"0",a=a||"0"):_.isHorizontal()?(s=n,a="0"):(a=n,s="0"),s=s.indexOf("%")>=0?parseInt(s,10)*i*o+"%":s*i*o+"px",a=a.indexOf("%")>=0?parseInt(a,10)*i+"%":a*i+"px",e.transform("translate3d("+s+", "+a+",0px)")}function d(e){return 0!==e.indexOf("on")&&(e=e[0]!==e[0].toUpperCase()?"on"+e[0].toUpperCase()+e.substring(1):"on"+e),e}if(!(this instanceof i))return new i(e,s);var p={direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,autoplay:!1,autoplayDisableOnInteraction:!0,autoplayStopOnLast:!1,iOSEdgeSwipeDetection:!1,iOSEdgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",coverflow:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0},flip:{slideShadows:!0,limitRotation:!0},cube:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94},fade:{crossFade:!1},parallax:!1,scrollbar:null,scrollbarHide:!0,scrollbarDraggable:!1,scrollbarSnapOnRelease:!1,keyboardControl:!1,mousewheelControl:!1,mousewheelReleaseOnEdges:!1,mousewheelInvert:!1,mousewheelForceToAxis:!1,mousewheelSensitivity:1,hashnav:!1,breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,centeredSlides:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,onlyExternal:!1,threshold:0,touchMoveStopPropagation:!0,uniqueNavElements:!0,pagination:null,paginationElement:"span",paginationClickable:!1,paginationHide:!1,paginationBulletRender:null,paginationProgressRender:null,paginationFractionRender:null,paginationCustomRender:null,paginationType:"bullets",resistance:!0,resistanceRatio:.85,nextButton:null,prevButton:null,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,lazyLoading:!1,lazyLoadingInPrevNext:!1,lazyLoadingInPrevNextAmount:1,lazyLoadingOnTransitionStart:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,control:void 0,controlInverse:!1,controlBy:"slide",allowSwipeToPrev:!0,allowSwipeToNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",slideClass:"swiper-slide",slideActiveClass:"swiper-slide-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slidePrevClass:"swiper-slide-prev",wrapperClass:"swiper-wrapper",bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",buttonDisabledClass:"swiper-button-disabled",paginationCurrentClass:"swiper-pagination-current",paginationTotalClass:"swiper-pagination-total",paginationHiddenClass:"swiper-pagination-hidden",paginationProgressbarClass:"swiper-pagination-progressbar",observer:!1,observeParents:!1,a11y:!1,prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}",runCallbacksOnInit:!0},f=s&&s.virtualTranslate;s=s||{};var m={};for(var g in s)if("object"!=typeof s[g]||null===s[g]||(s[g].nodeType||s[g]===window||s[g]===document||"undefined"!=typeof n&&s[g]instanceof n||"undefined"!=typeof jQuery&&s[g]instanceof jQuery))m[g]=s[g];else{m[g]={};for(var v in s[g])m[g][v]=s[g][v]}for(var b in p)if("undefined"==typeof s[b])s[b]=p[b];else if("object"==typeof s[b])for(var y in p[b])"undefined"==typeof s[b][y]&&(s[b][y]=p[b][y]);var _=this;if(_.params=s,_.originalParams=m,_.classNames=[],"undefined"!=typeof t&&"undefined"!=typeof n&&(t=n),("undefined"!=typeof t||(t="undefined"==typeof n?window.Dom7||window.Zepto||window.jQuery:n))&&(_.$=t,_.currentBreakpoint=void 0,_.getActiveBreakpoint=function(){if(!_.params.breakpoints)return!1;var e,t=!1,i=[];for(e in _.params.breakpoints)_.params.breakpoints.hasOwnProperty(e)&&i.push(e);i.sort(function(e,t){return parseInt(e,10)>parseInt(t,10)});for(var n=0;n<i.length;n++)e=i[n],e>=window.innerWidth&&!t&&(t=e);return t||"max"},_.setBreakpoint=function(){var e=_.getActiveBreakpoint();if(e&&_.currentBreakpoint!==e){var t=e in _.params.breakpoints?_.params.breakpoints[e]:_.originalParams,i=_.params.loop&&t.slidesPerView!==_.params.slidesPerView;for(var n in t)_.params[n]=t[n];_.currentBreakpoint=e,i&&_.destroyLoop&&_.reLoop(!0)}},_.params.breakpoints&&_.setBreakpoint(),_.container=t(e),0!==_.container.length)){if(_.container.length>1){var w=[];return _.container.each(function(){w.push(new i(this,s))}),w}_.container[0].swiper=_,_.container.data("swiper",_),_.classNames.push("swiper-container-"+_.params.direction),_.params.freeMode&&_.classNames.push("swiper-container-free-mode"),_.support.flexbox||(_.classNames.push("swiper-container-no-flexbox"),_.params.slidesPerColumn=1),_.params.autoHeight&&_.classNames.push("swiper-container-autoheight"),(_.params.parallax||_.params.watchSlidesVisibility)&&(_.params.watchSlidesProgress=!0),["cube","coverflow","flip"].indexOf(_.params.effect)>=0&&(_.support.transforms3d?(_.params.watchSlidesProgress=!0,_.classNames.push("swiper-container-3d")):_.params.effect="slide"),"slide"!==_.params.effect&&_.classNames.push("swiper-container-"+_.params.effect),"cube"===_.params.effect&&(_.params.resistanceRatio=0,_.params.slidesPerView=1,_.params.slidesPerColumn=1,_.params.slidesPerGroup=1,_.params.centeredSlides=!1,_.params.spaceBetween=0,_.params.virtualTranslate=!0,_.params.setWrapperSize=!1),"fade"!==_.params.effect&&"flip"!==_.params.effect||(_.params.slidesPerView=1,_.params.slidesPerColumn=1,_.params.slidesPerGroup=1,_.params.watchSlidesProgress=!0,_.params.spaceBetween=0,_.params.setWrapperSize=!1,"undefined"==typeof f&&(_.params.virtualTranslate=!0)),_.params.grabCursor&&_.support.touch&&(_.params.grabCursor=!1),_.wrapper=_.container.children("."+_.params.wrapperClass),_.params.pagination&&(_.paginationContainer=t(_.params.pagination),_.params.uniqueNavElements&&"string"==typeof _.params.pagination&&_.paginationContainer.length>1&&1===_.container.find(_.params.pagination).length&&(_.paginationContainer=_.container.find(_.params.pagination)),"bullets"===_.params.paginationType&&_.params.paginationClickable?_.paginationContainer.addClass("swiper-pagination-clickable"):_.params.paginationClickable=!1,_.paginationContainer.addClass("swiper-pagination-"+_.params.paginationType)),(_.params.nextButton||_.params.prevButton)&&(_.params.nextButton&&(_.nextButton=t(_.params.nextButton),_.params.uniqueNavElements&&"string"==typeof _.params.nextButton&&_.nextButton.length>1&&1===_.container.find(_.params.nextButton).length&&(_.nextButton=_.container.find(_.params.nextButton))),_.params.prevButton&&(_.prevButton=t(_.params.prevButton),_.params.uniqueNavElements&&"string"==typeof _.params.prevButton&&_.prevButton.length>1&&1===_.container.find(_.params.prevButton).length&&(_.prevButton=_.container.find(_.params.prevButton)))),_.isHorizontal=function(){return"horizontal"===_.params.direction},_.rtl=_.isHorizontal()&&("rtl"===_.container[0].dir.toLowerCase()||"rtl"===_.container.css("direction")),_.rtl&&_.classNames.push("swiper-container-rtl"),_.rtl&&(_.wrongRTL="-webkit-box"===_.wrapper.css("display")),_.params.slidesPerColumn>1&&_.classNames.push("swiper-container-multirow"),_.device.android&&_.classNames.push("swiper-container-android"),_.container.addClass(_.classNames.join(" ")),_.translate=0,_.progress=0,_.velocity=0,_.lockSwipeToNext=function(){_.params.allowSwipeToNext=!1},_.lockSwipeToPrev=function(){_.params.allowSwipeToPrev=!1},_.lockSwipes=function(){_.params.allowSwipeToNext=_.params.allowSwipeToPrev=!1},_.unlockSwipeToNext=function(){_.params.allowSwipeToNext=!0},_.unlockSwipeToPrev=function(){_.params.allowSwipeToPrev=!0},_.unlockSwipes=function(){_.params.allowSwipeToNext=_.params.allowSwipeToPrev=!0},_.params.grabCursor&&(_.container[0].style.cursor="move",_.container[0].style.cursor="-webkit-grab",_.container[0].style.cursor="-moz-grab",_.container[0].style.cursor="grab"),_.imagesToLoad=[],_.imagesLoaded=0,_.loadImage=function(e,t,i,n,s){function a(){s&&s()}var o;e.complete&&n?a():t?(o=new window.Image,o.onload=a,o.onerror=a,i&&(o.srcset=i),t&&(o.src=t)):a()},_.preloadImages=function(){function e(){"undefined"!=typeof _&&null!==_&&(void 0!==_.imagesLoaded&&_.imagesLoaded++,_.imagesLoaded===_.imagesToLoad.length&&(_.params.updateOnImagesReady&&_.update(),_.emit("onImagesReady",_)))}_.imagesToLoad=_.container.find("img");for(var t=0;t<_.imagesToLoad.length;t++)_.loadImage(_.imagesToLoad[t],_.imagesToLoad[t].currentSrc||_.imagesToLoad[t].getAttribute("src"),_.imagesToLoad[t].srcset||_.imagesToLoad[t].getAttribute("srcset"),!0,e)},_.autoplayTimeoutId=void 0,_.autoplaying=!1,_.autoplayPaused=!1,_.startAutoplay=function(){return"undefined"==typeof _.autoplayTimeoutId&&(!!_.params.autoplay&&(!_.autoplaying&&(_.autoplaying=!0,_.emit("onAutoplayStart",_),void o())))},_.stopAutoplay=function(e){_.autoplayTimeoutId&&(_.autoplayTimeoutId&&clearTimeout(_.autoplayTimeoutId),_.autoplaying=!1,_.autoplayTimeoutId=void 0,_.emit("onAutoplayStop",_))},_.pauseAutoplay=function(e){_.autoplayPaused||(_.autoplayTimeoutId&&clearTimeout(_.autoplayTimeoutId),_.autoplayPaused=!0,0===e?(_.autoplayPaused=!1,o()):_.wrapper.transitionEnd(function(){_&&(_.autoplayPaused=!1,_.autoplaying?o():_.stopAutoplay())}))},_.minTranslate=function(){return-_.snapGrid[0]},_.maxTranslate=function(){return-_.snapGrid[_.snapGrid.length-1]},_.updateAutoHeight=function(){var e=_.slides.eq(_.activeIndex)[0];if("undefined"!=typeof e){var t=e.offsetHeight;t&&_.wrapper.css("height",t+"px")}},_.updateContainerSize=function(){var e,t;e="undefined"!=typeof _.params.width?_.params.width:_.container[0].clientWidth,t="undefined"!=typeof _.params.height?_.params.height:_.container[0].clientHeight,0===e&&_.isHorizontal()||0===t&&!_.isHorizontal()||(e=e-parseInt(_.container.css("padding-left"),10)-parseInt(_.container.css("padding-right"),10),t=t-parseInt(_.container.css("padding-top"),10)-parseInt(_.container.css("padding-bottom"),10),_.width=e,_.height=t,_.size=_.isHorizontal()?_.width:_.height)},_.updateSlidesSize=function(){_.slides=_.wrapper.children("."+_.params.slideClass),_.snapGrid=[],_.slidesGrid=[],_.slidesSizesGrid=[];var e,t=_.params.spaceBetween,i=-_.params.slidesOffsetBefore,n=0,s=0;if("undefined"!=typeof _.size){"string"==typeof t&&t.indexOf("%")>=0&&(t=parseFloat(t.replace("%",""))/100*_.size),_.virtualSize=-t,_.rtl?_.slides.css({marginLeft:"",marginTop:""}):_.slides.css({marginRight:"",marginBottom:""});var o;_.params.slidesPerColumn>1&&(o=Math.floor(_.slides.length/_.params.slidesPerColumn)===_.slides.length/_.params.slidesPerColumn?_.slides.length:Math.ceil(_.slides.length/_.params.slidesPerColumn)*_.params.slidesPerColumn,"auto"!==_.params.slidesPerView&&"row"===_.params.slidesPerColumnFill&&(o=Math.max(o,_.params.slidesPerView*_.params.slidesPerColumn)));var r,l=_.params.slidesPerColumn,h=o/l,u=h-(_.params.slidesPerColumn*h-_.slides.length);for(e=0;e<_.slides.length;e++){r=0;var c=_.slides.eq(e);if(_.params.slidesPerColumn>1){var d,p,f;"column"===_.params.slidesPerColumnFill?(p=Math.floor(e/l),f=e-p*l,(p>u||p===u&&f===l-1)&&++f>=l&&(f=0,p++),d=p+f*o/l,c.css({"-webkit-box-ordinal-group":d,"-moz-box-ordinal-group":d,"-ms-flex-order":d,"-webkit-order":d,order:d})):(f=Math.floor(e/h),p=e-f*h),c.css({"margin-top":0!==f&&_.params.spaceBetween&&_.params.spaceBetween+"px"}).attr("data-swiper-column",p).attr("data-swiper-row",f)}"none"!==c.css("display")&&("auto"===_.params.slidesPerView?(r=_.isHorizontal()?c.outerWidth(!0):c.outerHeight(!0),_.params.roundLengths&&(r=a(r))):(r=(_.size-(_.params.slidesPerView-1)*t)/_.params.slidesPerView,_.params.roundLengths&&(r=a(r)),_.isHorizontal()?_.slides[e].style.width=r+"px":_.slides[e].style.height=r+"px"),_.slides[e].swiperSlideSize=r,_.slidesSizesGrid.push(r),_.params.centeredSlides?(i=i+r/2+n/2+t,0===e&&(i=i-_.size/2-t),Math.abs(i)<.001&&(i=0),s%_.params.slidesPerGroup===0&&_.snapGrid.push(i),_.slidesGrid.push(i)):(s%_.params.slidesPerGroup===0&&_.snapGrid.push(i),_.slidesGrid.push(i),i=i+r+t),_.virtualSize+=r+t,n=r,s++)}_.virtualSize=Math.max(_.virtualSize,_.size)+_.params.slidesOffsetAfter;var m;if(_.rtl&&_.wrongRTL&&("slide"===_.params.effect||"coverflow"===_.params.effect)&&_.wrapper.css({width:_.virtualSize+_.params.spaceBetween+"px"}),_.support.flexbox&&!_.params.setWrapperSize||(_.isHorizontal()?_.wrapper.css({width:_.virtualSize+_.params.spaceBetween+"px"}):_.wrapper.css({height:_.virtualSize+_.params.spaceBetween+"px"})),_.params.slidesPerColumn>1&&(_.virtualSize=(r+_.params.spaceBetween)*o,_.virtualSize=Math.ceil(_.virtualSize/_.params.slidesPerColumn)-_.params.spaceBetween,_.wrapper.css({width:_.virtualSize+_.params.spaceBetween+"px"}),_.params.centeredSlides)){for(m=[],e=0;e<_.snapGrid.length;e++)_.snapGrid[e]<_.virtualSize+_.snapGrid[0]&&m.push(_.snapGrid[e]);_.snapGrid=m}if(!_.params.centeredSlides){for(m=[],e=0;e<_.snapGrid.length;e++)_.snapGrid[e]<=_.virtualSize-_.size&&m.push(_.snapGrid[e]);_.snapGrid=m,Math.floor(_.virtualSize-_.size)-Math.floor(_.snapGrid[_.snapGrid.length-1])>1&&_.snapGrid.push(_.virtualSize-_.size)}0===_.snapGrid.length&&(_.snapGrid=[0]),0!==_.params.spaceBetween&&(_.isHorizontal()?_.rtl?_.slides.css({marginLeft:t+"px"}):_.slides.css({marginRight:t+"px"}):_.slides.css({marginBottom:t+"px"})),_.params.watchSlidesProgress&&_.updateSlidesOffset()}},_.updateSlidesOffset=function(){for(var e=0;e<_.slides.length;e++)_.slides[e].swiperSlideOffset=_.isHorizontal()?_.slides[e].offsetLeft:_.slides[e].offsetTop},_.updateSlidesProgress=function(e){if("undefined"==typeof e&&(e=_.translate||0),0!==_.slides.length){"undefined"==typeof _.slides[0].swiperSlideOffset&&_.updateSlidesOffset();var t=-e;_.rtl&&(t=e),_.slides.removeClass(_.params.slideVisibleClass);for(var i=0;i<_.slides.length;i++){var n=_.slides[i],s=(t-n.swiperSlideOffset)/(n.swiperSlideSize+_.params.spaceBetween);if(_.params.watchSlidesVisibility){var a=-(t-n.swiperSlideOffset),o=a+_.slidesSizesGrid[i],r=a>=0&&a<_.size||o>0&&o<=_.size||a<=0&&o>=_.size;r&&_.slides.eq(i).addClass(_.params.slideVisibleClass)}n.progress=_.rtl?-s:s}}},_.updateProgress=function(e){"undefined"==typeof e&&(e=_.translate||0);var t=_.maxTranslate()-_.minTranslate(),i=_.isBeginning,n=_.isEnd;0===t?(_.progress=0,_.isBeginning=_.isEnd=!0):(_.progress=(e-_.minTranslate())/t,_.isBeginning=_.progress<=0,_.isEnd=_.progress>=1),_.isBeginning&&!i&&_.emit("onReachBeginning",_),_.isEnd&&!n&&_.emit("onReachEnd",_),_.params.watchSlidesProgress&&_.updateSlidesProgress(e),_.emit("onProgress",_,_.progress)},_.updateActiveIndex=function(){var e,t,i,n=_.rtl?_.translate:-_.translate;for(t=0;t<_.slidesGrid.length;t++)"undefined"!=typeof _.slidesGrid[t+1]?n>=_.slidesGrid[t]&&n<_.slidesGrid[t+1]-(_.slidesGrid[t+1]-_.slidesGrid[t])/2?e=t:n>=_.slidesGrid[t]&&n<_.slidesGrid[t+1]&&(e=t+1):n>=_.slidesGrid[t]&&(e=t);(e<0||"undefined"==typeof e)&&(e=0),i=Math.floor(e/_.params.slidesPerGroup),i>=_.snapGrid.length&&(i=_.snapGrid.length-1),e!==_.activeIndex&&(_.snapIndex=i,_.previousIndex=_.activeIndex,_.activeIndex=e,_.updateClasses())},_.updateClasses=function(){_.slides.removeClass(_.params.slideActiveClass+" "+_.params.slideNextClass+" "+_.params.slidePrevClass);var e=_.slides.eq(_.activeIndex);e.addClass(_.params.slideActiveClass);var i=e.next("."+_.params.slideClass).addClass(_.params.slideNextClass);_.params.loop&&0===i.length&&_.slides.eq(0).addClass(_.params.slideNextClass);var n=e.prev("."+_.params.slideClass).addClass(_.params.slidePrevClass);if(_.params.loop&&0===n.length&&_.slides.eq(-1).addClass(_.params.slidePrevClass),_.paginationContainer&&_.paginationContainer.length>0){var s,a=_.params.loop?Math.ceil((_.slides.length-2*_.loopedSlides)/_.params.slidesPerGroup):_.snapGrid.length;if(_.params.loop?(s=Math.ceil((_.activeIndex-_.loopedSlides)/_.params.slidesPerGroup),s>_.slides.length-1-2*_.loopedSlides&&(s-=_.slides.length-2*_.loopedSlides),s>a-1&&(s-=a),s<0&&"bullets"!==_.params.paginationType&&(s=a+s)):s="undefined"!=typeof _.snapIndex?_.snapIndex:_.activeIndex||0,"bullets"===_.params.paginationType&&_.bullets&&_.bullets.length>0&&(_.bullets.removeClass(_.params.bulletActiveClass),_.paginationContainer.length>1?_.bullets.each(function(){t(this).index()===s&&t(this).addClass(_.params.bulletActiveClass)}):_.bullets.eq(s).addClass(_.params.bulletActiveClass)),"fraction"===_.params.paginationType&&(_.paginationContainer.find("."+_.params.paginationCurrentClass).text(s+1),_.paginationContainer.find("."+_.params.paginationTotalClass).text(a)),"progress"===_.params.paginationType){var o=(s+1)/a,r=o,l=1;_.isHorizontal()||(l=o,r=1),_.paginationContainer.find("."+_.params.paginationProgressbarClass).transform("translate3d(0,0,0) scaleX("+r+") scaleY("+l+")").transition(_.params.speed)}"custom"===_.params.paginationType&&_.params.paginationCustomRender&&(_.paginationContainer.html(_.params.paginationCustomRender(_,s+1,a)),_.emit("onPaginationRendered",_,_.paginationContainer[0]))}_.params.loop||(_.params.prevButton&&_.prevButton&&_.prevButton.length>0&&(_.isBeginning?(_.prevButton.addClass(_.params.buttonDisabledClass),_.params.a11y&&_.a11y&&_.a11y.disable(_.prevButton)):(_.prevButton.removeClass(_.params.buttonDisabledClass),_.params.a11y&&_.a11y&&_.a11y.enable(_.prevButton))),_.params.nextButton&&_.nextButton&&_.nextButton.length>0&&(_.isEnd?(_.nextButton.addClass(_.params.buttonDisabledClass),_.params.a11y&&_.a11y&&_.a11y.disable(_.nextButton)):(_.nextButton.removeClass(_.params.buttonDisabledClass),_.params.a11y&&_.a11y&&_.a11y.enable(_.nextButton))))},_.updatePagination=function(){if(_.params.pagination&&_.paginationContainer&&_.paginationContainer.length>0){var e="";if("bullets"===_.params.paginationType){for(var t=_.params.loop?Math.ceil((_.slides.length-2*_.loopedSlides)/_.params.slidesPerGroup):_.snapGrid.length,i=0;i<t;i++)e+=_.params.paginationBulletRender?_.params.paginationBulletRender(i,_.params.bulletClass):"<"+_.params.paginationElement+' class="'+_.params.bulletClass+'"></'+_.params.paginationElement+">";_.paginationContainer.html(e),_.bullets=_.paginationContainer.find("."+_.params.bulletClass),_.params.paginationClickable&&_.params.a11y&&_.a11y&&_.a11y.initPagination()}"fraction"===_.params.paginationType&&(e=_.params.paginationFractionRender?_.params.paginationFractionRender(_,_.params.paginationCurrentClass,_.params.paginationTotalClass):'<span class="'+_.params.paginationCurrentClass+'"></span> / <span class="'+_.params.paginationTotalClass+'"></span>',_.paginationContainer.html(e)),"progress"===_.params.paginationType&&(e=_.params.paginationProgressRender?_.params.paginationProgressRender(_,_.params.paginationProgressbarClass):'<span class="'+_.params.paginationProgressbarClass+'"></span>',_.paginationContainer.html(e)),"custom"!==_.params.paginationType&&_.emit("onPaginationRendered",_,_.paginationContainer[0])}},_.update=function(e){function t(){n=Math.min(Math.max(_.translate,_.maxTranslate()),_.minTranslate()),_.setWrapperTranslate(n),_.updateActiveIndex(),_.updateClasses()}if(_.updateContainerSize(),_.updateSlidesSize(),_.updateProgress(),_.updatePagination(),_.updateClasses(),_.params.scrollbar&&_.scrollbar&&_.scrollbar.set(),e){var i,n;_.controller&&_.controller.spline&&(_.controller.spline=void 0),_.params.freeMode?(t(),_.params.autoHeight&&_.updateAutoHeight()):(i=("auto"===_.params.slidesPerView||_.params.slidesPerView>1)&&_.isEnd&&!_.params.centeredSlides?_.slideTo(_.slides.length-1,0,!1,!0):_.slideTo(_.activeIndex,0,!1,!0),i||t())}else _.params.autoHeight&&_.updateAutoHeight()},_.onResize=function(e){_.params.breakpoints&&_.setBreakpoint();var t=_.params.allowSwipeToPrev,i=_.params.allowSwipeToNext;_.params.allowSwipeToPrev=_.params.allowSwipeToNext=!0,_.updateContainerSize(),_.updateSlidesSize(),("auto"===_.params.slidesPerView||_.params.freeMode||e)&&_.updatePagination(),_.params.scrollbar&&_.scrollbar&&_.scrollbar.set(),_.controller&&_.controller.spline&&(_.controller.spline=void 0);var n=!1;if(_.params.freeMode){var s=Math.min(Math.max(_.translate,_.maxTranslate()),_.minTranslate());_.setWrapperTranslate(s),_.updateActiveIndex(),_.updateClasses(),_.params.autoHeight&&_.updateAutoHeight()}else _.updateClasses(),n=("auto"===_.params.slidesPerView||_.params.slidesPerView>1)&&_.isEnd&&!_.params.centeredSlides?_.slideTo(_.slides.length-1,0,!1,!0):_.slideTo(_.activeIndex,0,!1,!0);_.params.lazyLoading&&!n&&_.lazy&&_.lazy.load(),_.params.allowSwipeToPrev=t,_.params.allowSwipeToNext=i};var x=["mousedown","mousemove","mouseup"];window.navigator.pointerEnabled?x=["pointerdown","pointermove","pointerup"]:window.navigator.msPointerEnabled&&(x=["MSPointerDown","MSPointerMove","MSPointerUp"]),_.touchEvents={start:_.support.touch||!_.params.simulateTouch?"touchstart":x[0],move:_.support.touch||!_.params.simulateTouch?"touchmove":x[1],end:_.support.touch||!_.params.simulateTouch?"touchend":x[2]},(window.navigator.pointerEnabled||window.navigator.msPointerEnabled)&&("container"===_.params.touchEventsTarget?_.container:_.wrapper).addClass("swiper-wp8-"+_.params.direction),_.initEvents=function(e){var t=e?"off":"on",i=e?"removeEventListener":"addEventListener",n="container"===_.params.touchEventsTarget?_.container[0]:_.wrapper[0],a=_.support.touch?n:document,o=!!_.params.nested;_.browser.ie?(n[i](_.touchEvents.start,_.onTouchStart,!1),a[i](_.touchEvents.move,_.onTouchMove,o),a[i](_.touchEvents.end,_.onTouchEnd,!1)):(_.support.touch&&(n[i](_.touchEvents.start,_.onTouchStart,!1),n[i](_.touchEvents.move,_.onTouchMove,o),n[i](_.touchEvents.end,_.onTouchEnd,!1)),!s.simulateTouch||_.device.ios||_.device.android||(n[i]("mousedown",_.onTouchStart,!1),document[i]("mousemove",_.onTouchMove,o),document[i]("mouseup",_.onTouchEnd,!1))),window[i]("resize",_.onResize),_.params.nextButton&&_.nextButton&&_.nextButton.length>0&&(_.nextButton[t]("click",_.onClickNext),_.params.a11y&&_.a11y&&_.nextButton[t]("keydown",_.a11y.onEnterKey)),_.params.prevButton&&_.prevButton&&_.prevButton.length>0&&(_.prevButton[t]("click",_.onClickPrev),_.params.a11y&&_.a11y&&_.prevButton[t]("keydown",_.a11y.onEnterKey)),_.params.pagination&&_.params.paginationClickable&&(_.paginationContainer[t]("click","."+_.params.bulletClass,_.onClickIndex),_.params.a11y&&_.a11y&&_.paginationContainer[t]("keydown","."+_.params.bulletClass,_.a11y.onEnterKey)),(_.params.preventClicks||_.params.preventClicksPropagation)&&n[i]("click",_.preventClicks,!0)},_.attachEvents=function(){_.initEvents()},_.detachEvents=function(){_.initEvents(!0)},_.allowClick=!0,_.preventClicks=function(e){_.allowClick||(_.params.preventClicks&&e.preventDefault(),_.params.preventClicksPropagation&&_.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))},_.onClickNext=function(e){e.preventDefault(),_.isEnd&&!_.params.loop||_.slideNext()},_.onClickPrev=function(e){e.preventDefault(),_.isBeginning&&!_.params.loop||_.slidePrev()},_.onClickIndex=function(e){e.preventDefault();var i=t(this).index()*_.params.slidesPerGroup;_.params.loop&&(i+=_.loopedSlides),_.slideTo(i)},_.updateClickedSlide=function(e){var i=r(e,"."+_.params.slideClass),n=!1;if(i)for(var s=0;s<_.slides.length;s++)_.slides[s]===i&&(n=!0);if(!i||!n)return _.clickedSlide=void 0,void(_.clickedIndex=void 0);if(_.clickedSlide=i,_.clickedIndex=t(i).index(),_.params.slideToClickedSlide&&void 0!==_.clickedIndex&&_.clickedIndex!==_.activeIndex){var a,o=_.clickedIndex;if(_.params.loop){if(_.animating)return;a=t(_.clickedSlide).attr("data-swiper-slide-index"),_.params.centeredSlides?o<_.loopedSlides-_.params.slidesPerView/2||o>_.slides.length-_.loopedSlides+_.params.slidesPerView/2?(_.fixLoop(),o=_.wrapper.children("."+_.params.slideClass+'[data-swiper-slide-index="'+a+'"]:not(.swiper-slide-duplicate)').eq(0).index(),setTimeout(function(){_.slideTo(o)},0)):_.slideTo(o):o>_.slides.length-_.params.slidesPerView?(_.fixLoop(),o=_.wrapper.children("."+_.params.slideClass+'[data-swiper-slide-index="'+a+'"]:not(.swiper-slide-duplicate)').eq(0).index(),setTimeout(function(){_.slideTo(o)},0)):_.slideTo(o)}else _.slideTo(o)}};var C,k,T,D,S,P,M,I,E,z,N="input, select, textarea, button",A=Date.now(),H=[];_.animating=!1,_.touches={startX:0,startY:0,currentX:0,currentY:0,diff:0};var O,L;if(_.onTouchStart=function(e){if(e.originalEvent&&(e=e.originalEvent),O="touchstart"===e.type,O||!("which"in e)||3!==e.which){if(_.params.noSwiping&&r(e,"."+_.params.noSwipingClass))return void(_.allowClick=!0);if(!_.params.swipeHandler||r(e,_.params.swipeHandler)){var i=_.touches.currentX="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,n=_.touches.currentY="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY;if(!(_.device.ios&&_.params.iOSEdgeSwipeDetection&&i<=_.params.iOSEdgeSwipeThreshold)){if(C=!0,k=!1,T=!0,S=void 0,L=void 0,_.touches.startX=i,_.touches.startY=n,D=Date.now(),_.allowClick=!0,_.updateContainerSize(),_.swipeDirection=void 0,_.params.threshold>0&&(I=!1),"touchstart"!==e.type){var s=!0;t(e.target).is(N)&&(s=!1),document.activeElement&&t(document.activeElement).is(N)&&document.activeElement.blur(),s&&e.preventDefault()}_.emit("onTouchStart",_,e)}}}},_.onTouchMove=function(e){if(e.originalEvent&&(e=e.originalEvent),!O||"mousemove"!==e.type){if(e.preventedByNestedSwiper)return _.touches.startX="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,void(_.touches.startY="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY);if(_.params.onlyExternal)return _.allowClick=!1,void(C&&(_.touches.startX=_.touches.currentX="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,_.touches.startY=_.touches.currentY="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,D=Date.now()));if(O&&document.activeElement&&e.target===document.activeElement&&t(e.target).is(N))return k=!0,void(_.allowClick=!1);if(T&&_.emit("onTouchMove",_,e),!(e.targetTouches&&e.targetTouches.length>1)){if(_.touches.currentX="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,_.touches.currentY="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,"undefined"==typeof S){var i=180*Math.atan2(Math.abs(_.touches.currentY-_.touches.startY),Math.abs(_.touches.currentX-_.touches.startX))/Math.PI;S=_.isHorizontal()?i>_.params.touchAngle:90-i>_.params.touchAngle}if(S&&_.emit("onTouchMoveOpposite",_,e),"undefined"==typeof L&&_.browser.ieTouch&&(_.touches.currentX===_.touches.startX&&_.touches.currentY===_.touches.startY||(L=!0)),C){if(S)return void(C=!1);if(L||!_.browser.ieTouch){_.allowClick=!1,_.emit("onSliderMove",_,e),e.preventDefault(),_.params.touchMoveStopPropagation&&!_.params.nested&&e.stopPropagation(),k||(s.loop&&_.fixLoop(),M=_.getWrapperTranslate(),_.setWrapperTransition(0),_.animating&&_.wrapper.trigger("webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd"),_.params.autoplay&&_.autoplaying&&(_.params.autoplayDisableOnInteraction?_.stopAutoplay():_.pauseAutoplay()),z=!1,_.params.grabCursor&&(_.container[0].style.cursor="move",_.container[0].style.cursor="-webkit-grabbing",_.container[0].style.cursor="-moz-grabbin",_.container[0].style.cursor="grabbing")),k=!0;var n=_.touches.diff=_.isHorizontal()?_.touches.currentX-_.touches.startX:_.touches.currentY-_.touches.startY;n*=_.params.touchRatio,_.rtl&&(n=-n),_.swipeDirection=n>0?"prev":"next",P=n+M;var a=!0;if(n>0&&P>_.minTranslate()?(a=!1,_.params.resistance&&(P=_.minTranslate()-1+Math.pow(-_.minTranslate()+M+n,_.params.resistanceRatio))):n<0&&P<_.maxTranslate()&&(a=!1,_.params.resistance&&(P=_.maxTranslate()+1-Math.pow(_.maxTranslate()-M-n,_.params.resistanceRatio))),a&&(e.preventedByNestedSwiper=!0),!_.params.allowSwipeToNext&&"next"===_.swipeDirection&&P<M&&(P=M),!_.params.allowSwipeToPrev&&"prev"===_.swipeDirection&&P>M&&(P=M),_.params.followFinger){if(_.params.threshold>0){if(!(Math.abs(n)>_.params.threshold||I))return void(P=M);if(!I)return I=!0,_.touches.startX=_.touches.currentX,_.touches.startY=_.touches.currentY,P=M,void(_.touches.diff=_.isHorizontal()?_.touches.currentX-_.touches.startX:_.touches.currentY-_.touches.startY)}(_.params.freeMode||_.params.watchSlidesProgress)&&_.updateActiveIndex(),_.params.freeMode&&(0===H.length&&H.push({position:_.touches[_.isHorizontal()?"startX":"startY"],time:D}),H.push({position:_.touches[_.isHorizontal()?"currentX":"currentY"],time:(new window.Date).getTime()})),_.updateProgress(P),_.setWrapperTranslate(P)}}}}}},_.onTouchEnd=function(e){if(e.originalEvent&&(e=e.originalEvent),T&&_.emit("onTouchEnd",_,e),T=!1,C){_.params.grabCursor&&k&&C&&(_.container[0].style.cursor="move",_.container[0].style.cursor="-webkit-grab",_.container[0].style.cursor="-moz-grab",_.container[0].style.cursor="grab");var i=Date.now(),n=i-D;if(_.allowClick&&(_.updateClickedSlide(e),_.emit("onTap",_,e),n<300&&i-A>300&&(E&&clearTimeout(E),E=setTimeout(function(){_&&(_.params.paginationHide&&_.paginationContainer.length>0&&!t(e.target).hasClass(_.params.bulletClass)&&_.paginationContainer.toggleClass(_.params.paginationHiddenClass),_.emit("onClick",_,e))},300)),n<300&&i-A<300&&(E&&clearTimeout(E),_.emit("onDoubleTap",_,e))),A=Date.now(),setTimeout(function(){_&&(_.allowClick=!0)},0),!C||!k||!_.swipeDirection||0===_.touches.diff||P===M)return void(C=k=!1);C=k=!1;var s;if(s=_.params.followFinger?_.rtl?_.translate:-_.translate:-P,_.params.freeMode){if(s<-_.minTranslate())return void _.slideTo(_.activeIndex);if(s>-_.maxTranslate())return void(_.slides.length<_.snapGrid.length?_.slideTo(_.snapGrid.length-1):_.slideTo(_.slides.length-1));if(_.params.freeModeMomentum){if(H.length>1){var a=H.pop(),o=H.pop(),r=a.position-o.position,l=a.time-o.time;_.velocity=r/l,_.velocity=_.velocity/2,Math.abs(_.velocity)<_.params.freeModeMinimumVelocity&&(_.velocity=0),(l>150||(new window.Date).getTime()-a.time>300)&&(_.velocity=0)}else _.velocity=0;H.length=0;var h=1e3*_.params.freeModeMomentumRatio,u=_.velocity*h,c=_.translate+u;_.rtl&&(c=-c);var d,p=!1,f=20*Math.abs(_.velocity)*_.params.freeModeMomentumBounceRatio;if(c<_.maxTranslate())_.params.freeModeMomentumBounce?(c+_.maxTranslate()<-f&&(c=_.maxTranslate()-f),d=_.maxTranslate(),p=!0,z=!0):c=_.maxTranslate();else if(c>_.minTranslate())_.params.freeModeMomentumBounce?(c-_.minTranslate()>f&&(c=_.minTranslate()+f),d=_.minTranslate(),p=!0,
z=!0):c=_.minTranslate();else if(_.params.freeModeSticky){var m,g=0;for(g=0;g<_.snapGrid.length;g+=1)if(_.snapGrid[g]>-c){m=g;break}c=Math.abs(_.snapGrid[m]-c)<Math.abs(_.snapGrid[m-1]-c)||"next"===_.swipeDirection?_.snapGrid[m]:_.snapGrid[m-1],_.rtl||(c=-c)}if(0!==_.velocity)h=_.rtl?Math.abs((-c-_.translate)/_.velocity):Math.abs((c-_.translate)/_.velocity);else if(_.params.freeModeSticky)return void _.slideReset();_.params.freeModeMomentumBounce&&p?(_.updateProgress(d),_.setWrapperTransition(h),_.setWrapperTranslate(c),_.onTransitionStart(),_.animating=!0,_.wrapper.transitionEnd(function(){_&&z&&(_.emit("onMomentumBounce",_),_.setWrapperTransition(_.params.speed),_.setWrapperTranslate(d),_.wrapper.transitionEnd(function(){_&&_.onTransitionEnd()}))})):_.velocity?(_.updateProgress(c),_.setWrapperTransition(h),_.setWrapperTranslate(c),_.onTransitionStart(),_.animating||(_.animating=!0,_.wrapper.transitionEnd(function(){_&&_.onTransitionEnd()}))):_.updateProgress(c),_.updateActiveIndex()}return void((!_.params.freeModeMomentum||n>=_.params.longSwipesMs)&&(_.updateProgress(),_.updateActiveIndex()))}var v,b=0,y=_.slidesSizesGrid[0];for(v=0;v<_.slidesGrid.length;v+=_.params.slidesPerGroup)"undefined"!=typeof _.slidesGrid[v+_.params.slidesPerGroup]?s>=_.slidesGrid[v]&&s<_.slidesGrid[v+_.params.slidesPerGroup]&&(b=v,y=_.slidesGrid[v+_.params.slidesPerGroup]-_.slidesGrid[v]):s>=_.slidesGrid[v]&&(b=v,y=_.slidesGrid[_.slidesGrid.length-1]-_.slidesGrid[_.slidesGrid.length-2]);var w=(s-_.slidesGrid[b])/y;if(n>_.params.longSwipesMs){if(!_.params.longSwipes)return void _.slideTo(_.activeIndex);"next"===_.swipeDirection&&(w>=_.params.longSwipesRatio?_.slideTo(b+_.params.slidesPerGroup):_.slideTo(b)),"prev"===_.swipeDirection&&(w>1-_.params.longSwipesRatio?_.slideTo(b+_.params.slidesPerGroup):_.slideTo(b))}else{if(!_.params.shortSwipes)return void _.slideTo(_.activeIndex);"next"===_.swipeDirection&&_.slideTo(b+_.params.slidesPerGroup),"prev"===_.swipeDirection&&_.slideTo(b)}}},_._slideTo=function(e,t){return _.slideTo(e,t,!0,!0)},_.slideTo=function(e,t,i,n){"undefined"==typeof i&&(i=!0),"undefined"==typeof e&&(e=0),e<0&&(e=0),_.snapIndex=Math.floor(e/_.params.slidesPerGroup),_.snapIndex>=_.snapGrid.length&&(_.snapIndex=_.snapGrid.length-1);var s=-_.snapGrid[_.snapIndex];_.params.autoplay&&_.autoplaying&&(n||!_.params.autoplayDisableOnInteraction?_.pauseAutoplay(t):_.stopAutoplay()),_.updateProgress(s);for(var a=0;a<_.slidesGrid.length;a++)-Math.floor(100*s)>=Math.floor(100*_.slidesGrid[a])&&(e=a);return!(!_.params.allowSwipeToNext&&s<_.translate&&s<_.minTranslate())&&(!(!_.params.allowSwipeToPrev&&s>_.translate&&s>_.maxTranslate()&&(_.activeIndex||0)!==e)&&("undefined"==typeof t&&(t=_.params.speed),_.previousIndex=_.activeIndex||0,_.activeIndex=e,_.rtl&&-s===_.translate||!_.rtl&&s===_.translate?(_.params.autoHeight&&_.updateAutoHeight(),_.updateClasses(),"slide"!==_.params.effect&&_.setWrapperTranslate(s),!1):(_.updateClasses(),_.onTransitionStart(i),0===t?(_.setWrapperTranslate(s),_.setWrapperTransition(0),_.onTransitionEnd(i)):(_.setWrapperTranslate(s),_.setWrapperTransition(t),_.animating||(_.animating=!0,_.wrapper.transitionEnd(function(){_&&_.onTransitionEnd(i)}))),!0)))},_.onTransitionStart=function(e){"undefined"==typeof e&&(e=!0),_.params.autoHeight&&_.updateAutoHeight(),_.lazy&&_.lazy.onTransitionStart(),e&&(_.emit("onTransitionStart",_),_.activeIndex!==_.previousIndex&&(_.emit("onSlideChangeStart",_),_.activeIndex>_.previousIndex?_.emit("onSlideNextStart",_):_.emit("onSlidePrevStart",_)))},_.onTransitionEnd=function(e){_.animating=!1,_.setWrapperTransition(0),"undefined"==typeof e&&(e=!0),_.lazy&&_.lazy.onTransitionEnd(),e&&(_.emit("onTransitionEnd",_),_.activeIndex!==_.previousIndex&&(_.emit("onSlideChangeEnd",_),_.activeIndex>_.previousIndex?_.emit("onSlideNextEnd",_):_.emit("onSlidePrevEnd",_))),_.params.hashnav&&_.hashnav&&_.hashnav.setHash()},_.slideNext=function(e,t,i){if(_.params.loop){if(_.animating)return!1;_.fixLoop();_.container[0].clientLeft;return _.slideTo(_.activeIndex+_.params.slidesPerGroup,t,e,i)}return _.slideTo(_.activeIndex+_.params.slidesPerGroup,t,e,i)},_._slideNext=function(e){return _.slideNext(!0,e,!0)},_.slidePrev=function(e,t,i){if(_.params.loop){if(_.animating)return!1;_.fixLoop();_.container[0].clientLeft;return _.slideTo(_.activeIndex-1,t,e,i)}return _.slideTo(_.activeIndex-1,t,e,i)},_._slidePrev=function(e){return _.slidePrev(!0,e,!0)},_.slideReset=function(e,t,i){return _.slideTo(_.activeIndex,t,e)},_.setWrapperTransition=function(e,t){_.wrapper.transition(e),"slide"!==_.params.effect&&_.effects[_.params.effect]&&_.effects[_.params.effect].setTransition(e),_.params.parallax&&_.parallax&&_.parallax.setTransition(e),_.params.scrollbar&&_.scrollbar&&_.scrollbar.setTransition(e),_.params.control&&_.controller&&_.controller.setTransition(e,t),_.emit("onSetTransition",_,e)},_.setWrapperTranslate=function(e,t,i){var n=0,s=0,o=0;_.isHorizontal()?n=_.rtl?-e:e:s=e,_.params.roundLengths&&(n=a(n),s=a(s)),_.params.virtualTranslate||(_.support.transforms3d?_.wrapper.transform("translate3d("+n+"px, "+s+"px, "+o+"px)"):_.wrapper.transform("translate("+n+"px, "+s+"px)")),_.translate=_.isHorizontal()?n:s;var r,l=_.maxTranslate()-_.minTranslate();r=0===l?0:(e-_.minTranslate())/l,r!==_.progress&&_.updateProgress(e),t&&_.updateActiveIndex(),"slide"!==_.params.effect&&_.effects[_.params.effect]&&_.effects[_.params.effect].setTranslate(_.translate),_.params.parallax&&_.parallax&&_.parallax.setTranslate(_.translate),_.params.scrollbar&&_.scrollbar&&_.scrollbar.setTranslate(_.translate),_.params.control&&_.controller&&_.controller.setTranslate(_.translate,i),_.emit("onSetTranslate",_,_.translate)},_.getTranslate=function(e,t){var i,n,s,a;return"undefined"==typeof t&&(t="x"),_.params.virtualTranslate?_.rtl?-_.translate:_.translate:(s=window.getComputedStyle(e,null),window.WebKitCSSMatrix?(n=s.transform||s.webkitTransform,n.split(",").length>6&&(n=n.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),a=new window.WebKitCSSMatrix("none"===n?"":n)):(a=s.MozTransform||s.OTransform||s.MsTransform||s.msTransform||s.transform||s.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,"),i=a.toString().split(",")),"x"===t&&(n=window.WebKitCSSMatrix?a.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),"y"===t&&(n=window.WebKitCSSMatrix?a.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),_.rtl&&n&&(n=-n),n||0)},_.getWrapperTranslate=function(e){return"undefined"==typeof e&&(e=_.isHorizontal()?"x":"y"),_.getTranslate(_.wrapper[0],e)},_.observers=[],_.initObservers=function(){if(_.params.observeParents)for(var e=_.container.parents(),t=0;t<e.length;t++)l(e[t]);l(_.container[0],{childList:!1}),l(_.wrapper[0],{attributes:!1})},_.disconnectObservers=function(){for(var e=0;e<_.observers.length;e++)_.observers[e].disconnect();_.observers=[]},_.createLoop=function(){_.wrapper.children("."+_.params.slideClass+"."+_.params.slideDuplicateClass).remove();var e=_.wrapper.children("."+_.params.slideClass);"auto"!==_.params.slidesPerView||_.params.loopedSlides||(_.params.loopedSlides=e.length),_.loopedSlides=parseInt(_.params.loopedSlides||_.params.slidesPerView,10),_.loopedSlides=_.loopedSlides+_.params.loopAdditionalSlides,_.loopedSlides>e.length&&(_.loopedSlides=e.length);var i,n=[],s=[];for(e.each(function(i,a){var o=t(this);i<_.loopedSlides&&s.push(a),i<e.length&&i>=e.length-_.loopedSlides&&n.push(a),o.attr("data-swiper-slide-index",i)}),i=0;i<s.length;i++)_.wrapper.append(t(s[i].cloneNode(!0)).addClass(_.params.slideDuplicateClass));for(i=n.length-1;i>=0;i--)_.wrapper.prepend(t(n[i].cloneNode(!0)).addClass(_.params.slideDuplicateClass))},_.destroyLoop=function(){_.wrapper.children("."+_.params.slideClass+"."+_.params.slideDuplicateClass).remove(),_.slides.removeAttr("data-swiper-slide-index")},_.reLoop=function(e){var t=_.activeIndex-_.loopedSlides;_.destroyLoop(),_.createLoop(),_.updateSlidesSize(),e&&_.slideTo(t+_.loopedSlides,0,!1)},_.fixLoop=function(){var e;_.activeIndex<_.loopedSlides?(e=_.slides.length-3*_.loopedSlides+_.activeIndex,e+=_.loopedSlides,_.slideTo(e,0,!1,!0)):("auto"===_.params.slidesPerView&&_.activeIndex>=2*_.loopedSlides||_.activeIndex>_.slides.length-2*_.params.slidesPerView)&&(e=-_.slides.length+_.activeIndex+_.loopedSlides,e+=_.loopedSlides,_.slideTo(e,0,!1,!0))},_.appendSlide=function(e){if(_.params.loop&&_.destroyLoop(),"object"==typeof e&&e.length)for(var t=0;t<e.length;t++)e[t]&&_.wrapper.append(e[t]);else _.wrapper.append(e);_.params.loop&&_.createLoop(),_.params.observer&&_.support.observer||_.update(!0)},_.prependSlide=function(e){_.params.loop&&_.destroyLoop();var t=_.activeIndex+1;if("object"==typeof e&&e.length){for(var i=0;i<e.length;i++)e[i]&&_.wrapper.prepend(e[i]);t=_.activeIndex+e.length}else _.wrapper.prepend(e);_.params.loop&&_.createLoop(),_.params.observer&&_.support.observer||_.update(!0),_.slideTo(t,0,!1)},_.removeSlide=function(e){_.params.loop&&(_.destroyLoop(),_.slides=_.wrapper.children("."+_.params.slideClass));var t,i=_.activeIndex;if("object"==typeof e&&e.length){for(var n=0;n<e.length;n++)t=e[n],_.slides[t]&&_.slides.eq(t).remove(),t<i&&i--;i=Math.max(i,0)}else t=e,_.slides[t]&&_.slides.eq(t).remove(),t<i&&i--,i=Math.max(i,0);_.params.loop&&_.createLoop(),_.params.observer&&_.support.observer||_.update(!0),_.params.loop?_.slideTo(i+_.loopedSlides,0,!1):_.slideTo(i,0,!1)},_.removeAllSlides=function(){for(var e=[],t=0;t<_.slides.length;t++)e.push(t);_.removeSlide(e)},_.effects={fade:{setTranslate:function(){for(var e=0;e<_.slides.length;e++){var t=_.slides.eq(e),i=t[0].swiperSlideOffset,n=-i;_.params.virtualTranslate||(n-=_.translate);var s=0;_.isHorizontal()||(s=n,n=0);var a=_.params.fade.crossFade?Math.max(1-Math.abs(t[0].progress),0):1+Math.min(Math.max(t[0].progress,-1),0);t.css({opacity:a}).transform("translate3d("+n+"px, "+s+"px, 0px)")}},setTransition:function(e){if(_.slides.transition(e),_.params.virtualTranslate&&0!==e){var t=!1;_.slides.transitionEnd(function(){if(!t&&_){t=!0,_.animating=!1;for(var e=["webkitTransitionEnd","transitionend","oTransitionEnd","MSTransitionEnd","msTransitionEnd"],i=0;i<e.length;i++)_.wrapper.trigger(e[i])}})}}},flip:{setTranslate:function(){for(var e=0;e<_.slides.length;e++){var i=_.slides.eq(e),n=i[0].progress;_.params.flip.limitRotation&&(n=Math.max(Math.min(i[0].progress,1),-1));var s=i[0].swiperSlideOffset,a=-180*n,o=a,r=0,l=-s,h=0;if(_.isHorizontal()?_.rtl&&(o=-o):(h=l,l=0,r=-o,o=0),i[0].style.zIndex=-Math.abs(Math.round(n))+_.slides.length,_.params.flip.slideShadows){var u=_.isHorizontal()?i.find(".swiper-slide-shadow-left"):i.find(".swiper-slide-shadow-top"),c=_.isHorizontal()?i.find(".swiper-slide-shadow-right"):i.find(".swiper-slide-shadow-bottom");0===u.length&&(u=t('<div class="swiper-slide-shadow-'+(_.isHorizontal()?"left":"top")+'"></div>'),i.append(u)),0===c.length&&(c=t('<div class="swiper-slide-shadow-'+(_.isHorizontal()?"right":"bottom")+'"></div>'),i.append(c)),u.length&&(u[0].style.opacity=Math.max(-n,0)),c.length&&(c[0].style.opacity=Math.max(n,0))}i.transform("translate3d("+l+"px, "+h+"px, 0px) rotateX("+r+"deg) rotateY("+o+"deg)")}},setTransition:function(e){if(_.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),_.params.virtualTranslate&&0!==e){var i=!1;_.slides.eq(_.activeIndex).transitionEnd(function(){if(!i&&_&&t(this).hasClass(_.params.slideActiveClass)){i=!0,_.animating=!1;for(var e=["webkitTransitionEnd","transitionend","oTransitionEnd","MSTransitionEnd","msTransitionEnd"],n=0;n<e.length;n++)_.wrapper.trigger(e[n])}})}}},cube:{setTranslate:function(){var e,i=0;_.params.cube.shadow&&(_.isHorizontal()?(e=_.wrapper.find(".swiper-cube-shadow"),0===e.length&&(e=t('<div class="swiper-cube-shadow"></div>'),_.wrapper.append(e)),e.css({height:_.width+"px"})):(e=_.container.find(".swiper-cube-shadow"),0===e.length&&(e=t('<div class="swiper-cube-shadow"></div>'),_.container.append(e))));for(var n=0;n<_.slides.length;n++){var s=_.slides.eq(n),a=90*n,o=Math.floor(a/360);_.rtl&&(a=-a,o=Math.floor(-a/360));var r=Math.max(Math.min(s[0].progress,1),-1),l=0,h=0,u=0;n%4===0?(l=4*-o*_.size,u=0):(n-1)%4===0?(l=0,u=4*-o*_.size):(n-2)%4===0?(l=_.size+4*o*_.size,u=_.size):(n-3)%4===0&&(l=-_.size,u=3*_.size+4*_.size*o),_.rtl&&(l=-l),_.isHorizontal()||(h=l,l=0);var c="rotateX("+(_.isHorizontal()?0:-a)+"deg) rotateY("+(_.isHorizontal()?a:0)+"deg) translate3d("+l+"px, "+h+"px, "+u+"px)";if(r<=1&&r>-1&&(i=90*n+90*r,_.rtl&&(i=90*-n-90*r)),s.transform(c),_.params.cube.slideShadows){var d=_.isHorizontal()?s.find(".swiper-slide-shadow-left"):s.find(".swiper-slide-shadow-top"),p=_.isHorizontal()?s.find(".swiper-slide-shadow-right"):s.find(".swiper-slide-shadow-bottom");0===d.length&&(d=t('<div class="swiper-slide-shadow-'+(_.isHorizontal()?"left":"top")+'"></div>'),s.append(d)),0===p.length&&(p=t('<div class="swiper-slide-shadow-'+(_.isHorizontal()?"right":"bottom")+'"></div>'),s.append(p)),d.length&&(d[0].style.opacity=Math.max(-r,0)),p.length&&(p[0].style.opacity=Math.max(r,0))}}if(_.wrapper.css({"-webkit-transform-origin":"50% 50% -"+_.size/2+"px","-moz-transform-origin":"50% 50% -"+_.size/2+"px","-ms-transform-origin":"50% 50% -"+_.size/2+"px","transform-origin":"50% 50% -"+_.size/2+"px"}),_.params.cube.shadow)if(_.isHorizontal())e.transform("translate3d(0px, "+(_.width/2+_.params.cube.shadowOffset)+"px, "+-_.width/2+"px) rotateX(90deg) rotateZ(0deg) scale("+_.params.cube.shadowScale+")");else{var f=Math.abs(i)-90*Math.floor(Math.abs(i)/90),m=1.5-(Math.sin(2*f*Math.PI/360)/2+Math.cos(2*f*Math.PI/360)/2),g=_.params.cube.shadowScale,v=_.params.cube.shadowScale/m,b=_.params.cube.shadowOffset;e.transform("scale3d("+g+", 1, "+v+") translate3d(0px, "+(_.height/2+b)+"px, "+-_.height/2/v+"px) rotateX(-90deg)")}var y=_.isSafari||_.isUiWebView?-_.size/2:0;_.wrapper.transform("translate3d(0px,0,"+y+"px) rotateX("+(_.isHorizontal()?0:i)+"deg) rotateY("+(_.isHorizontal()?-i:0)+"deg)")},setTransition:function(e){_.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),_.params.cube.shadow&&!_.isHorizontal()&&_.container.find(".swiper-cube-shadow").transition(e)}},coverflow:{setTranslate:function(){for(var e=_.translate,i=_.isHorizontal()?-e+_.width/2:-e+_.height/2,n=_.isHorizontal()?_.params.coverflow.rotate:-_.params.coverflow.rotate,s=_.params.coverflow.depth,a=0,o=_.slides.length;a<o;a++){var r=_.slides.eq(a),l=_.slidesSizesGrid[a],h=r[0].swiperSlideOffset,u=(i-h-l/2)/l*_.params.coverflow.modifier,c=_.isHorizontal()?n*u:0,d=_.isHorizontal()?0:n*u,p=-s*Math.abs(u),f=_.isHorizontal()?0:_.params.coverflow.stretch*u,m=_.isHorizontal()?_.params.coverflow.stretch*u:0;Math.abs(m)<.001&&(m=0),Math.abs(f)<.001&&(f=0),Math.abs(p)<.001&&(p=0),Math.abs(c)<.001&&(c=0),Math.abs(d)<.001&&(d=0);var g="translate3d("+m+"px,"+f+"px,"+p+"px)  rotateX("+d+"deg) rotateY("+c+"deg)";if(r.transform(g),r[0].style.zIndex=-Math.abs(Math.round(u))+1,_.params.coverflow.slideShadows){var v=_.isHorizontal()?r.find(".swiper-slide-shadow-left"):r.find(".swiper-slide-shadow-top"),b=_.isHorizontal()?r.find(".swiper-slide-shadow-right"):r.find(".swiper-slide-shadow-bottom");0===v.length&&(v=t('<div class="swiper-slide-shadow-'+(_.isHorizontal()?"left":"top")+'"></div>'),r.append(v)),0===b.length&&(b=t('<div class="swiper-slide-shadow-'+(_.isHorizontal()?"right":"bottom")+'"></div>'),r.append(b)),v.length&&(v[0].style.opacity=u>0?u:0),b.length&&(b[0].style.opacity=-u>0?-u:0)}}if(_.browser.ie){var y=_.wrapper[0].style;y.perspectiveOrigin=i+"px 50%"}},setTransition:function(e){_.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}}},_.lazy={initialImageLoaded:!1,loadImageInSlide:function(e,i){if("undefined"!=typeof e&&("undefined"==typeof i&&(i=!0),0!==_.slides.length)){var n=_.slides.eq(e),s=n.find(".swiper-lazy:not(.swiper-lazy-loaded):not(.swiper-lazy-loading)");!n.hasClass("swiper-lazy")||n.hasClass("swiper-lazy-loaded")||n.hasClass("swiper-lazy-loading")||(s=s.add(n[0])),0!==s.length&&s.each(function(){var e=t(this);e.addClass("swiper-lazy-loading");var s=e.attr("data-background"),a=e.attr("data-src"),o=e.attr("data-srcset");_.loadImage(e[0],a||s,o,!1,function(){if(s?(e.css("background-image",'url("'+s+'")'),e.removeAttr("data-background")):(o&&(e.attr("srcset",o),e.removeAttr("data-srcset")),a&&(e.attr("src",a),e.removeAttr("data-src"))),e.addClass("swiper-lazy-loaded").removeClass("swiper-lazy-loading"),n.find(".swiper-lazy-preloader, .preloader").remove(),_.params.loop&&i){var t=n.attr("data-swiper-slide-index");if(n.hasClass(_.params.slideDuplicateClass)){var r=_.wrapper.children('[data-swiper-slide-index="'+t+'"]:not(.'+_.params.slideDuplicateClass+")");_.lazy.loadImageInSlide(r.index(),!1)}else{var l=_.wrapper.children("."+_.params.slideDuplicateClass+'[data-swiper-slide-index="'+t+'"]');_.lazy.loadImageInSlide(l.index(),!1)}}_.emit("onLazyImageReady",_,n[0],e[0])}),_.emit("onLazyImageLoad",_,n[0],e[0])})}},load:function(){var e;if(_.params.watchSlidesVisibility)_.wrapper.children("."+_.params.slideVisibleClass).each(function(){_.lazy.loadImageInSlide(t(this).index())});else if(_.params.slidesPerView>1)for(e=_.activeIndex;e<_.activeIndex+_.params.slidesPerView;e++)_.slides[e]&&_.lazy.loadImageInSlide(e);else _.lazy.loadImageInSlide(_.activeIndex);if(_.params.lazyLoadingInPrevNext)if(_.params.slidesPerView>1||_.params.lazyLoadingInPrevNextAmount&&_.params.lazyLoadingInPrevNextAmount>1){var i=_.params.lazyLoadingInPrevNextAmount,n=_.params.slidesPerView,s=Math.min(_.activeIndex+n+Math.max(i,n),_.slides.length),a=Math.max(_.activeIndex-Math.max(n,i),0);for(e=_.activeIndex+_.params.slidesPerView;e<s;e++)_.slides[e]&&_.lazy.loadImageInSlide(e);for(e=a;e<_.activeIndex;e++)_.slides[e]&&_.lazy.loadImageInSlide(e)}else{var o=_.wrapper.children("."+_.params.slideNextClass);o.length>0&&_.lazy.loadImageInSlide(o.index());var r=_.wrapper.children("."+_.params.slidePrevClass);r.length>0&&_.lazy.loadImageInSlide(r.index())}},onTransitionStart:function(){_.params.lazyLoading&&(_.params.lazyLoadingOnTransitionStart||!_.params.lazyLoadingOnTransitionStart&&!_.lazy.initialImageLoaded)&&_.lazy.load()},onTransitionEnd:function(){_.params.lazyLoading&&!_.params.lazyLoadingOnTransitionStart&&_.lazy.load()}},_.scrollbar={isTouched:!1,setDragPosition:function(e){var t=_.scrollbar,i=_.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageX:e.pageX||e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageY:e.pageY||e.clientY,n=i-t.track.offset()[_.isHorizontal()?"left":"top"]-t.dragSize/2,s=-_.minTranslate()*t.moveDivider,a=-_.maxTranslate()*t.moveDivider;n<s?n=s:n>a&&(n=a),n=-n/t.moveDivider,_.updateProgress(n),_.setWrapperTranslate(n,!0)},dragStart:function(e){var t=_.scrollbar;t.isTouched=!0,e.preventDefault(),e.stopPropagation(),t.setDragPosition(e),clearTimeout(t.dragTimeout),t.track.transition(0),_.params.scrollbarHide&&t.track.css("opacity",1),_.wrapper.transition(100),t.drag.transition(100),_.emit("onScrollbarDragStart",_)},dragMove:function(e){var t=_.scrollbar;t.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),_.wrapper.transition(0),t.track.transition(0),t.drag.transition(0),_.emit("onScrollbarDragMove",_))},dragEnd:function(e){var t=_.scrollbar;t.isTouched&&(t.isTouched=!1,_.params.scrollbarHide&&(clearTimeout(t.dragTimeout),t.dragTimeout=setTimeout(function(){t.track.css("opacity",0),t.track.transition(400)},1e3)),_.emit("onScrollbarDragEnd",_),_.params.scrollbarSnapOnRelease&&_.slideReset())},enableDraggable:function(){var e=_.scrollbar,i=_.support.touch?e.track:document;t(e.track).on(_.touchEvents.start,e.dragStart),t(i).on(_.touchEvents.move,e.dragMove),t(i).on(_.touchEvents.end,e.dragEnd)},disableDraggable:function(){var e=_.scrollbar,i=_.support.touch?e.track:document;t(e.track).off(_.touchEvents.start,e.dragStart),t(i).off(_.touchEvents.move,e.dragMove),t(i).off(_.touchEvents.end,e.dragEnd)},set:function(){if(_.params.scrollbar){var e=_.scrollbar;e.track=t(_.params.scrollbar),_.params.uniqueNavElements&&"string"==typeof _.params.scrollbar&&e.track.length>1&&1===_.container.find(_.params.scrollbar).length&&(e.track=_.container.find(_.params.scrollbar)),e.drag=e.track.find(".swiper-scrollbar-drag"),0===e.drag.length&&(e.drag=t('<div class="swiper-scrollbar-drag"></div>'),e.track.append(e.drag)),e.drag[0].style.width="",e.drag[0].style.height="",e.trackSize=_.isHorizontal()?e.track[0].offsetWidth:e.track[0].offsetHeight,e.divider=_.size/_.virtualSize,e.moveDivider=e.divider*(e.trackSize/_.size),e.dragSize=e.trackSize*e.divider,_.isHorizontal()?e.drag[0].style.width=e.dragSize+"px":e.drag[0].style.height=e.dragSize+"px",e.divider>=1?e.track[0].style.display="none":e.track[0].style.display="",_.params.scrollbarHide&&(e.track[0].style.opacity=0)}},setTranslate:function(){if(_.params.scrollbar){var e,t=_.scrollbar,i=(_.translate||0,t.dragSize);e=(t.trackSize-t.dragSize)*_.progress,_.rtl&&_.isHorizontal()?(e=-e,e>0?(i=t.dragSize-e,e=0):-e+t.dragSize>t.trackSize&&(i=t.trackSize+e)):e<0?(i=t.dragSize+e,e=0):e+t.dragSize>t.trackSize&&(i=t.trackSize-e),_.isHorizontal()?(_.support.transforms3d?t.drag.transform("translate3d("+e+"px, 0, 0)"):t.drag.transform("translateX("+e+"px)"),t.drag[0].style.width=i+"px"):(_.support.transforms3d?t.drag.transform("translate3d(0px, "+e+"px, 0)"):t.drag.transform("translateY("+e+"px)"),t.drag[0].style.height=i+"px"),_.params.scrollbarHide&&(clearTimeout(t.timeout),t.track[0].style.opacity=1,t.timeout=setTimeout(function(){t.track[0].style.opacity=0,t.track.transition(400)},1e3))}},setTransition:function(e){_.params.scrollbar&&_.scrollbar.drag.transition(e)}},_.controller={LinearSpline:function(e,t){this.x=e,this.y=t,this.lastIndex=e.length-1;var i,n;this.x.length;this.interpolate=function(e){return e?(n=s(this.x,e),i=n-1,(e-this.x[i])*(this.y[n]-this.y[i])/(this.x[n]-this.x[i])+this.y[i]):0};var s=function(){var e,t,i;return function(n,s){for(t=-1,e=n.length;e-t>1;)n[i=e+t>>1]<=s?t=i:e=i;return e}}()},getInterpolateFunction:function(e){_.controller.spline||(_.controller.spline=_.params.loop?new _.controller.LinearSpline(_.slidesGrid,e.slidesGrid):new _.controller.LinearSpline(_.snapGrid,e.snapGrid))},setTranslate:function(e,t){function n(t){e=t.rtl&&"horizontal"===t.params.direction?-_.translate:_.translate,"slide"===_.params.controlBy&&(_.controller.getInterpolateFunction(t),a=-_.controller.spline.interpolate(-e)),a&&"container"!==_.params.controlBy||(s=(t.maxTranslate()-t.minTranslate())/(_.maxTranslate()-_.minTranslate()),a=(e-_.minTranslate())*s+t.minTranslate()),_.params.controlInverse&&(a=t.maxTranslate()-a),t.updateProgress(a),t.setWrapperTranslate(a,!1,_),t.updateActiveIndex()}var s,a,o=_.params.control;if(_.isArray(o))for(var r=0;r<o.length;r++)o[r]!==t&&o[r]instanceof i&&n(o[r]);else o instanceof i&&t!==o&&n(o)},setTransition:function(e,t){function n(t){t.setWrapperTransition(e,_),0!==e&&(t.onTransitionStart(),t.wrapper.transitionEnd(function(){a&&(t.params.loop&&"slide"===_.params.controlBy&&t.fixLoop(),t.onTransitionEnd())}))}var s,a=_.params.control;if(_.isArray(a))for(s=0;s<a.length;s++)a[s]!==t&&a[s]instanceof i&&n(a[s]);else a instanceof i&&t!==a&&n(a)}},_.hashnav={init:function(){if(_.params.hashnav){_.hashnav.initialized=!0;var e=document.location.hash.replace("#","");if(e)for(var t=0,i=0,n=_.slides.length;i<n;i++){var s=_.slides.eq(i),a=s.attr("data-hash");if(a===e&&!s.hasClass(_.params.slideDuplicateClass)){var o=s.index();_.slideTo(o,t,_.params.runCallbacksOnInit,!0)}}}},setHash:function(){_.hashnav.initialized&&_.params.hashnav&&(document.location.hash=_.slides.eq(_.activeIndex).attr("data-hash")||"")}},_.disableKeyboardControl=function(){_.params.keyboardControl=!1,t(document).off("keydown",h)},_.enableKeyboardControl=function(){_.params.keyboardControl=!0,t(document).on("keydown",h)},_.mousewheel={event:!1,lastScrollTime:(new window.Date).getTime()},_.params.mousewheelControl){try{new window.WheelEvent("wheel"),_.mousewheel.event="wheel"}catch(W){(window.WheelEvent||_.container[0]&&"wheel"in _.container[0])&&(_.mousewheel.event="wheel")}!_.mousewheel.event&&window.WheelEvent,_.mousewheel.event||void 0===document.onmousewheel||(_.mousewheel.event="mousewheel"),_.mousewheel.event||(_.mousewheel.event="DOMMouseScroll")}_.disableMousewheelControl=function(){return!!_.mousewheel.event&&(_.container.off(_.mousewheel.event,u),!0)},_.enableMousewheelControl=function(){return!!_.mousewheel.event&&(_.container.on(_.mousewheel.event,u),!0)},_.parallax={setTranslate:function(){_.container.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(){c(this,_.progress)}),_.slides.each(function(){var e=t(this);e.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(){var t=Math.min(Math.max(e[0].progress,-1),1);c(this,t)})})},setTransition:function(e){"undefined"==typeof e&&(e=_.params.speed),_.container.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(){var i=t(this),n=parseInt(i.attr("data-swiper-parallax-duration"),10)||e;0===e&&(n=0),i.transition(n)})}},_._plugins=[];for(var F in _.plugins){var B=_.plugins[F](_,_.params[F]);B&&_._plugins.push(B)}return _.callPlugins=function(e){for(var t=0;t<_._plugins.length;t++)e in _._plugins[t]&&_._plugins[t][e](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5])},_.emitterEventListeners={},_.emit=function(e){_.params[e]&&_.params[e](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);var t;if(_.emitterEventListeners[e])for(t=0;t<_.emitterEventListeners[e].length;t++)_.emitterEventListeners[e][t](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);_.callPlugins&&_.callPlugins(e,arguments[1],arguments[2],arguments[3],arguments[4],arguments[5])},_.on=function(e,t){return e=d(e),_.emitterEventListeners[e]||(_.emitterEventListeners[e]=[]),_.emitterEventListeners[e].push(t),_},_.off=function(e,t){var i;if(e=d(e),"undefined"==typeof t)return _.emitterEventListeners[e]=[],_;if(_.emitterEventListeners[e]&&0!==_.emitterEventListeners[e].length){for(i=0;i<_.emitterEventListeners[e].length;i++)_.emitterEventListeners[e][i]===t&&_.emitterEventListeners[e].splice(i,1);return _}},_.once=function(e,t){e=d(e);var i=function(){t(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]),_.off(e,i)};return _.on(e,i),_},_.a11y={makeFocusable:function(e){return e.attr("tabIndex","0"),e},addRole:function(e,t){return e.attr("role",t),e},addLabel:function(e,t){return e.attr("aria-label",t),e},disable:function(e){return e.attr("aria-disabled",!0),e},enable:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){13===e.keyCode&&(t(e.target).is(_.params.nextButton)?(_.onClickNext(e),_.isEnd?_.a11y.notify(_.params.lastSlideMessage):_.a11y.notify(_.params.nextSlideMessage)):t(e.target).is(_.params.prevButton)&&(_.onClickPrev(e),_.isBeginning?_.a11y.notify(_.params.firstSlideMessage):_.a11y.notify(_.params.prevSlideMessage)),t(e.target).is("."+_.params.bulletClass)&&t(e.target)[0].click())},liveRegion:t('<span class="swiper-notification" aria-live="assertive" aria-atomic="true"></span>'),notify:function(e){var t=_.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},init:function(){_.params.nextButton&&_.nextButton&&_.nextButton.length>0&&(_.a11y.makeFocusable(_.nextButton),_.a11y.addRole(_.nextButton,"button"),_.a11y.addLabel(_.nextButton,_.params.nextSlideMessage)),_.params.prevButton&&_.prevButton&&_.prevButton.length>0&&(_.a11y.makeFocusable(_.prevButton),_.a11y.addRole(_.prevButton,"button"),_.a11y.addLabel(_.prevButton,_.params.prevSlideMessage)),t(_.container).append(_.a11y.liveRegion)},initPagination:function(){_.params.pagination&&_.params.paginationClickable&&_.bullets&&_.bullets.length&&_.bullets.each(function(){var e=t(this);_.a11y.makeFocusable(e),_.a11y.addRole(e,"button"),_.a11y.addLabel(e,_.params.paginationBulletMessage.replace(/{{index}}/,e.index()+1))})},destroy:function(){_.a11y.liveRegion&&_.a11y.liveRegion.length>0&&_.a11y.liveRegion.remove()}},_.init=function(){_.params.loop&&_.createLoop(),_.updateContainerSize(),_.updateSlidesSize(),_.updatePagination(),_.params.scrollbar&&_.scrollbar&&(_.scrollbar.set(),_.params.scrollbarDraggable&&_.scrollbar.enableDraggable()),"slide"!==_.params.effect&&_.effects[_.params.effect]&&(_.params.loop||_.updateProgress(),_.effects[_.params.effect].setTranslate()),_.params.loop?_.slideTo(_.params.initialSlide+_.loopedSlides,0,_.params.runCallbacksOnInit):(_.slideTo(_.params.initialSlide,0,_.params.runCallbacksOnInit),0===_.params.initialSlide&&(_.parallax&&_.params.parallax&&_.parallax.setTranslate(),_.lazy&&_.params.lazyLoading&&(_.lazy.load(),_.lazy.initialImageLoaded=!0))),_.attachEvents(),_.params.observer&&_.support.observer&&_.initObservers(),_.params.preloadImages&&!_.params.lazyLoading&&_.preloadImages(),_.params.autoplay&&_.startAutoplay(),_.params.keyboardControl&&_.enableKeyboardControl&&_.enableKeyboardControl(),_.params.mousewheelControl&&_.enableMousewheelControl&&_.enableMousewheelControl(),_.params.hashnav&&_.hashnav&&_.hashnav.init(),_.params.a11y&&_.a11y&&_.a11y.init(),_.emit("onInit",_)},_.cleanupStyles=function(){_.container.removeClass(_.classNames.join(" ")).removeAttr("style"),_.wrapper.removeAttr("style"),_.slides&&_.slides.length&&_.slides.removeClass([_.params.slideVisibleClass,_.params.slideActiveClass,_.params.slideNextClass,_.params.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-column").removeAttr("data-swiper-row"),_.paginationContainer&&_.paginationContainer.length&&_.paginationContainer.removeClass(_.params.paginationHiddenClass),_.bullets&&_.bullets.length&&_.bullets.removeClass(_.params.bulletActiveClass),_.params.prevButton&&t(_.params.prevButton).removeClass(_.params.buttonDisabledClass),_.params.nextButton&&t(_.params.nextButton).removeClass(_.params.buttonDisabledClass),_.params.scrollbar&&_.scrollbar&&(_.scrollbar.track&&_.scrollbar.track.length&&_.scrollbar.track.removeAttr("style"),_.scrollbar.drag&&_.scrollbar.drag.length&&_.scrollbar.drag.removeAttr("style"))},_.destroy=function(e,t){_.detachEvents(),_.stopAutoplay(),_.params.scrollbar&&_.scrollbar&&_.params.scrollbarDraggable&&_.scrollbar.disableDraggable(),_.params.loop&&_.destroyLoop(),t&&_.cleanupStyles(),_.disconnectObservers(),_.params.keyboardControl&&_.disableKeyboardControl&&_.disableKeyboardControl(),_.params.mousewheelControl&&_.disableMousewheelControl&&_.disableMousewheelControl(),_.params.a11y&&_.a11y&&_.a11y.destroy(),_.emit("onDestroy"),e!==!1&&(_=null)},_.init(),_}};i.prototype={isSafari:function(){var e=navigator.userAgent.toLowerCase();return e.indexOf("safari")>=0&&e.indexOf("chrome")<0&&e.indexOf("android")<0}(),isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),isArray:function(e){return"[object Array]"===Object.prototype.toString.apply(e)},browser:{ie:window.navigator.pointerEnabled||window.navigator.msPointerEnabled,ieTouch:window.navigator.msPointerEnabled&&window.navigator.msMaxTouchPoints>1||window.navigator.pointerEnabled&&window.navigator.maxTouchPoints>1},device:function(){var e=navigator.userAgent,t=e.match(/(Android);?[\s\/]+([\d.]+)?/),i=e.match(/(iPad).*OS\s([\d_]+)/),n=e.match(/(iPod)(.*OS\s([\d_]+))?/),s=!i&&e.match(/(iPhone\sOS)\s([\d_]+)/);return{ios:i||s||n,android:t}}(),support:{touch:window.Modernizr&&Modernizr.touch===!0||function(){return!!("ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch)}(),transforms3d:window.Modernizr&&Modernizr.csstransforms3d===!0||function(){var e=document.createElement("div").style;return"webkitPerspective"in e||"MozPerspective"in e||"OPerspective"in e||"MsPerspective"in e||"perspective"in e;
}(),flexbox:function(){for(var e=document.createElement("div").style,t="alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "),i=0;i<t.length;i++)if(t[i]in e)return!0}(),observer:function(){return"MutationObserver"in window||"WebkitMutationObserver"in window}()},plugins:{}};for(var n=(function(){var e=function(e){var t=this,i=0;for(i=0;i<e.length;i++)t[i]=e[i];return t.length=e.length,this},t=function(t,i){var n=[],s=0;if(t&&!i&&t instanceof e)return t;if(t)if("string"==typeof t){var a,o,r=t.trim();if(r.indexOf("<")>=0&&r.indexOf(">")>=0){var l="div";for(0===r.indexOf("<li")&&(l="ul"),0===r.indexOf("<tr")&&(l="tbody"),0!==r.indexOf("<td")&&0!==r.indexOf("<th")||(l="tr"),0===r.indexOf("<tbody")&&(l="table"),0===r.indexOf("<option")&&(l="select"),o=document.createElement(l),o.innerHTML=t,s=0;s<o.childNodes.length;s++)n.push(o.childNodes[s])}else for(a=i||"#"!==t[0]||t.match(/[ .<>:~]/)?(i||document).querySelectorAll(t):[document.getElementById(t.split("#")[1])],s=0;s<a.length;s++)a[s]&&n.push(a[s])}else if(t.nodeType||t===window||t===document)n.push(t);else if(t.length>0&&t[0].nodeType)for(s=0;s<t.length;s++)n.push(t[s]);return new e(n)};return e.prototype={addClass:function(e){if("undefined"==typeof e)return this;for(var t=e.split(" "),i=0;i<t.length;i++)for(var n=0;n<this.length;n++)this[n].classList.add(t[i]);return this},removeClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i++)for(var n=0;n<this.length;n++)this[n].classList.remove(t[i]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i++)for(var n=0;n<this.length;n++)this[n].classList.toggle(t[i]);return this},attr:function(e,t){if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var i=0;i<this.length;i++)if(2===arguments.length)this[i].setAttribute(e,t);else for(var n in e)this[i][n]=e[n],this[i].setAttribute(n,e[n]);return this},removeAttr:function(e){for(var t=0;t<this.length;t++)this[t].removeAttribute(e);return this},data:function(e,t){if("undefined"!=typeof t){for(var i=0;i<this.length;i++){var n=this[i];n.dom7ElementDataStorage||(n.dom7ElementDataStorage={}),n.dom7ElementDataStorage[e]=t}return this}if(this[0]){var s=this[0].getAttribute("data-"+e);return s?s:this[0].dom7ElementDataStorage&&e in this[0].dom7ElementDataStorage?this[0].dom7ElementDataStorage[e]:void 0}},transform:function(e){for(var t=0;t<this.length;t++){var i=this[t].style;i.webkitTransform=i.MsTransform=i.msTransform=i.MozTransform=i.OTransform=i.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t++){var i=this[t].style;i.webkitTransitionDuration=i.MsTransitionDuration=i.msTransitionDuration=i.MozTransitionDuration=i.OTransitionDuration=i.transitionDuration=e}return this},on:function(e,i,n,s){function a(e){var s=e.target;if(t(s).is(i))n.call(s,e);else for(var a=t(s).parents(),o=0;o<a.length;o++)t(a[o]).is(i)&&n.call(a[o],e)}var o,r,l=e.split(" ");for(o=0;o<this.length;o++)if("function"==typeof i||i===!1)for("function"==typeof i&&(n=arguments[1],s=arguments[2]||!1),r=0;r<l.length;r++)this[o].addEventListener(l[r],n,s);else for(r=0;r<l.length;r++)this[o].dom7LiveListeners||(this[o].dom7LiveListeners=[]),this[o].dom7LiveListeners.push({listener:n,liveListener:a}),this[o].addEventListener(l[r],a,s);return this},off:function(e,t,i,n){for(var s=e.split(" "),a=0;a<s.length;a++)for(var o=0;o<this.length;o++)if("function"==typeof t||t===!1)"function"==typeof t&&(i=arguments[1],n=arguments[2]||!1),this[o].removeEventListener(s[a],i,n);else if(this[o].dom7LiveListeners)for(var r=0;r<this[o].dom7LiveListeners.length;r++)this[o].dom7LiveListeners[r].listener===i&&this[o].removeEventListener(s[a],this[o].dom7LiveListeners[r].liveListener,n);return this},once:function(e,t,i,n){function s(o){i(o),a.off(e,t,s,n)}var a=this;"function"==typeof t&&(t=!1,i=arguments[1],n=arguments[2]),a.on(e,t,s,n)},trigger:function(e,t){for(var i=0;i<this.length;i++){var n;try{n=new window.CustomEvent(e,{detail:t,bubbles:!0,cancelable:!0})}catch(s){n=document.createEvent("Event"),n.initEvent(e,!0,!0),n.detail=t}this[i].dispatchEvent(n)}return this},transitionEnd:function(e){function t(a){if(a.target===this)for(e.call(this,a),i=0;i<n.length;i++)s.off(n[i],t)}var i,n=["webkitTransitionEnd","transitionend","oTransitionEnd","MSTransitionEnd","msTransitionEnd"],s=this;if(e)for(i=0;i<n.length;i++)s.on(n[i],t);return this},width:function(){return this[0]===window?window.innerWidth:this.length>0?parseFloat(this.css("width")):null},outerWidth:function(e){return this.length>0?e?this[0].offsetWidth+parseFloat(this.css("margin-right"))+parseFloat(this.css("margin-left")):this[0].offsetWidth:null},height:function(){return this[0]===window?window.innerHeight:this.length>0?parseFloat(this.css("height")):null},outerHeight:function(e){return this.length>0?e?this[0].offsetHeight+parseFloat(this.css("margin-top"))+parseFloat(this.css("margin-bottom")):this[0].offsetHeight:null},offset:function(){if(this.length>0){var e=this[0],t=e.getBoundingClientRect(),i=document.body,n=e.clientTop||i.clientTop||0,s=e.clientLeft||i.clientLeft||0,a=window.pageYOffset||e.scrollTop,o=window.pageXOffset||e.scrollLeft;return{top:t.top+a-n,left:t.left+o-s}}return null},css:function(e,t){var i;if(1===arguments.length){if("string"!=typeof e){for(i=0;i<this.length;i++)for(var n in e)this[i].style[n]=e[n];return this}if(this[0])return window.getComputedStyle(this[0],null).getPropertyValue(e)}if(2===arguments.length&&"string"==typeof e){for(i=0;i<this.length;i++)this[i].style[e]=t;return this}return this},each:function(e){for(var t=0;t<this.length;t++)e.call(this[t],t,this[t]);return this},html:function(e){if("undefined"==typeof e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t++)this[t].innerHTML=e;return this},text:function(e){if("undefined"==typeof e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t++)this[t].textContent=e;return this},is:function(i){if(!this[0])return!1;var n,s;if("string"==typeof i){var a=this[0];if(a===document)return i===document;if(a===window)return i===window;if(a.matches)return a.matches(i);if(a.webkitMatchesSelector)return a.webkitMatchesSelector(i);if(a.mozMatchesSelector)return a.mozMatchesSelector(i);if(a.msMatchesSelector)return a.msMatchesSelector(i);for(n=t(i),s=0;s<n.length;s++)if(n[s]===this[0])return!0;return!1}if(i===document)return this[0]===document;if(i===window)return this[0]===window;if(i.nodeType||i instanceof e){for(n=i.nodeType?[i]:i,s=0;s<n.length;s++)if(n[s]===this[0])return!0;return!1}return!1},index:function(){if(this[0]){for(var e=this[0],t=0;null!==(e=e.previousSibling);)1===e.nodeType&&t++;return t}},eq:function(t){if("undefined"==typeof t)return this;var i,n=this.length;return t>n-1?new e([]):t<0?(i=n+t,new e(i<0?[]:[this[i]])):new e([this[t]])},append:function(t){var i,n;for(i=0;i<this.length;i++)if("string"==typeof t){var s=document.createElement("div");for(s.innerHTML=t;s.firstChild;)this[i].appendChild(s.firstChild)}else if(t instanceof e)for(n=0;n<t.length;n++)this[i].appendChild(t[n]);else this[i].appendChild(t);return this},prepend:function(t){var i,n;for(i=0;i<this.length;i++)if("string"==typeof t){var s=document.createElement("div");for(s.innerHTML=t,n=s.childNodes.length-1;n>=0;n--)this[i].insertBefore(s.childNodes[n],this[i].childNodes[0])}else if(t instanceof e)for(n=0;n<t.length;n++)this[i].insertBefore(t[n],this[i].childNodes[0]);else this[i].insertBefore(t,this[i].childNodes[0]);return this},insertBefore:function(e){for(var i=t(e),n=0;n<this.length;n++)if(1===i.length)i[0].parentNode.insertBefore(this[n],i[0]);else if(i.length>1)for(var s=0;s<i.length;s++)i[s].parentNode.insertBefore(this[n].cloneNode(!0),i[s])},insertAfter:function(e){for(var i=t(e),n=0;n<this.length;n++)if(1===i.length)i[0].parentNode.insertBefore(this[n],i[0].nextSibling);else if(i.length>1)for(var s=0;s<i.length;s++)i[s].parentNode.insertBefore(this[n].cloneNode(!0),i[s].nextSibling)},next:function(i){return new e(this.length>0?i?this[0].nextElementSibling&&t(this[0].nextElementSibling).is(i)?[this[0].nextElementSibling]:[]:this[0].nextElementSibling?[this[0].nextElementSibling]:[]:[])},nextAll:function(i){var n=[],s=this[0];if(!s)return new e([]);for(;s.nextElementSibling;){var a=s.nextElementSibling;i?t(a).is(i)&&n.push(a):n.push(a),s=a}return new e(n)},prev:function(i){return new e(this.length>0?i?this[0].previousElementSibling&&t(this[0].previousElementSibling).is(i)?[this[0].previousElementSibling]:[]:this[0].previousElementSibling?[this[0].previousElementSibling]:[]:[])},prevAll:function(i){var n=[],s=this[0];if(!s)return new e([]);for(;s.previousElementSibling;){var a=s.previousElementSibling;i?t(a).is(i)&&n.push(a):n.push(a),s=a}return new e(n)},parent:function(e){for(var i=[],n=0;n<this.length;n++)e?t(this[n].parentNode).is(e)&&i.push(this[n].parentNode):i.push(this[n].parentNode);return t(t.unique(i))},parents:function(e){for(var i=[],n=0;n<this.length;n++)for(var s=this[n].parentNode;s;)e?t(s).is(e)&&i.push(s):i.push(s),s=s.parentNode;return t(t.unique(i))},find:function(t){for(var i=[],n=0;n<this.length;n++)for(var s=this[n].querySelectorAll(t),a=0;a<s.length;a++)i.push(s[a]);return new e(i)},children:function(i){for(var n=[],s=0;s<this.length;s++)for(var a=this[s].childNodes,o=0;o<a.length;o++)i?1===a[o].nodeType&&t(a[o]).is(i)&&n.push(a[o]):1===a[o].nodeType&&n.push(a[o]);return new e(t.unique(n))},remove:function(){for(var e=0;e<this.length;e++)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){var e,i,n=this;for(e=0;e<arguments.length;e++){var s=t(arguments[e]);for(i=0;i<s.length;i++)n[n.length]=s[i],n.length++}return n}},t.fn=e.prototype,t.unique=function(e){for(var t=[],i=0;i<e.length;i++)t.indexOf(e[i])===-1&&t.push(e[i]);return t},t}()),s=["jQuery","Zepto","Dom7"],a=0;a<s.length;a++)window[s[a]]&&e(window[s[a]]);var o;o="undefined"==typeof n?window.Dom7||window.Zepto||window.jQuery:n,o&&("transitionEnd"in o.fn||(o.fn.transitionEnd=function(e){function t(a){if(a.target===this)for(e.call(this,a),i=0;i<n.length;i++)s.off(n[i],t)}var i,n=["webkitTransitionEnd","transitionend","oTransitionEnd","MSTransitionEnd","msTransitionEnd"],s=this;if(e)for(i=0;i<n.length;i++)s.on(n[i],t);return this}),"transform"in o.fn||(o.fn.transform=function(e){for(var t=0;t<this.length;t++){var i=this[t].style;i.webkitTransform=i.MsTransform=i.msTransform=i.MozTransform=i.OTransform=i.transform=e}return this}),"transition"in o.fn||(o.fn.transition=function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t++){var i=this[t].style;i.webkitTransitionDuration=i.MsTransitionDuration=i.msTransitionDuration=i.MozTransitionDuration=i.OTransitionDuration=i.transitionDuration=e}return this})),window.Swiper=i}(),"undefined"!=typeof module?module.exports=window.Swiper:"function"==typeof define&&define.amd&&define([],function(){"use strict";return window.Swiper}),jQuery(document).ready(function(e){function t(){var t=e(window).scrollTop();d.length>0?n(t):i(t),m=t,f=!1}function i(e){m-e>g?l.removeClass("is-hidden"):e-m>g&&e>v&&l.addClass("is-hidden")}function n(e){var t=d.offset().top-h.height()-l.height();m>=e?e<t?(l.removeClass("is-hidden"),h.removeClass("fixed slide-up"),d.removeClass("secondary-nav-fixed")):m-e>g&&(l.removeClass("is-hidden"),h.removeClass("slide-up").addClass("fixed"),d.addClass("secondary-nav-fixed")):e>t+v?(l.addClass("is-hidden"),h.addClass("fixed slide-up"),d.addClass("secondary-nav-fixed")):e>t&&(l.removeClass("is-hidden"),h.addClass("fixed").removeClass("slide-up"),d.addClass("secondary-nav-fixed"))}var s=300,a=1200,o=700,r=e(".cd-top");e(window).scroll(function(){e(this).scrollTop()>s?r.addClass("cd-is-visible"):r.removeClass("cd-is-visible cd-fade-out"),e(this).scrollTop()>a&&r.addClass("cd-fade-out")}),r.on("click",function(t){t.preventDefault(),e("body,html").animate({scrollTop:0},o)}),e(".selectMenu").selectmenu({}),e(".contact-interests").selectmenu({});var l=(new Swiper("#swiper-container1",{speed:400,pagination:".swiper-pagination",prevButton:".swiper-button-prev",nextButton:".swiper-button-next"}),new Swiper("#swiper-container2",{speed:400,pagination:".swiper-pagination",prevButton:".swiper-button-prev",nextButton:".swiper-button-next"}),e(".auto-hide-header")),h=e(".secondary-nav"),u=e(".left-nav"),c=e(".auto-hide-header .nav-trigger span em"),d=e(".sub-nav-hero"),p=l.height(),f=!1,m=0,g=10,v=150;l.on("click",".nav-trigger",function(e){e.preventDefault(),h.toggleClass("nav-open"),c.toggleClass("close-icon")}),l.on("click","ul li a",function(e){var t=window.innerWidth;t<970&&(e.preventDefault(),h.toggleClass("nav-open"),c.toggleClass("close-icon"))}),u.on("click",".nav-trigger",function(e){e.preventDefault(),u.toggleClass("aside-nav-open")}),u.on("click","ul li a",function(e){var t=window.innerWidth;t<970&&(e.preventDefault(),u.toggleClass("aside-nav-open"))}),e(window).on("scroll",function(){f||(f=!0,window.requestAnimationFrame?requestAnimationFrame(t):setTimeout(t,250))}),e(window).on("resize",function(){p=l.height()})});
//# sourceMappingURL=data:application/json;base64,
